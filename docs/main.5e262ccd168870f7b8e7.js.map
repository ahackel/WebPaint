{"version":3,"sources":["webpack://web-paint/./src/ts/views/View.ts","webpack://web-paint/./src/ts/config.ts","webpack://web-paint/./src/ts/utils/Rect.ts","webpack://web-paint/./src/ts/math/Vector.ts","webpack://web-paint/./src/ts/utils/Utils.ts","webpack://web-paint/./src/ts/storage/LocalForageAdapter.ts","webpack://web-paint/./src/ts/storage/ImageStorage.ts","webpack://web-paint/./src/ts/views/Thumbnail.ts","webpack://web-paint/./src/ts/views/BookView.ts","webpack://web-paint/./src/ts/palettes/Palette.ts","webpack://web-paint/./src/ts/palettes/ColorPalette.ts","webpack://web-paint/./src/ts/palettes/SizePalette.ts","webpack://web-paint/./src/ts/tools/Tool.ts","webpack://web-paint/./src/ts/tools/PenTool.ts","webpack://web-paint/./src/ts/palettes/ShapePalette.ts","webpack://web-paint/./src/ts/Layer.ts","webpack://web-paint/./src/ts/CanvasLayer.ts","webpack://web-paint/./src/ts/ImageLayer .ts","webpack://web-paint/./src/ts/tools/SelectionTool.ts","webpack://web-paint/./src/ts/Toolbar.ts","webpack://web-paint/./src/ts/History.ts","webpack://web-paint/./src/ts/views/PaintView.ts","webpack://web-paint/./src/ts/storage/Server.ts","webpack://web-paint/./src/ts/storage/DropboxStorage.ts","webpack://web-paint/./src/ts/views/SettingsView.ts","webpack://web-paint/./src/ts/app.ts","webpack://web-paint/./src/css/painter.css","webpack://web-paint/./src/css/painter.css?effd","webpack://web-paint/webpack/bootstrap","webpack://web-paint/webpack/runtime/compat get default export","webpack://web-paint/webpack/runtime/define property getters","webpack://web-paint/webpack/runtime/global","webpack://web-paint/webpack/runtime/hasOwnProperty shorthand","webpack://web-paint/webpack/runtime/make namespace object","webpack://web-paint/webpack/runtime/jsonp chunk loading","webpack://web-paint/webpack/startup"],"names":["View","id","this","_element","document","getElementById","console","error","hide","hasChildNodes","removeChild","firstChild","classList","remove","add","visible","toggle","contains","config","Rect","x","y","width","height","Vector","v","Math","round","minX","minY","maxX","maxY","Utils","s","invScalar","sqrt","divideScalar","length","dx","dy","distanceToSq","alpha","upload","accept","Promise","resolve","input","createElement","type","onchange","files","file","click","pointerEventsSupported","window","PointerEvent","log","message","optionalParams","addClick","element","callback","scrollStartX","scrollStartY","isTracking","startTimeStamp","scrolled","supportScrolling","mouseUp","event","preventDefault","stopPropagation","call","target","touchStart","touches","touch","changedTouches","identifier","pageX","pageY","timeStamp","addEventListener","touchMove","passive","touchEnd","elementFromPoint","abs","removeEventListener","addLongClick","timer","caller","called","down","setTimeout","up","stopImmediatePropagation","clearTimeout","lerp","a","b","clamp","lower","upper","n","min","max","require","LocalForageAdapter","_imageStore","localforage","name","getItem","value","setItem","removeItem","keys","param","iterate","clear","imageStorage","loadFileMeta","_adapter","migrate","_urls","_fileMeta","changeDate","ContainsImage","newChangeDate","Date","now","SetFileChangeDate","includes","date","adapter","loadImageUrl","url","img","Image","src","decode","onload","urls","loadBlob","blob","URL","createObjectURL","revokeObjectURL","dispatchChangeEvent","then","filter","_changeListeners","push","change","changeListener","count","zip","JSZip","fetch","r","generateAsync","zipFile","forEach","path","async","buffer","Blob","saveImage","needsRefresh","startsWith","endsWith","newId","replace","data","location","reload","amount","size","Thumbnail","parent","onImageSelected","style","opacity","loadImage","appendChild","_imageUrl","updateBackgroundImages","_overlayUrl","offsetParent","imageUrl","overlayUrl","backgroundImage","join","BookView","onSettingsClicked","getElementsByClassName","updateImages","_thumbnails","i","imageId","padStart","thumbnail","Palette","options","_options","_optionElements","_selectedIndex","createOptions","show","collapse","_expandedPalette","updateSelectedOptionElement","_selectedElement","selectedOption","index","indexOf","selectedIndex","addSelectedOption","addOptionElements","collapseAll","isCollapsed","expand","addOptionElement","updateOptionsWidth","splice","recreateOptions","_optionsElement","addArrowElement","option","dataset","optionLongClicked","optionClicked","updateOptionElement","onSelectionChanged","ColorPalette","background","SizePalette","innerHTML","Tool","painter","buttonId","_painter","_buttonElement","color","lineWidth","brushCanvas","_bufferCtx","getContext","imageSmoothingQuality","imageSmoothingEnabled","createBufferCtx","delta","PenTool","operation","_operation","createBrushCtx","_brushCtx","captureAutoMask","position","clone","_points","getWidth","pressure","speed","_widths","_startIndex","ctx","baseLayer","fillStyle","strokeStyle","globalCompositeOperation","requestDrawPath","recordHistoryState","_drawPathRequested","drawPath","drawConnectedLines","slice","points","widths","pointCount","lineCap","lineJoin","start","startWidth","beginPath","arc","PI","fill","lineTo","stroke","radius","drawImage","canvas","newPoints","interpolatePoints","concat","numSegments","lastWidth","maxWidthDifference","newPoint","segmentLength","end","dist","distanceTo","control","previous","tangent","subtract","normalize","multiplyScalar","pointOnQuadraticCurve","f1","f2","f3","autoMaskCtx","getBufferCtx","ShapePalette","_shapeIds","shapeId","addShapeFromImageId","stampId","addOption","deleteShape","removeOption","Layer","tag","_startScale","_startRotation","_position","_scale","_rotation","_lastTouchStartTime","_pointers","_index","_width","_height","pointerEvents","transform","bindEventListeners","scale","rotation","addEventListeners","removeEventListeners","setPositionAndSize","save","setTransform","rotate","translate","restore","pointerDown","onDoubleTap","setPointerCapture","pointerId","addPointerEvent","doubleTap","pointerMove","pointerUp","_pinchCenter","altKey","p1","clientToPixel","p2","pinchStart","dragStart","findIndex","move","releasePointerCapture","removePointerEvent","pointers","pinchMove","dragMove","outlineWidth","outlineOffset","bind","_localDragPosition","center","_pinchStartDist","_pinchStartRotation","atan2","distance","angleChange","position1","rect","parentElement","getBoundingClientRect","isPortraitOrientation","nx","clientX","left","ny","clientY","top","CanvasLayer","_ctx","getImageData","putImageData","image","clearRect","ImageLayer","resize","naturalWidth","naturalHeight","SelectionTool","selectionLayerId","_selection","Empty","_deleteButton","clearSelection","_stampButton","paintSelectionToCanvas","_saveButton","saveSelectionAsNewStamp","_downloadButton","selectionLayer","toBlob","saveAs","hasFloatingSelection","getLayer","_hasFloatingSelection","toggleFloatingSelectionButtons","_isInShapesPalette","createSelectionLayer","isInShapesPalette","destroySelectionLayer","getClampedPosition","startNewSelection","requestDrawSelectionOutline","cutSelection","floating","_startPosition","setLineDash","_drawSelectionOutlineRequested","updateSelectionAndDrawOutline","code","setImage","strokeRect","removeLayer","addCanvasLayer","pixels","cy","cx","selection","isEmpty","drawToCanvas","Toolbar","History","_states","shift","canUndo","canRedo","PaintView","onBackClicked","_history","_sheet","createButtons","createToolbar","createPalettes","createTools","_color","_stamp","_opacity","_lineWidth","_autoMaskCtx","_layers","_undoButton","undo","_redoButton","redo","_importImageButton","setTool","selectionTool","setImageUrl","layer","Object","addLayer","overlayLayer","removeOverlay","createOverlay","penButton","markerTool","eraserButton","eraserTool","selectionButton","selectAll","_tools","addTool","tool","_mainToolbar","_contextToolbar","_sizePalette","_colorPalette","_shapePalette","stamp","_currentTool","disable","enable","setVisible","keyDown","cancelable","isVisible","isPrimary","buttons","_currentTouchId","getPointerEventPosition","screenToSheet","getNormalizedPointerPressure","isPressed","pointerType","touchType","force","targetTouches","getTouchEventPosition","radiusX","radiusY","getNormalizedTouchPressure","findTouch","_lastPointerData","fillRect","updateUndoButtons","recordState","getData","setDirty","putData","getCurrentState","_imageId","setOverlay","ResetHistory","_isDirty","_lastSaveTimestamp","_autoMaskCaptured","requestAnimationFrame","tick","_tickTimeStamp","imageData","p","screen","scaleFactor","server","_host","localStorage","_userId","userId","downloadDefaultAssets","uploadUserContent","createDirectory","host","fileName","postImage","getPathInfo","res","ok","json","info","isFile","downloadImage","directoryName","method","headers","body","dropboxStorage","_isAuthorized","SYNC_BOTH","SYNC_UPLOAD","SYNC_DOWNLOAD","token","getAccessTokenFromUrl","authorize","_dbx","DropboxAuth","clientId","getAuthenticationUrl","href","isAuthorized","syncFolder","mode","listFolder","serverFiles","server_modified","getTime","GetFileChangeDate","path_lower","existingEntry","find","existingChangeDate","dbx","filesListFolder","result","entries","filesDownload","status","fileBlob","filesUpload","contents","filesCreateFolderV2","parseQueryString","hash","access_token","str","ret","create","trim","split","parts","key","val","undefined","decodeURIComponent","Array","isArray","Dropbox","accessToken","authTokenRevoke","ConsoleLogHTML","SettingsView","querySelector","_hostElement","onblur","_userIdElement","_connectButton","_disconnectButton","updateButtons","_syncButton","sync","generateBackupArchive","zipBlob","importBackupArchive","updateInfo","confirm","connect","innerText","bytes","decimals","k","dm","sizes","floor","parseFloat","pow","toFixed","library","fas","dom","App","_settingsView","openView","_bookView","OnResize","_paintView","ontouchmove","test","navigator","platform","appVersion","match","parseInt","docWidth","documentElement","clientWidth","docHeight","clientHeight","portrait","isLargeScreen","viewWidth","viewHeight","horizontalPixelSize","verticalPixelSize","virtualPixelSize","fontSize","view","_activeView","app","localForage","___CSS_LOADER_EXPORT___","module","__webpack_module_cache__","__webpack_require__","moduleId","exports","__webpack_modules__","m","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","179","deferredModules","checkDeferredModules","webpackJsonpCallback","parentChunkLoadingFunction","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","apply","chunkLoadingGlobal","self","checkDeferredModulesImpl","deferredModule","fulfilled","j","depId","startup"],"mappings":"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","file":"main.5e262ccd168870f7b8e7.js","sourcesContent":["export class View {\n\n\tprotected _element: HTMLDivElement;\n\n\tconstructor(id: string) {\n\t\tthis._element = <HTMLDivElement>document.getElementById(id);\n\t\tif (!this._element){\n\t\t\tconsole.error(`Could not find element with id ${id}`);\n\t\t}\n\t\tthis.hide();\n\t}\n\n\tclear(){\n\t\twhile (this._element.hasChildNodes()) {\n\t\t\tthis._element.removeChild(<HTMLElement>this._element.firstChild);\n\t\t}\n\t}\n\n\tshow():void {\n\t\tthis._element.classList.remove(\"hidden\");\n\t}\n\n\thide():void {\n\t\tthis._element.classList.add(\"hidden\");\n\t}\n\t\n\tsetVisible(visible: boolean){\n\t\tthis._element.classList.toggle(\"hidden\", !visible);\n\t}\n\n\tisVisible(): boolean {\n\t\treturn !this._element.classList.contains(\"hidden\");\n\t}\n}\n","interface IImageConfig{\n    overlay: string;\n}\n\ninterface IAppConfig{\n    debug: boolean;\n    doubleTapDelay: number;\n    longClickDelay: number;\n    minScrollDistance: number;\n    maxScrollDelay: number;\n    maxShapeCount: number;\n    usePointerEvents: boolean;\n    fullScreenCanvas: boolean;\n    pixelPerfect: boolean;\n    imageSmoothing: boolean;\n    useAutoMask: boolean;\n    maxUndoSteps: number;\n    saveInterval: number;\n    width: number;\n    height: number;\n    imageCount: number;\n    useHtmlLog: boolean;\n}\n\nexport const config: IAppConfig = {\n    debug: true,\n    doubleTapDelay: 400,\n    longClickDelay: 1000,\n    minScrollDistance: 30,\n    maxScrollDelay: 500,\n    maxShapeCount: 64,\n    usePointerEvents: true,\n    fullScreenCanvas: true, // If true fills the whole screen with the canvas, if false makes sure the whole canvas fits on the screen\n    pixelPerfect: false,   // Make sure to perform painting operations on rounded pixel positions\n    imageSmoothing: true,  // Whether to use smooth pixel filtering or to draw hard pixel edges\n    useAutoMask: false,\n    maxUndoSteps: 10,\n    saveInterval: 5000,\n    width: 1024,\n    height: 768,\n    imageCount: 32,\n    useHtmlLog: true\n};","export default class Rect {\n    public x: number;\n    public y: number;\n    public width: number;\n    public height: number;\n    \n    get minX() { return this.x; }\n    get minY() { return this.y; }\n    get maxX() { return this.x + this.width; }\n    get maxY() { return this.y + this.height; }\n\n    constructor(x: number, y: number, width: number, height: number) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    \n    isEmpty(): boolean{\n        return this.width <= 0 || this.height <= 0;\n    }\n    \n    static Empty(): Rect{\n        return new Rect(0, 0, 0, 0);\n    }\n}","import * as Utils from \"../utils/Utils\";\n\nexport default class Vector {\n    public x: number;\n    public y: number;\n\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    \n    set(x = 0, y = x){\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    clone(): Vector{\n        return new Vector(this.x, this.y);\n    }\n\n    add(v: Vector){\n        this.x += v.x;\n        this.y += v.y;\n        return this;\n    }\n\n    subtract(v: Vector){\n        this.x -= v.x;\n        this.y -= v.y;\n        return this;\n    }\n\n    round(){\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n    \n    clamp(minX: number, minY: number, maxX: number, maxY: number){\n        this.x = Utils.clamp(minX, maxX, this.x);\n        this.y = Utils.clamp(minY, maxY, this.y);\n        return this;\n    }\n\n    invert() {\n        this.x *= -1;\n        this.y *= -1;\n        return this;\n    };\n\n    multiplyScalar(s: number) {\n        this.x *= s;\n        this.y *= s;\n        return this;\n    };\n\n    divideScalar(s: number) {\n        if(s === 0) {\n            this.x = 0;\n            this.y = 0;\n        } else {\n            var invScalar = 1 / s;\n            this.x *= invScalar;\n            this.y *= invScalar;\n        }\n        return this;\n    };\n    \n    length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    } \n    \n    normalize() {\n        return this.divideScalar(this.length());\n    }\n\n    distanceToSq(v: Vector) {\n        const dx = this.x - v.x, dy = this.y - v.y;\n        return dx * dx + dy * dy;\n    }\n    \n    distanceTo(v: Vector) {\n        return Math.sqrt(this.distanceToSq(v));\n    }\n\n    lerp(v: Vector, alpha: number) {\n        this.x += (v.x - this.x) * alpha;\n        this.y += (v.y - this.y) * alpha;\n        return this;\n    };\n}","import {config} from \"../config\";\nimport Rect from \"./Rect\";\nimport Vector from \"../math/Vector\";\nconst Pressure = require('pressure');\n\n// source:\n// https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\nexport function formatBytes(bytes: number, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport async function upload(accept: string): Promise<Blob> {\n    return new Promise(resolve => {\n        const input = document.createElement('input');\n        input.type = \"file\";\n        input.accept = accept; \n        input.onchange = () => {\n            if (input.files.length == 0){\n                return;\n            }\n            let file = input.files[0];\n            resolve(file);\n            input.remove();\n        }\n        input.click();\n    });\n}\n\nexport function imageToBlob(image: HTMLImageElement){\n    const canvas = document.createElement(\"canvas\");\n    canvas.id = \"imageToCanvas\";\n    canvas.width = image.naturalWidth;\n    canvas.height = image.naturalHeight;\n    const ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\", {alpha: true});\n    ctx.drawImage(image, 0 ,0);\n    return new Promise(resolve => {\n        canvas.toBlob(blob => resolve(blob));\n    })\n}\n\nexport function pointerEventsSupported(): boolean {\n    return window.PointerEvent != null;\n}\n\nexport function log(message?: any, ...optionalParams: any[]){\n    if (!config.debug){\n        return;\n    }\n    console.log(message, optionalParams);\n}\n\n\nexport function addClick(element: HTMLElement, callback: (this: HTMLElement, event: any) => any,\n                       supportScrolling: boolean = false){\n    \n    let scrollStartX: number;\n    let scrollStartY: number;\n    let touchId: number;\n    let isTracking: boolean;\n    let startTimeStamp: number;\n    let scrolled: boolean;\n    \n    element.addEventListener(\"touchstart\", touchStart, {passive: supportScrolling});\n    element.addEventListener(\"mouseup\", mouseUp);\n    \n    function mouseUp(event: Event){\n        event.preventDefault();\n        event.stopPropagation();\n        callback.call(event.target, event);\n    }\n    \n    function touchStart(event: TouchEvent){\n        if (!supportScrolling){\n            event.preventDefault();\n        }\n        \n        if (isTracking || event.touches.length > 1){\n            return;\n        }\n        const touch = event.changedTouches[0];\n\n        isTracking = true;\n        touchId = touch.identifier;\n        scrolled = false;\n        scrollStartX = touch.pageX;\n        scrollStartY = touch.pageY;\n        startTimeStamp = event.timeStamp;\n        element.classList.add(\"down\");\n\n        element.addEventListener(\"touchmove\", touchMove, {passive: supportScrolling});\n        element.addEventListener(\"touchend\", touchEnd);\n    }\n\n    function touchMove(event: TouchEvent){\n        if (!supportScrolling){\n            event.preventDefault();\n        }\n\n        if (!isTracking){\n            return;\n        }\n        const touch = event.changedTouches[0];\n        \n        // user dragged out of the element:\n        if (document.elementFromPoint(touch.pageX,touch.pageY) != event.target){\n            isTracking = false;\n            element.classList.remove(\"down\");\n        }\n\n        if (scrolled || event.timeStamp < startTimeStamp + config.maxScrollDelay){\n            if (supportScrolling &&\n                (Math.abs(touch.pageX - scrollStartX) > config.minScrollDistance ||\n                    Math.abs(touch.pageY - scrollStartY) > config.minScrollDistance)){\n                isTracking = false;\n                element.classList.remove(\"down\");\n            }\n        }\n\n        // After tapping and holding for a while the element does not start scrolling any more.\n        // In that case we don't want perform the scroll check above any more:\n        if (event.timeStamp < startTimeStamp + config.maxScrollDelay){\n            if (Math.abs(touch.pageX - scrollStartX) > 2 ||\n                Math.abs(touch.pageY - scrollStartY) > 2){\n                scrolled = true;\n            }\n        }\n    }\n\n    function touchEnd(event: TouchEvent){\n        event.preventDefault();\n        element.removeEventListener(\"touchmove\", touchMove);\n        element.removeEventListener(\"touchend\", touchEnd);\n        element.classList.remove(\"down\");\n        \n        if (!isTracking){\n            return;\n        }\n        isTracking = false;\n        touchId = null;\n\n        callback.call(event.target, event);\n    }\n}\n\nexport function addLongClick(element: HTMLElement, callback: (this: HTMLElement, event: any) => any){\n    let timer: any;\n    let caller = this;\n    let called: boolean = false;\n\n    element.addEventListener(\"touchstart\", down,{passive: true});\n    element.addEventListener(\"touchend\", up);\n    element.addEventListener(\"mousedown\", down);\n    element.addEventListener(\"mouseup\", up);\n\n    function down(event: Event) {\n        called = false;\n        timer = setTimeout(() => {\n            callback.call(caller, event);\n            called = true;\n        }, config.longClickDelay);\n    }\n\n    function up(event: Event) {\n        if (called) {\n            event.stopImmediatePropagation();\n            element.classList.remove(\"down\");\n            called = false;\n        } else {\n            clearTimeout(timer);\n        }\n    }\n}\n\nexport function createNewImageId(): string {\n    return Date.now().toString();\n}\n\nexport function lerp(a: number, b: number, alpha: number): number{\n    return a * (1 - alpha) + b * alpha;\n}\n\nexport function clamp(lower: number, upper: number, n: number): number{\n    return Math.min(upper, Math.max(lower, n));\n}\n\nexport function lerpColor(color1: number, color2: number, alpha: number): number{\n    if (alpha == 0){\n        return color1;\n    }\n\n    if (alpha == 1){\n        return color2;\n    }\n\n    const aa = (color1 & 0xff000000) >> 24;\n    const ba = (color1 & 0x00ff0000) >> 16;\n    const ga = (color1 & 0x0000ff00) >> 8;\n    const ra = (color1 & 0x000000ff);\n\n    const ab = (color2 & 0xff000000) >> 24;\n    const bb = (color2 & 0x00ff0000) >> 16;\n    const gb = (color2 & 0x0000ff00) >> 8;\n    const rb = (color2 & 0x000000ff);\n\n    const r = Math.floor(lerp(ra, rb, alpha));\n    const g = Math.floor(lerp(ga, gb, alpha));\n    const b = Math.floor(lerp(ba, bb, alpha));\n    const a = 255; //Math.floor(Utils.lerp(aa, ab, alpha));\n\n    return r + (g << 8) + (b << 16) + 0xFF000000;\n}\n\nexport function lerpCanvas(ctxA: CanvasRenderingContext2D, ctxB: CanvasRenderingContext2D, ctxMask: CanvasRenderingContext2D) {\n    const width = ctxA.canvas.width;\n    const height = ctxA.canvas.height;\n    const dataA = ctxA.getImageData(0, 0, width, height);\n    const dataB = ctxB.getImageData(0, 0, width, height);\n    const dataMask = ctxMask.getImageData(0, 0, width, height);\n\n    const a32 = new Uint8ClampedArray(dataA.data.buffer);\n    const b32 = new Uint8ClampedArray(dataB.data.buffer);\n    const m32 = new Uint8ClampedArray(dataMask.data.buffer);\n\n    for (let i = 0; i < width * height; i++){\n        const a = m32[i * 4 + 3] / 255;\n        a32[i * 4 + 0] = (1 - a) * a32[i * 4 + 0] + a * b32[i * 4 + 0];\n        a32[i * 4 + 1] = (1 - a) * a32[i * 4 + 1] + a * b32[i * 4 + 1];\n        a32[i * 4 + 2] = (1 - a) * a32[i * 4 + 2] + a * b32[i * 4 + 2];\n        a32[i * 4 + 3] = (1 - a) * a32[i * 4 + 3] + a * b32[i * 4 + 3];\n    }\n    ctxA.putImageData(dataA, 0, 0);\n}\n\nexport function stringToColor(h: string): number {\n    let r = 0, g = 0, b = 0;\n\n    if (h.length == 4) {\n        r = parseInt(h[1] + h[1], 16);\n        g = parseInt(h[2] + h[2], 16);\n        b = parseInt(h[3] + h[3], 16);\n    } \n    else  {\n        r = parseInt(h[1] + h[2], 16);\n        g = parseInt(h[3] + h[4], 16);\n        b = parseInt(h[5] + h[6], 16);\n    }\n\n    return 0xFF000000 + r + (g << 8) + (b << 16);\n}\n\nexport function floodFill(sourceCtx: CanvasRenderingContext2D, mask: Uint8ClampedArray,  startPosition: Vector, color: string) {\n    const threshold = 0.5;\n    const width = sourceCtx.canvas.width;\n    const height = sourceCtx.canvas.height;\n    \n    const sourceData = sourceCtx.getImageData(0, 0, width, height);\n    const sourcePixels = sourceData.data;\n\n    startPosition = startPosition.clone().round();\n    const startIndex: number = startPosition.x + startPosition.y * width;\n    \n    // const startR = sourcePixels[startIndex * 4];\n    // const startG = sourcePixels[startIndex * 4 + 1];\n    // const startB = sourcePixels[startIndex * 4 + 2];\n    // const startA = sourcePixels[startIndex * 4 + 3];\n\n    const startR = parseInt(color[1] + color[2], 16);\n    const startG = parseInt(color[3] + color[4], 16);\n    const startB = parseInt(color[5] + color[6], 16);\n\n    // take into account that transparent pixels appear white (due to white bg) but their rgb value is 0:\n    // const startBrightness = startA < 5 ? 255 : 0.333 * (startR + startG + startB);\n    const startBrightness = 0.333 * (startR + startG + startB);\n    \n    // clear alpha channel:\n    for (let i = 0; i < width * height; i++) {\n        mask[i * 4 + 3] = 0;\n    }\n\n    // start at multiple positions around start position:\n    let stack: Vector[] = [];\n    stack.push(startPosition);\n    if (startPosition.x > 1){\n        stack.push(new Vector(startPosition.x - 2, startPosition.y));\n    }\n    if (startPosition.x < width - 2){\n        stack.push(new Vector(startPosition.x + 2, startPosition.y));\n    }\n    if (startPosition.y > 1){\n        stack.push(new Vector(startPosition.x, startPosition.y - 2));\n    }\n    if (startPosition.y < height - 2){\n        stack.push(new Vector(startPosition.x, startPosition.y + 2));\n    }\n\n    while (stack.length > 0)\n    {\n        let pos = stack.pop();\n\n        if (isBorderPixel(pos.x, pos.y, false)){\n            continue;\n        }\n        \n        const minX = scanLeft(pos.x, pos.y);\n        const maxX = scanRight(pos.x, pos.y);\n        addToStack(minX, maxX, pos.y - 1);\n        addToStack(minX, maxX, pos.y + 1);\n    }\n\n    function scanLeft(x: number, y: number): number\n    {\n        let minX = x;\n        while (minX >= 0)\n        {\n            if (isBorderPixel(minX, y, true)){\n                break;\n            }\n            minX -= 1;\n        }\n        return minX + 1;\n    }\n\n    function scanRight(x: number, y: number): number\n    {\n        let maxX: number = x + 1;\n        while (maxX < width)\n        {\n            if (isBorderPixel(maxX, y, true)){\n                break;\n            }\n            maxX += 1;\n        }\n        return maxX - 1;\n    }\n    \n    function addToStack(minX: number, maxX: number, y: number)\n    {\n        if (y < 0 || y >= height)\n        {\n            return;\n        }\n\n        for (let x = minX; x <= maxX; x++)\n        {\n            if (isBorderPixel(x, y, false)){\n                continue;\n            }\n            stack.push(new Vector(x, y));\n        }\n\n    }\n\n    function isBorderPixel(x: number, y: number, setValue: boolean): boolean {\n        const index = (x + y * width) * 4;\n        const indexA = index + 3;\n        if (mask[indexA]){\n            return true;\n        }\n\n        const r = sourcePixels[index];\n        const g = sourcePixels[index + 1];\n        const b = sourcePixels[index + 2];\n        const a = sourcePixels[index + 3];\n        //\n        // let difference = Math.max(\n        //     Math.abs(r - startR),\n        //     Math.abs(g - startG),\n        //     Math.abs(b - startB),\n        //     Math.abs(a - startA)\n        // ) / 255;\n        const brightness = 0.333 * (r + g + b);\n        \n        if (a < 250 || brightness >= startBrightness){\n            if (setValue){\n                mask[indexA] = 255;\n            }\n            return false;               \n        }\n        \n        // if (difference < threshold){\n        //     if (setValue){\n        //         mask[indexA] = 255;\n        //     }\n        //     return false;\n        // }\n\n        // if (setValue) {\n        //     mask[indexA] = (1 - difference) * 255;\n        // }\n        return true;\n    }\n}\n\nexport function getVisiblePixelFrame(ctx: CanvasRenderingContext2D, rect: Rect): Rect {\n    let {x, y, width, height} = rect;\n\n    if (width <= 0 || height <= 0){\n        return Rect.Empty();\n    }\n    \n    const data = ctx.getImageData(x, y, width, height);\n    const pixels = data.data;\n    \n    let minX = width;\n    let maxX = 0;\n    let minY = height;\n    let maxY = 0;\n\n    for (let cy = 0; cy < height; cy++) {\n        for (let cx = 0; cx < width; cx++) {\n            if (pixels[(cx + cy * width) * 4 + 3]){\n                minX = cx < minX ? cx : minX;\n                maxX = cx > maxX ? cx : maxX;\n                minY = cy < minY ? cy : minY;\n                maxY = cy > maxY ? cy : maxY;\n            }\n        }\n    }\n    \n    x += minX;\n    y += minY;\n    width = Math.max(0, maxX - minX + 1);\n    height = Math.max(0, maxY - minY + 1);\n    return new Rect(x, y, width, height); \n}\n\nexport function dilateMask(pixels: Uint8ClampedArray, width: number, height: number) {\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width - 1; x++) {\n            const i = (x + y * width) * 4 + 3;\n            if (pixels[i + 4]){\n                pixels[i] = 255;\n            }\n        }\n        for (let x = width - 1; x > 0; x--) {\n            const i = (x + y * width) * 4 + 3;\n            if (pixels[i - 4]){\n                pixels[i] = 255;\n            }\n        }\n    }\n    for (let x = 0; x < width; x++) {\n        for (let y = 0; y < height - 1; y++) {\n            const i = (x + y * width) * 4 + 3;\n            if (pixels[i + 4 * width]){\n                pixels[i] = 255;\n            }\n        }\n        for (let y = height - 1; y > 0; y--) {\n            const i = (x + y * width) * 4 + 3;\n            if (pixels[i - 4 * width]){\n                pixels[i] = 255;\n            }\n        }\n    }\n}","import localforage from 'localforage';\nimport StorageAdapter from \"./StorageAdapter\";\n\nexport default class LocalForageAdapter extends StorageAdapter{\n\n    private _imageStore = localforage.createInstance({name: \"ImageStore\"});\n\n    getItem(id: string): Promise<unknown> {\n        return this._imageStore.getItem(id);\n    }\n\n    setItem(id: string, value: unknown): Promise<unknown> {\n        return this._imageStore.setItem(id, value);\n    }\n    \n    removeItem(id: string): Promise<unknown> {\n        return this._imageStore.removeItem(id);\n    }\n\n    keys(): Promise<unknown> {\n        return this._imageStore.keys()\n    }\n\n    iterate(param: (blob: Blob, id: string, iteration: number) => void): Promise<unknown> {\n        return this._imageStore.iterate(param)\n    }\n    \n    clear() {\n        return this._imageStore.clear();\n    }\n}","import 'whatwg-fetch';\nimport LocalForageAdapter from \"./LocalForageAdapter\";\nimport StorageAdapter from \"./StorageAdapter\";\nimport JSZip from \"jszip\";\n\ninterface IFileMeta {\n\tchangeDate: number\n}\n\ntype IFileMetaList = { [id: string]: IFileMeta };\n\nclass ImageStorage {\n\n\tprivate _adapter: StorageAdapter;\n\tprivate _changeListeners: Function[];\n\tprivate _urls: { [id: string]: string }\n\tprivate _fileMeta: IFileMetaList\n\t\n\tconstructor() {\n\t\tthis.loadFileMeta();\n\t}\n\t\n\tpublic get adapter() {\n\t\tif (!this._adapter) {\n\t\t\tthis._adapter = new LocalForageAdapter();\n\t\t\tthis.migrate();\n\t\t}\n\t\treturn this._adapter \n\t}\n\t\n\tpublic get urls(){\n\t\tif (!this._urls){\n\t\t\tthis._urls = {};\n\t\t}\n\t\treturn this._urls;\n\t}\n\t\n\tasync GetFileChangeDate(id: string){\n\t\tif (id in this._fileMeta){\n\t\t\treturn this._fileMeta[id].changeDate;\n\t\t}\n\t\t\n\t\tif (await this.ContainsImage(id)){\n\t\t\t// add missing entry\n\t\t\tconst newChangeDate = Date.now();\n\t\t\tthis.SetFileChangeDate(id, newChangeDate);\n\t\t\treturn newChangeDate;\n\t\t}\n\t\t\n\t\treturn 0;\n\t}\n\t\n\tasync ContainsImage(id: string){\n\t\tvar keys = <string[]> await this.keys();\n\t\treturn keys.includes(id);\n\t}\n\n\tasync SetFileChangeDate(id: string, date: number){\n\t\tthis._fileMeta[id] = { changeDate: date };\n\t\tawait this.adapter.setItem(\"file-meta\", this._fileMeta);\n\t}\n\n\tpublic async loadImage(id: string): Promise<HTMLImageElement> {\n\t\tconst url: string = await this.loadImageUrl(id);\n\t\t\n\t\tif (!url){\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tconst img = new Image();\n\t\timg.id = id;\n\t\timg.src = url;\n\n\t\tif (img.decode != null) {\n\t\t\tawait img.decode();\n\t\t\treturn img;\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\timg.onload = () => resolve(img);\n\t\t});\n\t}\n\t\n\n\tpublic async loadImageUrl(id: string): Promise<string> {\n\t\tif (id in this.urls){\n\t\t\treturn this.urls[id];\n\t\t}\n\t\t\n\t\tconst blob = await this.loadBlob(id);\n\t\tif (!blob){\n\t\t\treturn null;\n\t\t}\n\n\t\tconst url = URL.createObjectURL(blob);\n\t\tthis.urls[id] = url;\n\t\treturn url;\n\t}\n\n\tprivate loadBlob(id: string): Promise<Blob> {\n\t\treturn <Promise<Blob>>this.adapter.getItem(id)\n\t}\n\n\tpublic async saveImage(id: string, blob: Blob, changeDate: number = Date.now()){\n\t\ttry{\n\t\t\tawait this.adapter.setItem(id, blob);\n\t\t\tawait this.SetFileChangeDate(id, changeDate);\n\t\t}\n\t\tcatch (e) {\n\t\t}\n\t\t\n\t\tif (id in this.urls){\n\t\t\tURL.revokeObjectURL(this.urls[id]);\n\t\t}\n\t\tthis.urls[id] = URL.createObjectURL(blob);\n\t\t\n\t\tthis.dispatchChangeEvent(\"save\", id);\n\t}\n\t\n\tpublic deleteImage(id: string){\n\t\treturn this.adapter.removeItem(id)\n\t\t\t.then(() => {\n\t\t\t\tif (id in this.urls){\n\t\t\t\t\tURL.revokeObjectURL(this.urls[id]);\n\t\t\t\t\tdelete this.urls[id];\n\t\t\t\t}\n\t\t\t\tthis.dispatchChangeEvent(\"delete\", id);\n\t\t\t})\t\t\n\t}\n\n\tasync keys(): Promise<string[]> {\n\t\tvar keys = <string[]>await this.adapter.keys();\n\t\treturn keys.filter(x => x != \"file-meta\")\n\t}\n\n\tpublic addChangeListener(callback: Function){\n\t\tthis._changeListeners = this._changeListeners || [];\n\t\tthis._changeListeners.push(callback);\n\t}\n\n\tprivate dispatchChangeEvent(change: string, id: string) {\n\t\tfor (let changeListener of this._changeListeners) {\n\t\t\tchangeListener(change, id);\n\t\t}\n\t}\n\t\n\tpublic clear(){\n\t\tthis.adapter.clear();\n\t}\n\t\n\tpublic async generateBackupArchive(): Promise<Blob> {\n\t\tlet count = 0;\n\t\tvar keys = <string[]> await this.keys();\n\t\tvar zip = new JSZip();\n\t\t\n\t\tfor (let id of keys) {\n\t\t\tconst url = await this.loadImageUrl(id);\n\t\t\tconst blob = await fetch(url).then(r => r.blob());\n\t\t\tif (!blob){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tzip.file(id, blob);\n\t\t\tcount += 1;\n\t\t}\n\t\t\n\t\tif (count == 0){\n\t\t\treturn;\n\t\t}\n\t\t\n\t\treturn zip.generateAsync({type:\"blob\"});\n\t}\n\t\n\tpublic async importBackupArchive(zipFile: Blob) {\n\t\tconst zip = await JSZip.loadAsync(zipFile);\n\t\t\n\t\tzip.forEach(async (path, file) => {\n\t\t\tconst buffer = await file.async(\"arraybuffer\");\n\t\t\tconst blob = new Blob([buffer], {\"type\": \"image/png\"});\n\t\t\tthis.saveImage(file.name, blob);\n\t\t})\n\t}\n\t\n\tprivate async migrate(){\n\t\tlet needsRefresh = false;\n\t\tvar keys = <string[]> await this.keys();\n\n\t\tfor (let id of keys) {\n\t\t\tif (!id.startsWith(\"image\") && !id.startsWith(\"Shape\")){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (id.endsWith(\".png\")){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newId = id.replace(\"Shape\", \"shape\") + \".png\";\n\t\t\tconst data = <Blob>await this.adapter.getItem(id);\n\t\t\tawait this.adapter.setItem(newId, data);\n\t\t\tawait this.adapter.removeItem(id);\n\t\t\tconsole.log(`Migrated ${id} to ${newId}.`);\n\t\t\tneedsRefresh = true;\n\t\t}\n\t\tif (needsRefresh){\n\t\t\tlocation.reload();\n\t\t}\n\t}\n\t\n\tpublic async getStorageUsed(): Promise<number> {\n\t\tlet amount = 0;\n\t\tvar keys = <string[]> await this.keys();\n\t\tfor (let id of keys) {\n\t\t\tconst url = await this.loadImageUrl(id);\n\t\t\tconst blob = await fetch(url).then(r => r.blob());\n\t\t\tif (!blob){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tamount += blob.size;\n\t\t}\n\t\treturn amount;\n\t}\n\n\tprivate async loadFileMeta() {\n\t\tthis._fileMeta = <IFileMetaList> await this.adapter.getItem(\"file-meta\") ?? {};\n\t}\n}\n\nexport const imageStorage = new ImageStorage();\n","import * as Utils from \"../utils/Utils\";\nimport {imageStorage} from \"../storage/ImageStorage\";\n\nexport default class Thumbnail {\n    \n    private _element: HTMLDivElement;\n    private _imageUrl: string;\n    private _overlayUrl: string;\n    \n    get id() { return this._element.id; }\n    set imageUrl(src: string){\n        this._imageUrl = src;\n        this._element.style.opacity = \"1\";\n        this.updateBackgroundImages();\n    }\n    set overlayUrl(src: string){\n        this._overlayUrl = src;\n        this.updateBackgroundImages();\n    }\n\n    constructor(parent: HTMLElement, id: string, onImageSelected: Function | undefined) {\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        this._element = element;\n        element.id = id;\n        element.classList.add(\"thumbnail\");\n        this._element.style.opacity = \"0\";\n        \n        // Utils.addLongClick(element, () => {\n        //     if (!this._image || !PeerToPeer.instance || !PeerToPeer.instance.loggedIn || PeerToPeer.instance.peerList.length < 2){\n        //         return;\n        //     }\n        //\n        //     Utils.imageToBlob(this._image)\n        //         .then(blob => {\n        //             const peerName = PeerToPeer.instance.peerList[1];\n        //             PeerToPeer.instance.sendData(peerName, blob);\n        //         });\n        // });\n        \n        Utils.addClick(element, () => {\n            if (onImageSelected) {\n                onImageSelected(id);\n            }\n        }, true);\n\n        imageStorage.addChangeListener((change: string, id: string) => {\n            if (change == \"save\" && id == this.id) {\n                this.loadImage();\n            }\n        });\n        \n        parent.appendChild(element);\n        this.loadImage();\n    }\n\n    remove() {\n        this._element.remove();\n    }\n    \n    private isHidden() {\n        return (this._element.offsetParent === null)\n    }\n\n    private loadImage() {\n        imageStorage.loadImageUrl(this.id)\n            .then(url => {\n                this.imageUrl = url;\n            });\n        imageStorage.loadImageUrl(\"overlay-\" + this.id)\n            .then(url => {\n                this.overlayUrl = url;\n            });\n    }\n\n    private updateBackgroundImages() {\n        let urls = [];\n        if (this._overlayUrl){\n            urls.push(`url(${this._overlayUrl})`);\n        }\n        if (this._imageUrl){\n            urls.push(`url(${this._imageUrl})`);\n        }\n        this._element.style.backgroundImage = urls.join(\",\");\n    }\n}","import {View} from \"./View\";\nimport {config} from \"../config\";\nimport Thumbnail from \"./Thumbnail\";\nimport PeerToPeer from \"../PeerToPeer\";\nimport * as Utils from \"../utils/Utils\";\n\n\nexport default class BookView extends View {\n\n    public onImageSelected: Function | undefined;\n    private _thumbnails: Thumbnail[];\n    \n    constructor(id: string, onSettingsClicked: Function) {\n        super(id);\n        let settingsButton = <HTMLDivElement>this._element.getElementsByClassName(\"button settings\")[0];\n        Utils.addClick(settingsButton, () => onSettingsClicked());\n    }\n\n    show(): void {\n        super.show();\n        this.updateImages();\n        \n        // PeerToPeer.instance.onDataReceived = (data: ArrayBuffer) => {\n        //     this._thumbnails[0].setImageSrc(URL.createObjectURL(new Blob([data])));\n        // }\n    }\n\n    private updateImages() {\n        if (this._thumbnails){\n            return;\n        }\n        \n        this._thumbnails = [];\n        \n        for (let i=0; i<config.imageCount; i++) {\n            const imageId = `image${(\"\" + (i + 1)).padStart(2, \"0\")}.png`;\n            let thumbnail = new Thumbnail(this._element, imageId, (id: string) => this.onImageSelected(id))\n            this._thumbnails.push(thumbnail);\n        }\n    }\n}\n","import {View} from \"../views/View\";\nimport * as Utils from \"../utils/Utils\";\n\n// base class for palettes\nexport class Palette extends View {\n    public onSelectionChanged: Function | undefined;\n    private _selectedElement: HTMLDivElement;\n    private _optionsElement: HTMLDivElement;\n    private _optionElements: HTMLDivElement[];\n    private _selectedIndex: number;\n    protected _options: any[];\n    \n    private static _expandedPalette: Palette;\n\n    get selectedIndex(){ return this._selectedIndex }\n    set selectedIndex(value){\n        this._selectedIndex = Math.max(0, Math.min(this._options.length - 1, value));\n        this.updateSelectedOptionElement(this._selectedElement, this.selectedOption);\n    }\n    \n    get selectedOption(){ return this._options[this._selectedIndex] }\n    set selectedOption(value){\n        let index = this._options.indexOf(value);\n        if (index === -1){\n            return;\n        }\n        this.selectedIndex = index;\n    }\n    \n    get isCollapsed(){ return this._element.classList.contains(\"collapsed\") }\n\n    constructor(id: string, options: any[], rightAlign: boolean = false) {\n        super(id);\n        this._options = options;\n        this._optionElements = [];\n        this._selectedIndex = 0;\n        this.createOptions();\n        this.show();\n        this.collapse();\n    }\n    \n    static collapseAll() {\n        if (Palette._expandedPalette){\n            Palette._expandedPalette.collapse();\n        }\n    }\n    \n    private createOptions(){\n        this.addSelectedOption();\n        this.addOptionElements();\n    }\n    \n    recreateOptions(){\n        this.clear();\n        this.createOptions();\n    }\n\n    collapse() {\n        this._element.classList.add(\"collapsed\");\n        if (Palette._expandedPalette == this){\n            Palette._expandedPalette = null;\n        }\n    }\n\n    expand() {\n        Palette.collapseAll();\n        this._element.classList.remove(\"collapsed\");\n        Palette._expandedPalette = this;\n    }\n\n    toggle() {\n        if (this.isCollapsed){\n            this.expand();\n        }\n        else {\n            this.collapse();\n        }\n    }\n    \n    addOption(value: any){\n        this._options.push(value);\n        this.addOptionElement(this._options.length - 1, value);\n        this.updateOptionsWidth();\n    }\n\n    removeOption(index: number){\n        this._options.splice(index, 1);\n        this._optionElements[index].remove();\n        this._optionElements.splice(index, 1);\n        \n        // update the index assigned to each element:\n        this.recreateOptions();\n    }\n\n    private addSelectedOption() {\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        element.classList.add(\"option\");\n        this._selectedElement = element;\n        Utils.addClick(element, () => this.toggle());\n        this.updateSelectedOptionElement(element, this.selectedOption);\n        this._element.appendChild(element);\n    }\n    \n    private addOptionElements(){\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        element.classList.add(\"options\");\n        this._optionsElement = element;\n        this.addArrowElement();\n\n        let i: number = 0;\n        for (let option of this._options){\n            this.addOptionElement(i, option);\n            i ++;\n        }\n        this.updateOptionsWidth();\n        this._element.appendChild(element);\n    }\n\n    private updateOptionsWidth() {\n        this._optionsElement.style.width = Math.min(8, this._options.length) * 1.25 + \"em\";\n    }\n\n    private addArrowElement(){\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        element.classList.add(\"arrow\");\n        this._optionsElement.appendChild(element);\n    }\n\n    private addOptionElement(index: number, option: any) {\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        element.classList.add(\"option\");\n        element.dataset.index = `${index}`;\n        Utils.addLongClick(element, event => this.optionLongClicked(event, option, index));\n        Utils.addClick(element, event => this.optionClicked(event, option, index));\n        this.updateOptionElement(element, option);\n        this._optionsElement.appendChild(element);\n        this._optionElements[index] = element;\n    }\n    \n    protected optionClicked(event: Event, option: any, index: number){\n        this.selectedIndex = index;\n        this.collapse();\n        if (this.onSelectionChanged) {\n            this.onSelectionChanged(option, index);\n        }        \n    }\n\n    protected optionLongClicked(event: Event, option: any, index: number){\n    }\n\n    protected updateOptionElement(element: HTMLDivElement, option: any){\n    }\n\n    protected updateSelectedOptionElement(element: HTMLDivElement, option: any) {\n        this.updateOptionElement(element, option);\n    }\n}","import {Palette} from \"./Palette\";\n\nexport default class ColorPalette extends Palette {\n\n    get color() { return this.selectedOption }\n    set color(value: string) { this.selectedOption = value }\n\n    constructor(id: string){\n        // 16 color Mac palette\n        // https://en.wikipedia.org/wiki/List_of_software_palettes#Apple_Macintosh_default_16-color_palette\n        // let colors: string[] = [\n        //     \"#FFFFFF\", \"#f5f60d\", \"#f5650a\", \"#d50406\",\n        //     \"#f50695\", \"#330496\", \"#0306c5\", \"#0692f0\",\n        //     \"#06a606\", \"#026405\", \"#643403\", \"#946434\",\n        //     \"#b5b5b5\", \"#848484\", \"#444444\", \"#030303\",\n        // ];\n\n        // 32 color palette\n        // https://github.com/geoffb/dawnbringer-palettes\n        let colors: string[] = [\n            \"#000000\", \"#222034\", \"#45283c\", \"#663931\",\n            \"#8f563b\", \"#df7126\", \"#d9a066\", \"#eec39a\",\n            \"#fbf236\", \"#99e550\", \"#6abe30\", \"#37946e\",\n            \"#4b692f\", \"#524b24\", \"#323c39\", \"#3f3f74\",\n            \"#306082\", \"#5b6ee1\", \"#639bff\", \"#5fcde4\",\n            \"#cbdbfc\", \"#ffffff\", \"#9badb7\", \"#847e87\",\n            \"#696a6a\", \"#595652\", \"#76428a\", \"#ac3232\",\n            \"#d95763\", \"#d77bba\", \"#8f974a\", \"#8a6f30\",\n        ];\n\n        super(id, colors);\n        this.selectedIndex = 15;\n    }\n    \n    updateOptionElement(element: HTMLDivElement, option: string) {\n        element.style.background = option;\n    }\n}","import {Palette} from \"./Palette\";\n\nexport default class SizePalette extends Palette {\n\n    get size() { return this.selectedOption }\n    set size(value: number) { this.selectedOption = value }\n\n    constructor(id: string){\n        let sizes: number[] = [2, 8, 24, 40];\n        super(id, sizes, true);\n        this.selectedIndex = 1;\n    }\n\n    updateOptionElement(element: HTMLDivElement, option: any) {\n        const width = option / 40;\n        element.innerHTML = '<div class=\"line-width\" style=\"width:' + width + 'em\"></div>';\n    }\n}","import {PaintView, IPointerData} from \"../views/PaintView\";\n\n// Base class for all tools\nexport default abstract class Tool {\n    protected _painter: PaintView;\n    \n    get color() { return this._painter.color };\n    get opacity() { return this._painter.opacity }\n    get lineWidth() { return this._painter.lineWidth };\n    \n    private static _bufferCtx: CanvasRenderingContext2D;\n    protected _buttonElement: HTMLElement; \n\n    constructor(painter: PaintView, buttonId: string) {\n        this._painter = painter;\n        this._buttonElement = document.getElementById(buttonId);\n    }\n\n    // creates a context to draw the current stroke to so we can draw the complete stroke with a different\n    // operation. The buffer can be shared by different tools.\n    private createBufferCtx() {\n        let brushCanvas = document.createElement(\"canvas\");\n        brushCanvas.id = \"buffer\";\n        brushCanvas.width = this._painter.width;\n        brushCanvas.height = this._painter.height;\n        Tool._bufferCtx = <CanvasRenderingContext2D>brushCanvas.getContext(\"2d\", {alpha: true});\n        Tool._bufferCtx.imageSmoothingQuality = \"high\";\n        Tool._bufferCtx.imageSmoothingEnabled = true;\n    }\n\n    protected getBufferCtx(){\n        if (Tool._bufferCtx == null){\n            this.createBufferCtx();\n        }\n        return Tool._bufferCtx;\n    }\n\n    enable(): void {\n        this._buttonElement.classList.add(\"selected\");\n    }\n    disable(): void {\n        this._buttonElement.classList.remove(\"selected\");\n    }\n    down(data: IPointerData): void {}\n\n    move(data: IPointerData): void {}\n    \n    up(data: IPointerData): void {}\n    \n    pressureChanged(): void {}\n    tick(delta: number): void {}\n    keyDown(event: KeyboardEvent): void {}\n}","import Tool from \"./Tool\";\nimport Vector from \"../math/Vector\";\nimport {PaintView, IPointerData} from \"../views/PaintView\";\nimport * as Utils from \"../utils/Utils\";\n\n// @ts-ignore\nimport brushPath from \"url:../../img/brush.png\";\nimport Layer from \"../Layer\";\n\n// Paints lines with varying stroke width\nexport default class PenTool extends Tool {\n\n    private _startIndex: number;\n    private _points: Vector[];\n    private _widths: number[];\n    private _drawPathRequested: boolean;\n    private _brushCtx: CanvasRenderingContext2D;\n    \n    private readonly _operation: string;\n\n    constructor(painter: PaintView, buttonId: string, operation: string = \"darken\") {\n        super(painter, buttonId);\n        this._operation = operation;\n        this.createBrushCtx();\n    }\n\n    private createBrushCtx() {\n        let brushCanvas = document.createElement(\"canvas\");\n        brushCanvas.id = \"brush\";\n        brushCanvas.width = 64;\n        brushCanvas.height = 64;\n        this._brushCtx = <CanvasRenderingContext2D>brushCanvas.getContext(\"2d\", {alpha: true});\n        this._brushCtx.imageSmoothingQuality = \"high\";\n        this._brushCtx.imageSmoothingEnabled = true;\n    }\n\n    down(data: IPointerData): void {\n        this._painter.captureAutoMask(data.position.clone().round());\n        \n        this._points = [data.position];\n        const width = this.getWidth(data.pressure, data.speed);\n        this._widths = [width];\n        this._startIndex = 0;\n\n        let ctx = this._painter.baseLayer.ctx;\n        ctx.fillStyle = this.color;\n        ctx.strokeStyle = this.color;\n\n\n        // let ctx = this._brushCtx;\n        // let brushWidth = ctx.canvas.width;\n        // ctx.clearRect(0, 0, brushWidth, brushWidth);\n        // ctx.fillStyle = this.color;\n        // let radius = brushWidth * 0.5;\n        // ctx.beginPath();\n        // ctx.arc(radius, radius, radius - 1, 0, 2 * Math.PI);\n        // ctx.fill();  \n        this._painter.baseLayer.ctx.globalCompositeOperation = this._operation;\n\n        this.requestDrawPath();\n    }\n    \n    up(): void{\n        this._painter.recordHistoryState();\n    }\n    \n    tick(delta: number) {\n        if (this._drawPathRequested){\n            this.drawPath();\n            this._drawPathRequested = false;\n        }\n    }\n\n    requestDrawPath(){\n        this._drawPathRequested = true;\n    }\n\n    drawPath(){\n        if (this._points.length == 0) {\n            return;\n        }\n\n        let ctx = this._painter.baseLayer.ctx;\n        this.drawConnectedLines(ctx, this._points.slice(this._startIndex), this._widths.slice(this._startIndex));\n        \n        // if (this._points.length - this._startIndex == 1){\n        //     const p = this._points[this._startIndex];\n        //     this.drawBrush(ctx, p.x, p.y, this._widths[this._startIndex]);\n        //     return;\n        // }\n        //\n        // for (let i = this._startIndex; i < this._points.length - 1; i++) {\n        //     const p1 = this._points[i];\n        //     const p2 = this._points[i+1];\n        //    \n        //     const w1 = this._widths[i];\n        //     const w2 = this._widths[i+1];\n        //\n        //     const dist = Vector.distance(p1, p2);\n        //     const step = Math.max(1, 0.125 * Math.min(w1, w2, 64));\n        //     for (let d = 0; d <= dist; d += step){\n        //         const a = d / dist;\n        //         const p = Vector.lerp(p1, p2, a);\n        //         const w = Utils.lerp(w1, w2, a);\n        //         this.drawBrush(ctx, p.x, p.y, w);\n        //     }\n        // }\n        this._startIndex = Math.max(0, this._points.length - 1);\n    }\n    \n    drawConnectedLines(ctx: CanvasRenderingContext2D, points: Vector[], widths: number[]){\n        const pointCount = points.length;\n        if (pointCount == 0){\n            return;\n        }\n        \n        ctx.lineCap = \"round\";\n        ctx.lineJoin = \"round\";\n        let start = points[0];\n        let startWidth = widths[0] * this.lineWidth;\n\n        if (pointCount == 1){\n            // single dot\n            ctx.beginPath();\n            ctx.arc(start.x, start.y, 0.5 * startWidth, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n        for (let i = 1; i < pointCount; i++) {\n            ctx.beginPath();\n            ctx.lineWidth = widths[i] * this.lineWidth;\n            ctx.lineTo(points[i-1].x, points[i-1].y);\n            ctx.lineTo(points[i].x, points[i].y);\n            ctx.stroke();\n        }\n    }\n    \n    \n    drawBrush(ctx: CanvasRenderingContext2D, x: number, y: number, width: number){\n        let radius = width * 0.5;\n        x -= radius;\n        y -= radius;\n        // x = Math.floor(x - radius);\n        // y = Math.floor(y - radius);\n        // width = Math.ceil(width);\n        ctx.drawImage(this._brushCtx.canvas, x, y, width, width);\n    }\n\n    move(data: IPointerData): void {\n        let newPoints = this.interpolatePoints(data.position);\n\n        this._points = this._points.concat(newPoints);\n        const numSegments = newPoints.length;\n\n        let width = this.getWidth(data.pressure, data.speed);\n        const lastWidth = this._widths[this._widths.length - 1];\n        const maxWidthDifferencePerSegment = 2;\n        const maxWidthDifference = maxWidthDifferencePerSegment * numSegments;\n        width = Utils.clamp(lastWidth - maxWidthDifference, lastWidth + maxWidthDifference, width);\n\n        for (let i = 0; i < numSegments; i++) {\n            this._widths.push(Utils.lerp(lastWidth, width, i / numSegments));\n        }\n\n        this.requestDrawPath();\n    }\n\n    private interpolatePoints(newPoint: Vector): Vector[] {\n        const segmentLength = Math.max(4, 0.1 * this.lineWidth);\n        const points: Vector[] = [];\n        \n        if (this._points.length == 0){\n            return;\n        }\n        \n        const start = this._points[this._points.length - 1];\n        const end = newPoint;\n        const dist = start.distanceTo(end);\n\n        if (dist < segmentLength){\n            return points;\n        }\n\n        let control = start;\n        if (this._points.length > 1){\n            const previous = this._points[this._points.length - 2];\n            const tangent = start.clone().subtract(previous).normalize();\n            control = start.clone().add(tangent.clone().multiplyScalar(0.3 * dist));\n        }\n        \n        const a = segmentLength / dist;\n        for (let i = a; i <= 1; i += a) {\n            const Vector = this.pointOnQuadraticCurve(start, control, end, i);\n            points.push(Vector);\n        }\n        return points;\n    }\n\n    private pointOnQuadraticCurve(start : Vector, control: Vector, end: Vector, a: number): Vector {\n        const f1 = (1 - a) * (1 - a);\n        const f2 = 2 * a * (1 - a);\n        const f3 = a * a;\n        \n        return new Vector(\n            start.x * f1 + control.x * f2 + end.x * f3,\n            start.y * f1 + control.y * f2 + end.y * f3);\n    }\n\n    pressureChanged(){\n        this.requestDrawPath();\n    }\n\n    getWidth(pressure: number, speed: number){\n        speed = Utils.clamp(1, 2, speed);\n        return pressure / speed; // range: 0.5 - 1\n    }\n\n    private applyAutoMask() {\n        if (!this._painter.autoMaskCtx){\n            return;\n        }\n        \n        let ctx = this.getBufferCtx();\n        ctx.globalCompositeOperation = \"destination-in\";\n        ctx.drawImage(this._painter.autoMaskCtx.canvas, 0, 0);\n        ctx.globalCompositeOperation = \"source-over\";\n    }\n}","import {Palette} from \"./Palette\";\nimport {imageStorage} from \"../storage/ImageStorage\";\n\nexport default class ShapePalette extends Palette {\n\n    private _shapeIds: { [id : string] : string };\n    \n    get stamp() { return this.selectedOption }\n    \n    constructor(id: string) {\n        super(id, [], true);\n        this._shapeIds = {};\n        this.selectedIndex = 0;\n\n        imageStorage.keys()\n            .then((keys: string[]) => {\n                const shapesIds = keys.filter(x => x.startsWith(\"shape\"));\n                for (let shapeId of shapesIds) {\n                    this.addShapeFromImageId(shapeId);\n                }\n            });\n\n        imageStorage.addChangeListener((change: string, id: string) => {\n            if (change == \"save\" && id.startsWith(\"shape\")) {\n                this.addShapeFromImageId(id);\n            }\n        });\n    }\n\n    private addShapeFromImageId(stampId: string) {\n        imageStorage.loadImageUrl(stampId)\n            .then(url => {\n                this._shapeIds[url] = stampId;\n                this.addOption(url);\n            })\n    }\n\n    protected optionLongClicked(event: TouchEvent, option: any, index: number) {\n        this.deleteShape(index);\n    }\n\n    updateOptionElement(element: HTMLDivElement, option: string) {\n        element.style.backgroundImage = `url(\"${option}\")`;\n    }\n\n    updateSelectedOptionElement(element: HTMLDivElement, option: any) {\n        element.innerHTML = '<i class=\"fas fa-shapes\"></i>';\n    }\n\n    private deleteShape(index: number) {\n        let option = this._options[index];\n        let stampId = this._shapeIds[option];\n        if (!stampId){\n            return;\n        }\n        imageStorage.deleteImage(stampId)\n            .then(() => {\n                delete this._shapeIds[option];\n                this.removeOption(index);\n                if (this.selectedIndex == index){\n                    // select the following item that now has the same index\n                    this.selectedIndex = index;\n                }\n            })\n    }\n}","import {config} from \"./config\";\nimport * as Utils from \"./utils/Utils\";\nimport Vector from \"./math/Vector\";\nimport ILayer from \"./ILayer\";\n\ninterface IPointer {\n    clientX: number,\n    clientY: number\n}\n\ninterface IPointerList {\n    readonly length: number;\n    [index: number]: IPointer;\n}\n\nexport default abstract class Layer<T extends HTMLImageElement | HTMLCanvasElement> implements ILayer {\n\n    public onDoubleTap: Function | undefined;\n    \n    protected _element: T;\n    private _index: number;\n    private _pinchCenter: Vector;\n    private _localDragPosition: Vector;\n    private _pinchStartDist: number;\n    private _pinchStartRotation: number;\n    private _startScale: number = 1;\n    private _startRotation: number = 0;\n    private _position: Vector = new Vector(0, 0);\n    private _scale: number = 1;\n    private _rotation: number = 0;\n    private _lastTouchStartTime: number = 0;\n    private _pointers: PointerEvent[] = [];\n    private _width: number;\n    private _height: number;\n    \n    get id(): string { return this._element.id; }\n    get index(): number { return this._index; }\n    set index(v: number) {\n        this._index = v;\n        this.transform(this.position, this.scale, this.rotation);\n    }\n    get width(): number { return this._width; };\n    get height(): number { return this._height; };\n    get position() { return this._position; }\n    get rotation() { return this._rotation; }\n    get scale() { return this._scale; }\n    get floating(): boolean { return this._element.classList.contains(\"floating\"); }\n    \n    set floating(value: boolean) { \n        this._element.classList.toggle(\"floating\", value);\n        this._element.style.pointerEvents = value ? \"auto\" : \"none\";\n        if (value){\n            this.addEventListeners();\n        }\n        else {\n            this.removeEventListeners();\n        }\n    }\n\n    constructor(parent: HTMLElement, tag: string, id: string, x: number, y: number, width: number, height: number) {\n        this._element = <T>document.createElement(tag);\n        this._element.id = id;\n        this._element.classList.add(\"layer\");\n        this._index = 0;\n        this._width = width;\n        this._height = height;\n        this._element.width = width;\n        this._element.height = height;\n        this._element.style.width = `${width}em`;\n        this._element.style.height = `${height}em`;\n        this._element.style.pointerEvents = \"none\";\n            \n        parent.appendChild(this._element);\n        this.transform(new Vector(x, y), 1, 0);\n        this.bindEventListeners();\n    }\n    \n    remove() {\n        this._element.remove();\n    }\n\n    resize(width: number, height: number) {\n        const x = this.position.x + 0.5 * (this.width - width);\n        const y = this.position.y + 0.5 * (this.height - height);\n\n        this.setPositionAndSize(x, y, width, height);\n    }\n\n    setPositionAndSize(x: number, y: number, width: number, height: number) {\n        this._width = width;\n        this._height = height;\n        this._element.width = width;\n        this._element.height = height;\n        this._element.style.width = `${width}em`;\n        this._element.style.height = `${height}em`;\n        this.transform(new Vector(x, y), this.scale, this.rotation);\n    }\n\n    drawToCanvas(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n        let x = this._position.x + 0.5 * this.width;\n        let y = this._position.y + 0.5 * this.height;\n        ctx.setTransform(this._scale, 0, 0, this._scale, x, y);\n        ctx.rotate(this._rotation);\n        ctx.translate(-0.5 * this.width, -0.5 * this.height);\n        ctx.drawImage(this._element, 0, 0);\n        ctx.restore();\n    }\n\n    private addEventListeners() {\n        // pinch gesture handling inspired by https://codepen.io/hanseklund/pen/izloq\n        \n        this._element.addEventListener('click', this.preventDefault);\n\n        if (Utils.pointerEventsSupported()){\n            this._element.addEventListener('touchstart', this.preventDefault);\n            this._element.addEventListener('pointerdown', this.pointerDown);\n        }\n        else{\n            this._element.addEventListener('touchstart', this.touchStart);\n        }\n    }\n    \n    private removeEventListeners() {\n        this._element.removeEventListener('click', this.preventDefault);\n\n        if (Utils.pointerEventsSupported()){\n            this._element.removeEventListener('touchstart', this.preventDefault);\n            this._element.removeEventListener('pointerdown', this.pointerDown);\n        }\n        else{\n            this._element.removeEventListener('touchstart', this.touchStart);\n        }\n    }\n    \n    private preventDefault(event: Event) {\n        event.preventDefault();\n    }\n    \n    private doubleTap(event: TouchEvent | PointerEvent) {\n        if (this.onDoubleTap){\n            this.onDoubleTap(event);\n        }\n    }\n    \n    private pointerDown(event: PointerEvent){\n        event.preventDefault();\n        this._element.setPointerCapture(event.pointerId);\n        this.addPointerEvent(event);\n\n        if (this._pointers.length === 1){\n            if (event.timeStamp < this._lastTouchStartTime + config.doubleTapDelay){\n                this.doubleTap(event);\n            }\n            this._lastTouchStartTime = event.timeStamp;\n\n            this._element.addEventListener(\"pointermove\", this.pointerMove);\n            this._element.addEventListener(\"pointerup\", this.pointerUp);\n\n            this._pinchCenter = new Vector(\n                this._position.x + 0.5 * this.width,\n                this._position.y + 0.5 * this.height);\n\n            if (event.altKey){\n                let p1 = this.clientToPixel(this._pointers[0]);\n                let p2 = this._pinchCenter.clone().multiplyScalar(2).subtract(p1);\n                this.pinchStart(p1, p2);\n            }\n            else{\n                this.dragStart(this.clientToPixel(this._pointers[0]));\n            }\n        }\n        \n        if (this._pointers.length === 2 ){\n            this.pinchStart(this.clientToPixel(this._pointers[0]), this.clientToPixel(this._pointers[1]));\n        }  \n    }\n\n    private addPointerEvent(event: PointerEvent) {\n        const index = this._pointers.findIndex(x => x.pointerId == event.pointerId);\n        if (index < 0) {\n            this._pointers.push(event);\n        } else {\n            this._pointers[index] = event;\n        }\n    }\n\n    private removePointerEvent(event: PointerEvent) {\n        const index = this._pointers.findIndex(x => x.pointerId == event.pointerId);\n        if (index >= 0) {\n            this._pointers.splice(index, 1);\n        }\n    }\n\n    private pointerMove(event: PointerEvent) {\n        event.preventDefault();\n        this.addPointerEvent(event);\n        this.move(this._pointers, event.altKey);\n    }\n\n    private pointerUp(event: PointerEvent) {\n        event.preventDefault();\n        this._element.releasePointerCapture(event.pointerId);\n        this.removePointerEvent(event);\n\n        if (this._pointers.length == 1) {\n            this.dragStart(this.clientToPixel(this._pointers[0]));\n        }\n\n        if (this._pointers.length == 0){\n            this._element.removeEventListener(\"pointermove\", this.pointerMove);\n            this._element.removeEventListener(\"pointerup\", this.pointerUp);\n        }\n    }\n\n    private touchStart(event: TouchEvent) {\n        event.preventDefault();\n\n        if (event.touches.length === 1){\n            if (event.timeStamp < this._lastTouchStartTime + config.doubleTapDelay){\n                this.doubleTap(event);\n            }\n            this._lastTouchStartTime = event.timeStamp;\n            \n            this._element.addEventListener('touchmove', this.touchMove);\n            this._element.addEventListener('touchend', this.touchEnd);\n\n            this._pinchCenter = new Vector(\n                this._position.x + 0.5 * this.width,\n                this._position.y + 0.5 * this.height);\n\n            if (event.altKey){\n                let p1 = this.clientToPixel(event.touches[0]);\n                let p2 = this._pinchCenter.clone().multiplyScalar(2).subtract(p1);\n                this.pinchStart(p1, p2);\n            }\n            else{\n                this.dragStart(this.clientToPixel(event.touches[0]));\n            }\n        }\n        \n        if (event.touches.length === 2){\n            this.pinchStart(this.clientToPixel(event.touches[0]), this.clientToPixel(event.touches[1]));\n        }\n    }\n\n    private touchMove(event: TouchEvent) {\n        event.preventDefault();\n        this.move(event.touches, event.altKey);\n    }\n\n    private move(pointers: IPointerList, altKey: boolean) {\n        if (pointers.length === 1) {\n            if (altKey) {\n                let p1 = this.clientToPixel(pointers[0]);\n                let p2 = this._pinchCenter.clone().multiplyScalar(2).subtract(p1);\n                this.pinchMove(p1, p2);\n            } else {\n                this.dragMove(this.clientToPixel(pointers[0]));\n            }\n        }\n        if (pointers.length === 2) {\n            this.pinchMove(this.clientToPixel(pointers[0]), this.clientToPixel(pointers[1]));\n        }\n    }\n\n    private touchEnd (event: TouchEvent) {\n        event.preventDefault();\n        this._element.removeEventListener('touchmove', this.touchMove);\n        this._element.addEventListener('touchend', this.touchEnd);\n    }\n\n    transform(position: Vector, scale: number, rotation: number) {\n        this._position = position;\n        this._rotation = rotation;\n        this._scale = scale;\n        const index = this._index;\n        this._element.style.transform = `translate(${position.x}em, ${position.y}em) rotate(${rotation}rad) scale(${scale}) translateZ(${index}px)`;\n        this._element.style.outlineWidth = `${2 / scale}em`;\n        this._element.style.outlineOffset = `-${2 / scale}em`;\n    }\n\n    private bindEventListeners() {\n        \n        // TODO: Find a better way. This is ugly:\n        this.touchStart = this.touchStart.bind(this);\n        this.touchMove = this.touchMove.bind(this);\n        this.touchEnd = this.touchEnd.bind(this);\n\n        this.pointerDown = this.pointerDown.bind(this);\n        this.pointerMove = this.pointerMove.bind(this);\n        this.pointerUp = this.pointerUp.bind(this);\n    }\n\n    private dragStart(position: Vector) {\n        this._localDragPosition = position.clone().subtract(this.position);\n    }\n\n    private dragMove(position: Vector) {\n        position.subtract(this._localDragPosition);\n        this.transform(position, this._scale, this._rotation);\n    }\n\n    private pinchStart(p1: Vector, p2: Vector) {\n        let center = p1.clone().add(p2).multiplyScalar(0.5);\n        this._pinchStartDist = p1.distanceTo(p2);\n        this._pinchStartRotation = Math.atan2(p1.y - center.y, p1.x - center.x);\n        this._startRotation = this._rotation;\n        this._startScale = this._scale;       \n    }\n\n    private pinchMove(p1: Vector, p2: Vector) {\n        let center = p1.clone().add(p2).multiplyScalar(0.5);\n        let distance = p1.distanceTo(p2);\n        let angle = Math.atan2(p1.y - center.y, p1.x - center.x);\n        let angleChange = angle - this._pinchStartRotation;\n\n        let scale = this._startScale * (distance / this._pinchStartDist);\n        scale = Utils.clamp(0.1, 10, scale);\n        let position = p1.clone().add(p2).multiplyScalar(0.5);\n        position.x -= 0.5 * this.width;\n        position.y -= 0.5 * this.height;\n\n        let rotation = this._startRotation + angleChange;\n        this.transform(position, scale, rotation);\n    }\n\n    private clientToPixel(position1: IPointer){\n        let parent = this._element.parentElement;\n        let rect = parent.getBoundingClientRect();\n\n        const isPortraitOrientation = rect.height > rect.width;\n\n        let nx = (position1.clientX - rect.left) / rect.width;\n        let ny = (position1.clientY - rect.top) / rect.height;\n\n        let x = (isPortraitOrientation ? 1 - ny : nx) * config.width;\n        let y = (isPortraitOrientation ? nx : ny) * config.height;\n\n        return new Vector(x, y);\n    }\n}","import {config} from \"./config\";\nimport Layer from \"./Layer\";\nimport Rect from \"./utils/Rect\";\n\nexport default class CanvasLayer extends Layer<HTMLCanvasElement> {\n\n    protected _ctx: CanvasRenderingContext2D;\n    \n    get canvas() { return this._element; }\n    get ctx() { return this._ctx; }\n\n    constructor(parent: HTMLElement, id: string, x: number, y: number, width: number, height: number) {\n        super(parent, \"canvas\", id, x, y, width, height);\n        this._ctx = <CanvasRenderingContext2D>this.canvas.getContext(\"2d\", {alpha: true});\n        this._ctx.imageSmoothingQuality = \"high\";\n        this._ctx.imageSmoothingEnabled = config.imageSmoothing;\n    }\n    \n    getData(): ImageData {\n        return this._ctx.getImageData(0, 0, this.width, this.height);\n    }\n\n    putData(data: ImageData) {\n        this._ctx.putImageData(data, 0, 0);\n    }\n    \n    drawImage(image: HTMLImageElement | HTMLCanvasElement, rect?: Rect){\n        const {x, y, width, height} = rect || {x:0, y:0, width:this.width, height:this.height};\n        this._ctx.drawImage(image, x, y, width, height);\n    }\n    \n    clear(rect?: Rect){\n        const {x, y, width, height} = rect || {x:0, y:0, width:this.width, height:this.height};\n        this._ctx.clearRect(x, y, width, height);\n    }\n}","import Layer from \"./Layer\";\n\nexport default class ImageLayer extends Layer<HTMLImageElement> {\n\n    get image(): HTMLImageElement { return this._element; }\n\n    constructor(parent: HTMLElement, id: string, x: number, y: number, width: number, height: number) {\n        super(parent, \"img\", id, x, y, width, height);\n        this._element.onload = () => {\n            // if this.image.completed\n            this.resize(this.image.naturalWidth, this.image.naturalHeight);\n        }\n    }\n}","import Tool from \"./Tool\";\nimport Vector from \"../math/Vector\";\nimport CanvasLayer from \"../CanvasLayer\";\nimport Rect from \"../utils/Rect\";\nimport {imageStorage} from \"../storage/ImageStorage\";\nimport * as Utils from \"../utils/Utils\";\nimport {PaintView, IPointerData} from \"../views/PaintView\";\nimport {config} from \"../config\";\nimport {saveAs} from \"file-saver\";\n\n// Provides a floating selection the user can manipulate \nexport default class SelectionTool extends Tool {\n    readonly selectionLayerId = \"selection-layer\";\n\n    get selectionLayer(): CanvasLayer { return <CanvasLayer>this._painter.getLayer(this.selectionLayerId) }\n    get selection(): Rect { return this._selection; }\n    get hasFloatingSelection(): boolean { return this._hasFloatingSelection; }\n    set hasFloatingSelection(value: boolean) { \n        this._hasFloatingSelection = value;\n        this.toggleFloatingSelectionButtons(value);\n    }\n    get isInShapesPalette(): boolean { return this._isInShapesPalette; }\n    set isInShapesPalette(value: boolean) { \n        this._isInShapesPalette = value;\n        this._saveButton.classList.toggle(\"disabled\", value);\n    }\n    \n    protected _position: Vector;\n    protected _startPosition: Vector;\n    protected _selection: Rect = Rect.Empty();\n    private _hasFloatingSelection: boolean;\n    private _drawSelectionOutlineRequested: boolean;\n    private _isInShapesPalette: boolean;\n    private _deleteButton: HTMLDivElement;\n    private _stampButton: HTMLDivElement;\n    private _saveButton: HTMLDivElement;\n    private _downloadButton: HTMLDivElement;\n\n    constructor(painter: PaintView, buttonId: string) {\n        super(painter, buttonId);\n        this._deleteButton = <HTMLDivElement>document.getElementById(\"selection-delete-button\");\n        Utils.addClick(this._deleteButton, () => this.clearSelection());\n        this._stampButton = <HTMLDivElement>document.getElementById(\"selection-stamp-button\");\n        Utils.addClick(this._stampButton, () => this.paintSelectionToCanvas());\n        this._saveButton = <HTMLDivElement>document.getElementById(\"selection-save-button\");\n        Utils.addClick(this._saveButton, () => this.saveSelectionAsNewStamp());\n        this._downloadButton = <HTMLDivElement>document.getElementById(\"selection-download-button\");\n        Utils.addClick(this._downloadButton, () => {\n            this.selectionLayer.canvas.toBlob(blob => saveAs(blob, \"image.png\"));\n        });\n        \n        this.hasFloatingSelection = false;\n        this._position = new Vector(0, 0);\n    }\n    \n    toggleFloatingSelectionButtons(visible: boolean){\n        this._deleteButton.classList.toggle(\"hidden\", !visible);\n        this._stampButton.classList.toggle(\"hidden\", !visible);\n        this._downloadButton.classList.toggle(\"hidden\", !visible);\n        this._saveButton.classList.toggle(\"hidden\", !visible);\n    }\n\n    enable() {\n        super.enable();\n        this.createSelectionLayer();\n        this.hasFloatingSelection = false;\n        this.isInShapesPalette = false;\n    }\n\n    disable() {\n        super.disable();\n        this.paintSelectionToCanvas();\n        this.destroySelectionLayer();\n        this.hasFloatingSelection = false;\n    }\n    \n    down(data: IPointerData) {\n        this._position = this.getClampedPosition(data);\n        this.startNewSelection();\n    }\n\n    move(data: IPointerData): void {\n        this._position = this.getClampedPosition(data);\n        this.requestDrawSelectionOutline();\n    }\n\n    up(data: IPointerData): void {\n        this.cutSelection();\n    }\n\n    private startNewSelection() {\n        this.paintSelectionToCanvas();\n        this.selectionLayer.setPositionAndSize(0, 0, this._painter.width, this._painter.height);\n        this.selectionLayer.transform(new Vector(0, 0), 1, 0);\n        this.selectionLayer.floating = false;\n\n        this.hasFloatingSelection = false;\n        this.isInShapesPalette = false;\n        this._startPosition = this._position;\n        \n        let ctx = this.selectionLayer.ctx;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.strokeStyle = \"black\";\n        ctx.lineCap = \"round\";\n        ctx.lineJoin = \"round\";\n        ctx.lineWidth = 2;\n        ctx.setLineDash([5, 5]);\n        this.requestDrawSelectionOutline();\n    }\n\n    private getClampedPosition(data: IPointerData) {\n        return data.position.round().clamp(0, 0, this._painter.width - 1, this._painter.height - 1);\n    }\n\n    tick(delta: number) {\n        if (this._drawSelectionOutlineRequested) {\n            this.updateSelectionAndDrawOutline();\n            this._drawSelectionOutlineRequested = false;\n        }\n    }\n    \n    keyDown(event: KeyboardEvent) {\n        switch (event.code){\n            case 'Backspace':\n                this.clearSelection();\n                break;\n            // case 'KeyC':\n            //     if (event.metaKey){\n            //         this.copyToClipboard();\n            //     }\n            //     break;\n        }\n    }\n\n    private clearSelection() {\n        this.selectionLayer.clear();\n        this.startNewSelection();\n    }\n\n    setImage(image: HTMLImageElement){\n        this.hasFloatingSelection = true;\n        this.selectionLayer.resize(image.width, image.height);\n        this.selectionLayer.floating = true;\n        this.selectionLayer.drawImage(image);\n        this.isInShapesPalette = true;\n    }\n\n    async setImageUrl(url: string): Promise<HTMLImageElement>{\n        const img = new Image();\n        img.src = url;\n        return new Promise(resolve => {\n            img.onload = () => {\n                this.setImage(img);\n                resolve(img);\n            }\n        });\n    }\n\n    private requestDrawSelectionOutline() {\n        this._drawSelectionOutlineRequested = true;\n    }\n\n    private updateSelectionAndDrawOutline() {\n        if (this.hasFloatingSelection){\n            return;\n        }\n        this.selectionLayer.clear();\n        let ctx = this.selectionLayer.ctx;\n\n        const x = Math.min(this._startPosition.x, this._position.x);\n        const y = Math.min(this._startPosition.y, this._position.y);\n        const width = Math.abs(this._startPosition.x - this._position.x);\n        const height = Math.abs(this._startPosition.y - this._position.y);\n        this._selection = new Rect(x, y, width, height);\n\n        ctx.strokeRect(x, y, width, height);\n    }\n    \n    private destroySelectionLayer() {\n        this._painter.removeLayer(this.selectionLayer);\n    }\n\n    private createSelectionLayer() {\n        if (this.selectionLayer){\n            return;\n        }\n\n        this._painter.addCanvasLayer(this.selectionLayerId, 0, 0, this._painter.width, this._painter.height, false);\n        this.selectionLayer.onDoubleTap = (event: TouchEvent) => {\n            if (event.altKey){\n                this.saveSelectionAsNewStamp();\n                return;\n            }\n            this.paintSelectionToCanvas();\n        }\n    }\n    \n    private cutSelection() {\n        this.selectionLayer.clear();\n        this._selection = Utils.getVisiblePixelFrame(this._painter.baseLayer.ctx, this.selection);\n        \n        if (this.selection.isEmpty()){\n            return;\n        }\n\n        this.hasFloatingSelection = true;\n        const {x, y, width, height} = this.selection;\n        \n        this.selectionLayer.setPositionAndSize(x, y, width, height);\n        this.selectionLayer.floating = true;\n        this.selectionLayer.ctx.drawImage(this._painter.baseLayer.canvas, x, y, width, height, 0, 0, width, height);\n        this._painter.baseLayer.clear(this.selection);\n        this._painter.recordHistoryState();\n    }\n\n    private paintSelectionToCanvas() {\n        if (!this.hasFloatingSelection){\n            return;\n        }\n        this._painter.baseLayer.ctx.globalCompositeOperation = \"source-over\";\n        this.selectionLayer.drawToCanvas(this._painter.baseLayer.ctx);\n        this._painter.recordHistoryState();\n    }\n\n    private saveSelectionAsNewStamp() {\n        imageStorage.keys()\n            .then((keys: string[]) => {\n                const shapesIds = keys.filter(x => x.startsWith(\"Shape\"));\n                if (shapesIds.length >= config.maxShapeCount){\n                    console.log(\"Cannot save selection as shape because there are already too many in storage.\");\n                    return;\n                }\n                \n                const id = `shape${Date.now()}.png`;\n                console.log(`Saving selection as: ${id}`);\n                this.selectionLayer.canvas.toBlob(blob => imageStorage.saveImage(id, blob as Blob));\n                this.isInShapesPalette = true;\n            });\n    }\n\n\n    // copyToClipboard(){\n    //     this.selectionLayer.canvas.toBlob(blob => navigator.clipboard.write([new ClipboardItem({'image/png': blob})]));\n    //     console.log(\"copied selection to clipboard\");\n    // }\n    //\n    // pasteFromClipboard() {\n    //     navigator.permissions.query({name: \"clipboard-read\"})\n    //         .then(result => {\n    //             if (!(result.state == \"granted\" || result.state == \"prompt\")) {\n    //                 return;\n    //             }\n    //             navigator.clipboard.read()\n    //                 .then(data => {\n    //                     for (let i = 0; i < data.length; i++) {\n    //                         if (!data[i].types.includes(\"image/png\")){\n    //                             continue;\n    //                         }\n    //                         data[i].getType(\"image/png\")\n    //                             .then(blob => {\n    //                                 this.setImageUrl(URL.createObjectURL(blob));\n    //                             })\n    //                     }\n    //                 });\n    //         });\n    // }\n\n    selectAll() {\n        this.startNewSelection();\n        this._selection = new Rect(0, 0, this._painter.width, this._painter.height);\n        this.cutSelection();\n    }\n}\n","import {View} from \"./views/View\";\n\nexport class Toolbar extends View {\n    constructor(id: string) {\n        super(id);\n        this.show();\n    }\n    \n    flip(){\n        if (this._element.classList.contains(\"left\") || this._element.classList.contains(\"right\")){\n            this._element.classList.toggle(\"left\");\n            this._element.classList.toggle(\"right\");\n        }\n        if (this._element.classList.contains(\"top\") || this._element.classList.contains(\"bottom\")){\n            this._element.classList.toggle(\"top\");\n            this._element.classList.toggle(\"bottom\");\n        }\n    }\n}","import {config} from \"./config\";\n\nexport class History {\n    \n    private _states: ImageData[] = [];\n    private _position: number = -1; \n    \n    get canUndo() { return this._position > 0 }\n    get canRedo() { return this._position < this._states.length - 1 }\n    \n    recordState(data: ImageData){\n        if (this._position == config.maxUndoSteps - 1){\n            this._states.shift();\n            this._position--;\n        }\n\n        // remove all future steps\n        this._states.splice(this._position + 1, this._states.length - this._position + 1);\n\n        this._position++;\n        this._states[this._position] = data;\n    }\n\n    undo(): ImageData{\n        if (!this.canUndo){\n            return null;\n        }\n\n        this._position--;\n        return this._states[this._position];\n    }\n\n    redo(): ImageData{\n        if (!this.canRedo){\n            return null;\n        }\n\n        this._position++;\n        return this._states[this._position];\n    }\n    \n    getCurrentState(): ImageData{\n        return this._position > -1 && this._position < this._states.length ? this._states[this._position] : null;\n    }\n\n    clear(){\n        this._states = [];\n        this._position = -1;\n    }\n}","import {View} from \"./View\";\nimport Tool from \"../tools/Tool\";\nimport ColorPalette from \"../palettes/ColorPalette\";\nimport ToolPalette from \"../palettes/ToolPalette\";\nimport SizePalette from \"../palettes/SizePalette\";\nimport * as Utils from \"../utils/Utils\";\nimport PenTool from \"../tools/PenTool\";\nimport PaintBucketTool from \"../tools/PaintBucketTool\";\nimport Vector from \"../math/Vector\";\nimport {Palette} from \"../palettes/Palette\";\nimport {imageStorage} from \"../storage/ImageStorage\";\nimport {config} from \"../config\";\nimport RectangleTool from \"../tools/RectangleTool\";\nimport LineTool from \"../tools/LineTool\";\nimport ShapePalette from \"../palettes/ShapePalette\";\nimport Layer from \"../Layer\";\nimport ILayer from \"../ILayer\";\nimport CanvasLayer from \"../CanvasLayer\";\nimport ImageLayer from \"../ImageLayer \";\nimport SelectionTool from \"../tools/SelectionTool\";\nimport {Toolbar} from \"../Toolbar\";\nimport {History} from \"../History\";\n\n// var Pressure = require('pressure');\nexport interface IPointerData {\n    timeStamp: number;\n    position: Vector;\n    radius: Vector;\n    pressure: number;\n    speed: number;\n    isPressed: boolean;\n}\n\nexport class PaintView extends View {\n    public readonly scaleFactor = 1;\n    public readonly width: number;\n    public readonly height: number;\n\n    public brushTool: Tool;\n    public markerTool: Tool;\n    public eraserTool: Tool;\n    public selectionTool: SelectionTool;\n    public paintBucketTool: Tool;\n\n    private _currentTool: Tool;\n    private _imageId: string;\n    private _color: string;\n    private _opacity: number;\n    private _lineWidth: number;\n    private _autoMaskCtx: CanvasRenderingContext2D;\n    private _mainToolbar: Toolbar;\n    private _contextToolbar: Toolbar;\n    private _colorPalette: ColorPalette;\n    private _sizePalette: SizePalette;\n    private _shapePalette: ShapePalette;\n    private _tools: Tool[];\n    private _currentTouchId: number = 0;\n    private _history: History;\n    private _undoButton: HTMLDivElement;\n    private _redoButton: HTMLDivElement;\n    private _lastPointerData: IPointerData;\n    private _tickTimeStamp: number;\n    private _autoMaskCaptured: boolean;\n    private _stamp: string;\n    private _layers: { [id : string] : ILayer } = {};\n    private _sheet: HTMLElement;\n    private _importImageButton: HTMLDivElement;\n    private _isDirty: boolean;\n    private _lastSaveTimestamp: number = 0;\n\n    get color(): string { return this._color; }\n    get stamp(): string { return this._stamp; }\n    get opacity(): number { return this._opacity; }\n    get lineWidth(): number { return this._lineWidth; }\n    get autoMaskCtx(): CanvasRenderingContext2D { return this._autoMaskCtx; }\n    //get layers(): Layer[] { return this._layers; }\n    get baseLayer(): CanvasLayer { return <CanvasLayer>this._layers[\"base-layer\"]; }\n    get overlayLayer(): ImageLayer { return <ImageLayer>this._layers[\"overlay-layer\"]; }\n\n    constructor(id: string, onBackClicked: Function) {\n        super(id);\n        \n        this._history = new History();\n        this._sheet = document.getElementById(\"sheet\");\n\n        this.width = config.width;\n        this.height = config.height;\n        Utils.log(`Setting PaintView size to ${this.width} x ${this.height}`);\n\n        this.addCanvasLayer(\"base-layer\", 0, 0, this.width, this.height,false);\n        this.addEventListeners();\n        this.createButtons(onBackClicked);\n        this.createToolbar();\n        this.createPalettes();\n        this.createTools();\n    }\n    \n    getLayer(id: string){\n        return this._layers[id];\n    }\n\n    private createButtons(onBackClicked: Function) {\n        let backButton = <HTMLDivElement>this._element.getElementsByClassName(\"button back\")[0];\n        Utils.addClick(backButton, () => onBackClicked());\n\n        this._undoButton = <HTMLDivElement>document.getElementById(\"undo-button\");\n        Utils.addClick(this._undoButton, () => this.undo());\n\n        this._redoButton = <HTMLDivElement>document.getElementById(\"redo-button\");\n        Utils.addClick(this._redoButton, () => this.redo());\n        \n        this._importImageButton = <HTMLDivElement>document.getElementById(\"import-image-button\");\n        Utils.addClick(this._importImageButton, async () => {\n            const blob = await Utils.upload(\"image/*\");\n            this.setTool(this.selectionTool);\n            const url = URL.createObjectURL(blob);\n            await this.selectionTool.setImageUrl(url);\n            URL.revokeObjectURL(url);\n        });\n    }\n\n    private addLayer(layer: ILayer): ILayer {\n        layer.index = Object.keys(this._layers).length;\n        this._layers[layer.id] = layer;\n        return layer;\n    }\n    \n    public addImageLayer(id: string, x: number, y: number, width: number, height: number, floating: boolean): ImageLayer{\n        const layer = new ImageLayer(this._sheet, id, x, y, width, height);\n        layer.floating = floating;\n        this.addLayer(layer);\n        return layer;\n    }\n    \n    public addCanvasLayer(id: string, x: number, y: number, width: number, height: number, floating: boolean): CanvasLayer{\n        const layer = new CanvasLayer(this._sheet, id, x, y, width, height);\n        layer.floating = floating;\n        this.addLayer(layer);\n        return layer;\n    }\n    \n    public removeLayer(layer: ILayer) {\n        if (!layer){\n            return;\n        }\n        layer.remove();\n        delete this._layers[layer.id]\n    }\n    \n    public createOverlay(){\n        if (this.overlayLayer){\n            return;\n        }\n        this.addLayer(new ImageLayer(this._sheet, \"overlay-layer\", 0, 0, this.width, this.height));\n    }\n    \n    public removeOverlay(){\n        this.removeLayer(this.overlayLayer);\n    }\n    \n    public async setOverlay(id: string){\n        const url = await imageStorage.loadImageUrl(id);\n        \n        if (!url){\n            this.removeOverlay();\n            return;\n        }\n        this.createOverlay();\n        this.overlayLayer.image.src = url;\n                //this.processOverlay(this.overlay.ctx);\n\n                // show processed overlay:\n                // this._overlayCtx.canvas.toBlob(blob => {\n                //     this._overlay.src = URL.createObjectURL(blob);\n                // })\n    }\n    \n    private createTools() {\n        let penButton = document.getElementById(\"tool-pen\");\n        Utils.addLongClick(penButton, () => this.fill());\n        Utils.addClick(penButton, () => this.setTool(this.markerTool));\n        let eraserButton = document.getElementById(\"tool-eraser\");\n        Utils.addLongClick(eraserButton, () => this.clear(true));\n        Utils.addClick(eraserButton, () => this.setTool(this.eraserTool));\n        let selectionButton = document.getElementById(\"tool-selection\");\n        Utils.addClick(selectionButton, () => this.setTool(this.selectionTool));\n        Utils.addLongClick(selectionButton, () => {\n            this.setTool(this.selectionTool);\n            this.selectionTool.selectAll();\n        });\n        \n        this._tools = [];\n        // this.brushTool = this.addTool(new PenTool(this, \"tool-\", \"source-over\"));\n        this.markerTool = this.addTool(new PenTool(this, \"tool-pen\", \"darken\"));\n        this.eraserTool = this.addTool(new PenTool(this, \"tool-eraser\", \"destination-out\"));\n        this.selectionTool = <SelectionTool>this.addTool(new SelectionTool(this, \"tool-selection\"));\n        // this.paintBucketTool = this.addTool(new PaintBucketTool(this));\n        // this._currentTool = this.brushTool;\n        this.setTool(this.markerTool);\n    }\n    \n    private addTool(tool: Tool){\n        this._tools.push(tool);\n        return tool;\n    }\n    \n    private createToolbar(){\n        this._mainToolbar = new Toolbar(\"main-toolbar\");\n\n        this._contextToolbar = new Toolbar(\"context-toolbar\");\n    }\n\n    private createPalettes() {\n        this._sizePalette = new SizePalette(\"size-palette\");\n        this._sizePalette.onSelectionChanged = (lineWidth: number) => {\n            this._lineWidth = lineWidth;\n        };\n        this._lineWidth = this._sizePalette.size;\n\n        this._colorPalette = new ColorPalette(\"color-palette\");\n        this._colorPalette.onSelectionChanged = (color: string) => this._color = color;\n        this._color = this._colorPalette.color;\n\n        this._shapePalette = new ShapePalette(\"stamp-palette\");\n        this._shapePalette.onSelectionChanged = (stamp: string) => {\n            this._stamp = stamp;\n            this.setTool(this.selectionTool);\n            this.selectionTool.setImageUrl(this.stamp);\n        }\n        this._stamp = this._shapePalette.stamp;\n\n        this._opacity = 1;\n    }\n\n    private setTool(tool: Tool) {\n        if (this._currentTool == tool){\n            return;\n        }\n        \n        if (this._currentTool){\n            this._currentTool.disable();\n        }\n        this._currentTool = tool;\n        if (this._currentTool){\n            this._currentTool.enable();\n        }\n\n        this._colorPalette.setVisible(this._currentTool == this.markerTool);\n        this._sizePalette.setVisible(this._currentTool == this.markerTool || this._currentTool == this.eraserTool);\n        // this._shapePalette.setVisible(this._currentTool == this.selectionTool);\n        // this._importImageButton.classList.toggle(\"hidden\", this._currentTool != this.selectionTool);\n    }\n\n    private addEventListeners() {\n        let canvas = this.baseLayer.canvas;\n        canvas.style.pointerEvents = \"auto\";\n        //canvas.addEventListener('keydown', event => this.keyDown(event));\n        document.addEventListener('keydown', event => this.keyDown(event));\n        canvas.addEventListener('click', event => event.preventDefault());\n\n        if (config.usePointerEvents && window.PointerEvent != null){\n            // Required to prevent pointerDown events from being choked when tapping repeatedly: \n            canvas.addEventListener('touchstart', event => {\n                if (event.cancelable){\n                    event.preventDefault();\n                }\n            });\n            \n            canvas.addEventListener('pointerdown', event => this.pointerDown(event));\n            canvas.addEventListener('pointermove', event => this.pointerMove(event));\n            canvas.addEventListener('pointerup', event => this.pointerUp(event));\n            canvas.addEventListener('pointercancel', event => event.preventDefault());\n        }\n        else{\n            canvas.addEventListener('touchstart', event => this.touchStart(event));\n            canvas.addEventListener('touchmove', event => this.touchMove(event));\n            canvas.addEventListener('touchend', event => this.touchEnd(event));\n            canvas.addEventListener('touchcancel', event => event.preventDefault());\n        }\n        //canvas.addEventListener('touchforcechanged', event => this.pressureChanged(<TouchEvent>event))\n        // Pressure.set(canvas, {\n        //     change: (force: number, event: Event) => this.pressureChanged(force)\n        // })\n    }\n\n    private getPointerEventPosition(event: PointerEvent) {\n        let target = <HTMLElement>event.target;\n        let rect = target.getBoundingClientRect();\n        const isPortraitOrientation = rect.height > rect.width;\n\n        let nx = (event.clientX - rect.left) / rect.width;\n        let ny = (event.clientY - rect.top) / rect.height;\n        \n        let x = (isPortraitOrientation ? 1 - ny : nx) * this.width;\n        let y = (isPortraitOrientation ? nx : ny) * this.height; \n\n        if (config.pixelPerfect){\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return new Vector(x, y);\n    }\n\n    private getTouchEventPosition(touch: Touch) {\n        let rect = this.baseLayer.canvas.getBoundingClientRect();\n        const isPortraitOrientation = rect.height > rect.width;\n\n        let nx = (touch.clientX - rect.left) / rect.width;\n        let ny = (touch.clientY - rect.top) / rect.height;\n\n        let x = (isPortraitOrientation ? 1 - ny : nx) * this.width;\n        let y = (isPortraitOrientation ? nx : ny) * this.height;\n\n        if (config.pixelPerfect){\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return new Vector(x, y);\n    }\n    \n    private keyDown(event: KeyboardEvent){\n        if (!this.isVisible()){\n            return;\n        }\n        \n        switch (event.code){\n            // case 'KeyV':\n            //     if (event.metaKey){\n            //         this.setTool(this.selectionTool);\n            //         this.selectionTool.pasteFromClipboard();\n            //     }\n            //     break;\n        }\n        \n        if (!this._currentTool) {\n            return;\n        }\n        this._currentTool.keyDown(event);\n    }\n\n    pointerDown(event: PointerEvent) {\n        event.preventDefault();\n        if (!event.isPrimary || event.buttons !== 1) {\n            return;\n        }\n\n        let target = <HTMLElement>event.target;\n        target.setPointerCapture(event.pointerId);\n        this._currentTouchId = event.pointerId;\n\n        this.down({\n            timeStamp: event.timeStamp,\n            position: this.getPointerEventPosition(event),\n            radius: this.screenToSheet(new Vector(event.width, event.height)),\n            pressure: this.getNormalizedPointerPressure(event),\n            speed: 1,\n            isPressed: true\n        });\n     }\n\n    pointerMove(event: PointerEvent) {\n        event.preventDefault();\n        if (!event.isPrimary || event.buttons !== 1) {\n            return;\n        }\n\n        this.move({\n            timeStamp: event.timeStamp,\n            position: this.getPointerEventPosition(event),\n            radius: this.screenToSheet(new Vector(event.width, event.height)),\n            pressure: this.getNormalizedPointerPressure(event),\n            speed: 1,\n            isPressed: true\n        });\n    }\n\n    getNormalizedPointerPressure(event: PointerEvent): number {\n        return event.pointerType == \"pen\" ? Utils.clamp(0.5, 2, event.pressure * 4) : 1;\n    }\n\n    getNormalizedTouchPressure(touch: Touch): number {\n        return touch.touchType == \"stylus\" ? Utils.clamp(0.5, 2, touch.force * 4) : 1;\n    }\n\n    pointerUp(event: PointerEvent) {\n        event.preventDefault();\n        if (!event.isPrimary){\n            return;\n        }\n\n        let target = <HTMLElement>event.target;\n        target.releasePointerCapture(event.pointerId);\n\n        this.up({\n            timeStamp: event.timeStamp,\n            position: this.getPointerEventPosition(event),\n            radius: new Vector(event.width, event.height),\n            pressure: 1,\n            speed: 1,\n            isPressed: false\n        });\n        this._currentTouchId = 0;\n    }\n    \n    pressureChanged(force: number){\n        // let pressure = Utils.clamp(0.3, 1, force * 2);\n        // this._currentTool.pressure = Math.max(pressure, this._currentTool.pressure);\n        // this._currentTool.pressureChanged();\n    }\n\n    touchStart(event: TouchEvent) {\n        event.preventDefault();\n        if (this._currentTouchId !== 0){\n            return;\n        }\n        const touch = event.targetTouches[0];\n        this._currentTouchId = touch.identifier;\n        this.down({\n            timeStamp: event.timeStamp,\n            position: this.getTouchEventPosition(touch),\n            radius: this.screenToSheet(new Vector(touch.radiusX, touch.radiusY)),\n            pressure: this.getNormalizedTouchPressure(touch),\n            speed: 1,\n            isPressed: true\n        });\n    }\n\n    touchMove(event: TouchEvent) {\n        event.preventDefault();\n        let touch = PaintView.findTouch(event.targetTouches, this._currentTouchId);\n        if (touch == null){\n            return;\n        }\n        console.log(touch.force)\n        this.move({\n            timeStamp: event.timeStamp,\n            position: this.getTouchEventPosition(touch),\n            radius: this.screenToSheet(new Vector(touch.radiusX, touch.radiusY)),\n            pressure: this.getNormalizedTouchPressure(touch),\n            speed: 1,\n            isPressed: true\n        });\n    }\n\n    touchEnd(event: TouchEvent) {\n        event.preventDefault();\n        let touch = PaintView.findTouch(event.targetTouches, this._currentTouchId);\n        if (touch != null){\n            // current touch is still in the list of target touches, this means it has not ended yet\n            return;\n        }\n        this.up({\n            timeStamp: event.timeStamp,\n            position: new Vector(0 ,0),\n            radius: new Vector(0 ,0),\n            pressure: 1,\n            speed: 1,\n            isPressed: false\n        });\n        this._currentTouchId = 0;\n    }\n\n    private static findTouch(touches: TouchList, id: number){\n        for (let i = 0; i < touches.length; i++) {\n            if (touches[i].identifier == id){\n                return touches[i];\n            }\n        }\n        return null;\n    }\n\n    private move(data: IPointerData) {\n        if (!this._currentTool) {\n            return;\n        }\n\n        let delta = this._lastPointerData.position.distanceTo(data.position);\n\n        if (delta <= 1) {\n            return;\n        }\n        \n        this._lastPointerData = this._lastPointerData || data;\n        let timeDelta = data.timeStamp - this._lastPointerData.timeStamp;\n        const speed = delta / timeDelta;\n        data.speed = Utils.lerp(this._lastPointerData.speed, speed, 0.2);\n        this._lastPointerData = data;\n        this._currentTool.move(data);\n    }\n\n    private down(data: IPointerData) {\n        Palette.collapseAll();\n\n        if (!this._currentTool) {\n            return;\n        }\n\n        this._lastPointerData = data;\n        this._currentTool.down(data);\n    }\n\n    private up(data: IPointerData) {\n        if (!this._currentTool) {\n            return;\n        }\n\n        this._lastPointerData = data;\n        this._currentTool.up(data);\n    }\n\n    clear(recordHistoryState: boolean = false) {\n        this.baseLayer.clear();\n        if (recordHistoryState){\n            this.recordHistoryState();\n        }\n    }\n\n    fill() {\n        this.baseLayer.ctx.fillStyle = this.color;\n        this.baseLayer.ctx.fillRect(0, 0, this.width, this.height);\n        this.recordHistoryState();\n    }\n\n    private ResetHistory() {\n        this._history.clear();\n        this.recordHistoryState();\n        this.updateUndoButtons();\n    }\n\n    recordHistoryState(){\n        this._history.recordState(this.baseLayer.getData());\n        this.updateUndoButtons();\n        this.setDirty();\n    }\n\n    updateUndoButtons(){\n        this._undoButton.classList.toggle(\"disabled\", !this._history.canUndo);\n        this._redoButton.classList.toggle(\"disabled\", !this._history.canRedo);\n    }\n\n    undo() {\n        if (!this._history.canUndo){\n            return;\n        }\n        this.baseLayer.putData(this._history.undo());\n        this.updateUndoButtons();\n        this.setDirty();\n    }\n    \n    redo() {\n        if (!this._history.canRedo){\n            return;\n        }\n        this.baseLayer.putData(this._history.redo());\n        this.updateUndoButtons()\n        this.setDirty();\n    }\n\n    restoreCurrentHistoryState(){\n        this.baseLayer.putData(this._history.getCurrentState());\n    }\n\n    loadImage(id: string) {\n        return imageStorage.loadImage(id)\n            .then(image => {\n                this._imageId = id;\n                this.clear();\n                if (image){\n                    this.baseLayer.drawImage(image);\n                }\n                \n                this.setOverlay(\"overlay-\" + id);\n                this.ResetHistory();\n                this._isDirty = false;\n            })\n    }\n\n    private saveImage() {\n        Utils.log(\"Saving image\");\n        this.baseLayer.canvas.toBlob(blob => imageStorage.saveImage(this._imageId, blob as Blob));\n        this._isDirty = false;\n        this._lastSaveTimestamp = Date.now();\n    }\n\n    setDirty() {\n        this._isDirty = true;\n    }\n\n    show(){\n        super.show();\n        this._currentTouchId = 0;\n        this._autoMaskCaptured = false;\n        window.requestAnimationFrame(timeStamp => this.tick(timeStamp))\n        this._currentTool.enable();\n    }\n    \n    hide(){\n        Palette.collapseAll();\n\n        if (this._currentTool){\n            this._currentTool.disable();\n        }\n        if (this._layers){\n            // Always save when closing the paint view in case we forgot to set the dirty flag somewhere:\n            this.saveImage();\n        }\n        if (this._history){\n            this._history.clear();\n        }\n        super.hide();\n    }\n\n    private tick(timeStamp: number) {\n        if (!this.isVisible()){\n            return;\n        }\n\n        window.requestAnimationFrame(timeStamp => this.tick(timeStamp))\n\n        let delta = timeStamp - this._tickTimeStamp;\n        this._tickTimeStamp = timeStamp;\n\n        if (this._currentTool) {\n            this._currentTool.tick(delta);\n            \n            // never save while painting to avoid lags:\n            if (this._lastPointerData && this._lastPointerData.isPressed){\n                return;\n            }\n        }\n        \n        if (this._isDirty && Date.now() > this._lastSaveTimestamp + config.saveInterval){\n            this.saveImage();\n        }\n    }\n\n    captureAutoMask(position: Vector) {\n        if (!config.useAutoMask){\n            return;\n        }\n        \n        this._autoMaskCaptured = true;\n        // if (!this.overlayLayer){\n        //     return;\n        // }\n\n        if (!this._autoMaskCtx){\n            let autoMaskCanvas = document.createElement(\"canvas\");\n            autoMaskCanvas.id = \"auto-mask\";\n            autoMaskCanvas.width = this.width;\n            autoMaskCanvas.height = this.height;\n            this._autoMaskCtx = <CanvasRenderingContext2D>autoMaskCanvas.getContext(\"2d\", {alpha: true});\n        }\n\n        let imageData = this._autoMaskCtx.getImageData(0, 0, this.width, this.height);\n\n        // avoid expensive floodfill:\n        const index = (position.x + position.y * this.width) * 4 + 3;\n        // if (this._autoMaskCaptured && imageData.data[index] > 0){\n        //     return;\n        // }\n\n        Utils.log(\"capturing auto mask\");\n        Utils.floodFill(this.baseLayer.ctx, imageData.data, position, this.color);\n        Utils.dilateMask(imageData.data, this.width, this.height);\n        this._autoMaskCtx.putImageData(imageData, 0, 0);\n    }\n\n    private processOverlay(ctx: CanvasRenderingContext2D) {\n        const imageData = ctx.getImageData(0, 0, this.width, this.height);\n        const pixels = imageData.data;\n        for (let i = pixels.length - 1; i >= 0; i--) {\n            pixels[i] = pixels[i] > 64 ? 255 : 0;\n        }\n        ctx.putImageData(imageData, 0, 0);\n    }\n\n    private screenToSheet(p: Vector): Vector {\n        return new Vector(p.x / screen.width * config.width, p.y / screen.height * config.height);\n    }\n}","import {imageStorage} from \"../storage/ImageStorage\";\n\ninterface IPathInfo {\n    atime: string\n    atimeMs: number\n    birthtime: string\n    birthtimeMs: number\n    blksize: number\n    blocks: number\n    ctime: string\n    ctimeMs: number\n    dev: number\n    gid: number\n    ino: number\n    isBlockDevice: boolean\n    isDirectory: boolean\n    isFIFO: boolean\n    isFile: boolean\n    isSocket: boolean\n    mode: number\n    mtime: string\n    mtimeMs: number\n    name: string\n    nlink: number\n    rdev: number\n    size: number\n    uid: number\n}\n\nclass Server {\n\n    private _host: string;\n    private _userId: string;\n    \n    get host(): string{\n        return this._host;\n    }\n\n    set host(value: string){\n        this._host = value;\n        localStorage.setItem(\"server-url\", value);\n    }\n    \n    get userId(): string{\n        return this._userId;\n    }\n    \n    set userId(value: string){\n        this._userId = value;\n        localStorage.setItem(\"user-id\", value);\n    }\n\n    constructor() {\n        this._host = localStorage.getItem(\"server-url\") ?? \"http://localhost:3000\";\n        this._userId = localStorage.getItem(\"user-id\") ?? \"\";\n    }\n\n    async sync(){\n        if (!this.userId){\n            console.error(\"Cannot sync without user id.\");\n            return;\n        }\n        \n        await this.downloadDefaultAssets();\n        await this.uploadUserContent();\n    }\n\n    private async uploadUserContent() {\n        this.createDirectory(this.host, this.userId);\n\n        var keys = <string[]>await imageStorage.keys();\n\n        for (let id of keys) {\n            const url = await imageStorage.loadImageUrl(id);\n            const blob = await fetch(url).then(r => r.blob());\n            if (!blob) {\n                continue;\n            }\n            let fileName = this.userId + \"/\" + id;\n            console.log(\"posting: \" + fileName);\n            this.postImage(this.host, blob, fileName);\n        }\n    }\n\n    async downloadDefaultAssets(){\n        var res = await this.getPathInfo(this.host, 'default');\n        if (!res.ok){\n            console.log('Could not download default assets.');\n            return;\n        }\n        var info: IPathInfo[] = await res.json();\n        for (let path of info) {\n            if (!path.isFile){\n                continue;\n            }\n            if (!path.name.endsWith(\".png\")){\n                continue;\n            }\n            \n            console.log(\"getting default asset: \" + path.name);\n            this.downloadImage(\"default/\" + path.name, path.name);\n        }\n    }\n\n    private async downloadImage(path: string, imageId: string) {\n        const url = this.host + \"/\" + path;\n        var res = await fetch(url);\n        if (res.ok){\n            var blob = await res.blob();\n            if (blob){\n                imageStorage.saveImage(imageId, blob);\n            }\n        }\n    }\n    \n    async getPathInfo(host: string, path: string){\n        const url = host + \"/\" + path + \"?type=json\";\n        return fetch(url);\n    }\n    \n    async createDirectory(host: string, directoryName: string){\n        const url = host + \"/\" + directoryName + \"?create=directory\";\n        return fetch(url, {\n            method: \"POST\"\n        })\n    }\n\n    async postImage(host: string, blob: Blob, fileName: string){\n        const url = host + \"/\" + fileName;\n        return fetch(url, {\n            method: \"PUT\",\n            headers: {\n                \"Accept\": \"image/png\",\n                \"Content-Type\": \"image/png\"\n            },\n            body: blob\n        })\n    }\n}\n\nexport const server = new Server();","import {Dropbox, DropboxAuth, DropboxResponse, files} from \"dropbox\";\nimport localforage from \"localforage\";\nimport {imageStorage} from \"./ImageStorage\";\n\nconst CLIENT_ID = 'dyfw7wk3nb2utzo';\n\nclass DropboxStorage {\n    \n    private _isAuthorized: boolean = false;\n    private _dbx: Dropbox;\n    private _userId: string;\n    \n    SYNC_BOTH = 0;\n    SYNC_UPLOAD = 1;\n    SYNC_DOWNLOAD = 2;\n\n    get isAuthorized(): boolean {\n        return this._isAuthorized;\n    }\n    \n    get dbx(): Dropbox {\n        return this._dbx;\n    }\n\n    get userId(): string{\n        return this._userId;\n    }\n\n    set userId(value: string){\n        this._userId = value;\n        localStorage.setItem(\"user-id\", value);\n    }\n    \n    constructor() {\n        this._userId = localStorage.getItem(\"user-id\") ?? \"\";\n        let token = this.getAccessTokenFromUrl();\n        if (token) {\n            this.authorize(token);\n        } else {\n            localforage.getItem('dropbox-token')\n                .then((token: string) => {\n                    if (token) {\n                        this.authorize(token)\n                    }\n                })\n        }\n    }\n\n    getAuthenticationUrl(): string{\n        const auth = new DropboxAuth({ clientId: CLIENT_ID });\n        return auth.getAuthenticationUrl(location.href);\n    }\n\n    async sync(){\n        if (!this.isAuthorized || !this.userId){\n            return;\n        }\n\n        console.log(\"Sync default content:\");\n        await this.syncFolder(\"default\", this.SYNC_DOWNLOAD);\n        console.log(\"Sync user content:\");\n        await this.syncFolder(this.userId, this.SYNC_BOTH);\n    }\n    \n    async syncFolder(path: string, mode: number = this.SYNC_BOTH){\n        try{\n            const serverFiles = await this.listFolder(path);\n            if (serverFiles && (mode == this.SYNC_DOWNLOAD || mode == this.SYNC_BOTH)) {\n                // download from server:\n                for (let path of serverFiles) {\n                    console.log(path.name)\n                    if (path[\".tag\"] != \"file\") {\n                        continue;\n                    }\n                    if (!path.name.endsWith(\".png\")) {\n                        continue;\n                    }\n\n                    const imageId = path.name;\n                    const changeDate = new Date(path.server_modified).getTime();\n                    if (await imageStorage.GetFileChangeDate(imageId) >= changeDate) {\n                        continue;\n                    }\n\n                    console.log(\"getting \" + imageId);\n                    this.downloadImage(path.path_lower, imageId, changeDate);\n                }\n            }\n\n            if (mode == this.SYNC_UPLOAD || mode == this.SYNC_BOTH) {\n                // upload:\n                \n                if (!serverFiles){\n                    await this.createDirectory(path);\n                }\n                \n                const keys = <string[]>await imageStorage.keys();\n\n                for (let id of keys) {\n                    const existingEntry = <files.FileMetadataReference>serverFiles?.find(x => x.name == id);\n                    if (existingEntry){\n                        const existingChangeDate = new Date(existingEntry.server_modified).getTime();\n                        if (existingChangeDate >= await imageStorage.GetFileChangeDate(id)){\n                            continue;\n                        }\n                    }\n\n                    const url = await imageStorage.loadImageUrl(id);\n                    const blob = await fetch(url).then(r => r.blob());\n                    if (!blob) {\n                        continue;\n                    }\n                    let fileName = \"/\" + path + \"/\" + id;\n                    console.log(\"posting: \" + fileName);\n                    await this.postImage(blob, fileName);\n                }\n            }\n        }\n        catch (error){\n            console.log(error);\n        }\n    }\n\n    private async listFolder(path: string) {\n        try{\n            var res = await this.dbx.filesListFolder({path: \"/\" + path});\n            return res.result.entries;\n        }\n        catch(error){\n            return null;\n        }\n    }\n\n    private async downloadImage(path: string, imageId: string, changeDate: number) {\n        const res = await this.dbx.filesDownload({path: path});\n        if (res.status == 200){\n            // fileBlob exists:\n            // @ts-ignore\n            var blob = res.result.fileBlob;\n            if (blob){\n                imageStorage.saveImage(imageId, blob, changeDate);\n            }\n        }\n    }\n\n    async postImage(blob: Blob, path: string){\n        return this.dbx.filesUpload({path: path, contents: blob, mode: { \".tag\": \"overwrite\" }})\n    }\n\n    private async createDirectory(path: string) {\n        return this.dbx.filesCreateFolderV2({path: \"/\" + path});\n    }\n    \n    private getAccessTokenFromUrl() {\n        return this.parseQueryString(window.location.hash).access_token;\n    }\n\n    private parseQueryString(str: string) {\n        const ret = Object.create(null);\n    \n        if (typeof str !== 'string') {\n            return ret;\n        }\n    \n        str = str.trim().replace(/^(\\?|#|&)/, '');\n    \n        if (!str) {\n            return ret;\n        }\n    \n        str.split('&').forEach((param) => {\n            const parts = param.replace(/\\+/g, ' ').split('=');\n            // Firefox (pre 40) decodes `%3D` to `=`\n            // https://github.com/sindresorhus/query-string/pull/37\n            let key = parts.shift();\n            let val = parts.length > 0 ? parts.join('=') : undefined;\n    \n            key = decodeURIComponent(key);\n    \n            // missing `=` should be `null`:\n            // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n            val = val === undefined ? null : decodeURIComponent(val);\n    \n            if (ret[key] === undefined) {\n                ret[key] = val;\n            } else if (Array.isArray(ret[key])) {\n                ret[key].push(val);\n            } else {\n                ret[key] = [ret[key], val];\n            }\n        });\n    \n        return ret;\n    }\n\n    private authorize(token: string) {\n        this._isAuthorized = !!token;\n\n        if (this.isAuthorized){\n            this._dbx = new Dropbox({ accessToken: token });\n            localforage.setItem('dropbox-token', token);\n        }\n    }\n\n    unauthorize() {\n        if (!this.isAuthorized) {\n            return;\n        }\n        this.dbx.authTokenRevoke()\n            .then(() => {\n                this._isAuthorized = false;\n                localforage.removeItem('dropbox-token');\n            });\n    }\n\n}\n\nexport const dropboxStorage = new DropboxStorage();","import {View} from \"./View\";\nimport * as Utils from \"../utils/Utils\";\nimport {imageStorage} from \"../storage/ImageStorage\";\nconst version = \"1.0.0\" //require('/package').version;\nvar ConsoleLogHTML = require('console-log-html');\nimport { saveAs } from 'file-saver';\nimport {server} from \"../storage/Server\";\nimport {dropboxStorage} from \"../storage/DropboxStorage\";\nimport {config} from \"../config\";\n\nexport default class SettingsView extends View {\n    \n    private _hostElement: HTMLInputElement;\n    private _userIdElement: HTMLInputElement;\n    private _connectButton: HTMLDivElement;\n    private _disconnectButton: HTMLDivElement;\n    private _syncButton: HTMLDivElement;\n    \n    constructor(id: string, onBackClicked: Function) {\n        super(id);\n        let backButton = this._element.querySelector<HTMLDivElement>(\".button.back\");\n        Utils.addClick(backButton, () => onBackClicked());\n\n        this._hostElement = this._element.querySelector<HTMLInputElement>(\"#server-url\");\n        this._hostElement.onblur = () => server.host = this._hostElement.value;\n        \n        this._userIdElement = this._element.querySelector<HTMLInputElement>(\"#user-id\");\n        this._userIdElement.onblur = () => dropboxStorage.userId = this._userIdElement.value;\n\n        this._connectButton = this._element.querySelector<HTMLDivElement>(\".button.connect\");\n        Utils.addClick(this._connectButton, () => {\n            location.href = dropboxStorage.getAuthenticationUrl();\n        });\n\n        this._disconnectButton = this._element.querySelector<HTMLDivElement>(\".button.disconnect\");\n        Utils.addClick(this._disconnectButton, () => {\n            dropboxStorage.unauthorize();\n            this.updateButtons();\n        });\n\n        this._syncButton = this._element.querySelector<HTMLDivElement>(\".button.sync\");\n        Utils.addClick(this._syncButton, async () => dropboxStorage.sync());\n\n        let exportButton = this._element.querySelector<HTMLDivElement>(\".button.export\");\n        Utils.addClick(exportButton, async () => {\n            const zipBlob = await imageStorage.generateBackupArchive();\n            saveAs(zipBlob, \"web-paint-backup.zip\");\n        });\n\n        let importButton = this._element.querySelector<HTMLDivElement>(\".button.import\");\n        Utils.addClick(importButton, async () => {\n            imageStorage.importBackupArchive(await Utils.upload(\".zip\"));\n            this.updateInfo();\n        });\n\n        let clearButton = this._element.querySelector<HTMLDivElement>(\".button.clear\");\n        Utils.addClick(clearButton, () => {\n            if (confirm(\"Really clear all iamges?\")){\n                imageStorage.clear();\n                location.reload();\n            }\n        });\n\n        if (config.useHtmlLog){\n            ConsoleLogHTML.connect(document.getElementById(\"log\"), {}, true, true, true);\n        }\n    }\n\n    private updateButtons() {\n        console.log(dropboxStorage.isAuthorized)\n        this._connectButton.classList.toggle('hidden', dropboxStorage.isAuthorized);\n        this._disconnectButton.classList.toggle('hidden', !dropboxStorage.isAuthorized);\n        this._syncButton.classList.toggle(\"disabled\", !dropboxStorage.isAuthorized);\n    }\n\n    show(){\n        super.show();\n        this.updateInfo();\n        this.updateButtons();\n    }\n\n    private updateInfo() {\n        const info = <HTMLParagraphElement>document.getElementById(\"info\");\n        info.innerText = `Version: ${version}`;\n        imageStorage.getStorageUsed().then(amount => {\n            info.innerText += `\\rStorage used: ${Utils.formatBytes(amount, 1)}`;\n        });\n\n        this._hostElement.value = server.host;\n        this._userIdElement.value = dropboxStorage.userId;\n    }\n}\n","import localforage from \"localforage\";\n\nrequire('../css/painter.css');\nimport {library, dom} from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nrequire('blueimp-canvas-to-blob/js/canvas-to-blob');\n\nlibrary.add(fas)\ndom.watch();\n\n// required to make 'async' work on old devices: \nimport \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\n\nimport {View} from \"./views/View\";\nimport BookView from \"./views/BookView\";\nimport {PaintView} from \"./views/PaintView\";\nimport DropboxAuthView from \"./views/DropboxAuthView\";\nimport {config} from \"./config\";\nimport PeerToPeer from \"./PeerToPeer\";\nimport SettingsView from \"./views/SettingsView\";\n\nclass App {\n    private _activeView: View;\n    private _bookView: BookView;\n    private _paintView: PaintView;\n    private _settingsView: SettingsView;\n    private dropboxAuthView: DropboxAuthView;\n    private _sheet: HTMLElement;\n\n    constructor() {\n        // App.preventOverScroll();\n        \n        //PeerToPeer.createInstance();\n\n        this._settingsView = new SettingsView(\"settings\",() => {\n            this.openView(this._bookView);\n        });\n        \n        this._sheet = document.getElementById(\"sheet\")\n        window.addEventListener('resize', event => {\n            this.OnResize();\n        });\n        this.OnResize();\n        \n        this._bookView = new BookView(\"book\", async () => {\n            this.openView(this._settingsView);\n        });\n        this._bookView.onImageSelected = (id: string) => {\n            this._paintView.loadImage(id)\n                .then(() => {\n                    this.openView(this._paintView);\n                });\n        }\n\n        this._paintView = new PaintView(\"paint\",() => {\n            this.openView(this._bookView);\n        });\n\n\n        // Dropbox integration is not working yet:\n        // this.dropboxAuthView = new DropboxAuthView(\"dropbox-auth\");\n        // this.openView(ImageStorage.adapter.isAuthenticated ? this.bookView : this.dropboxAuthView);\n\n        this.openView(this._bookView);\n    }\n\n    getIOSVersion(): number[] {\n        if (/iP(hone|od|ad)/.test(navigator.platform)) {\n            // supports iOS 2.0 and later: <http://bit.ly/TJjs1V>\n            var v = (navigator.appVersion).match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n            return [parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || \"0\", 10)];\n        }\n    }\n\n    private OnResize() {\n        const docWidth = document.documentElement.clientWidth;\n        const docHeight = document.documentElement.clientHeight;\n        \n        const portrait = docWidth < docHeight;\n        const isLargeScreen = docWidth > 1024;\n        \n        const viewWidth = Math.max(docWidth, docHeight);\n        const viewHeight = Math.min(docWidth, docHeight);\n        \n        const horizontalPixelSize = viewWidth / config.width;\n        const verticalPixelSize = viewHeight / config.height;\n        \n        const virtualPixelSize = config.fullScreenCanvas && !isLargeScreen ?\n            Math.max(horizontalPixelSize, verticalPixelSize) :\n            Math.min(horizontalPixelSize, verticalPixelSize);\n\n        this._sheet.style.fontSize = `${virtualPixelSize}px`;\n        this._sheet.style.left = `${portrait ? 0.5 * (docWidth - virtualPixelSize * config.width) : 0}px`;\n    }\n\n    private static preventOverScroll() {\n        document.ontouchmove = event => { event.preventDefault();}\n    }\n\n    openView(view: View){\n        if (this._activeView){\n            this._activeView.hide();\n        }\n        this._activeView = view;\n        this._activeView.show();\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // @ts-ignore\n    window.app = new App();\n    // @ts-ignore\n    window.localForage = localforage;\n});\n\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"*{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;touch-action:none}textarea{-webkit-user-select:initial}html,body{margin:0;width:100%;height:100%;position:fixed;font-size:40px}@media(max-width: 400px),(max-height: 400px){html,body{font-size:28px}}body{-webkit-tap-highlight-color:rgba(0,0,0,0);font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\",\\\"Segoe UI Symbol\\\";line-height:1.5rem}body,input,textarea{font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\",\\\"Segoe UI Symbol\\\";line-height:1.5rem}.button{width:1.5rem;height:1.5rem;line-height:1.5rem;text-align:center;font-size:.75rem;border-radius:30%;cursor:pointer;background:rgba(255,255,255,.5);color:#000;transition:transform .25s}.button.down{transform:scale(0.9)}.button i{line-height:1.5rem}.button .fa-stack{height:1em;width:1em}.button .fa-stack.fa-fw{width:1.25em}#dropbox-button{border-radius:3px;background-color:#007ee5;border:none;color:#fff;font-size:16px;padding:10px 15px;text-decoration:none;height:24px}.view{display:flex;position:fixed;width:100%;height:100%;background:#bbb;overflow:hidden}.dropbox-auth{align-items:center;justify-content:center}.view.book{flex-wrap:wrap;align-content:flex-start;justify-content:center;overflow-y:auto;-webkit-overflow-scrolling:touch}.view.book,.view.book *{touch-action:pan-y}.view.settings{font-size:.5rem;padding:.5rem 2.5rem;display:block;box-sizing:border-box;padding-right:52%;line-height:1.4em}.view.settings input{font-size:.5rem;line-height:1em;border:none;width:100%;border-radius:.5em;box-sizing:border-box;padding:.5em;-webkit-user-select:initial}.view.settings .button.text{width:auto;border-radius:.5em;padding:0 .5em;margin-bottom:.5em;text-align:left}.view.settings label{display:block;text-transform:uppercase;color:gray}.view.settings #log{width:50vw;background:#272727;color:#c7c7c7;overflow:scroll;-webkit-overflow-scrolling:touch;touch-action:pan-y;height:100vh;padding:0;font-family:monospace;font-size:12px;position:fixed;top:0;right:0;margin:0;line-height:20px}#log li{border-bottom:#444 solid 1px;padding:0 1em}.thumbnail{margin:.3rem;color:#ccc;background:#fff;border-radius:.1rem;font-size:5.6rem;width:1em;height:.75em;background-size:contain;cursor:pointer;transition:opacity 1s}.thumbnail.down{transform:scale(0.9)}.paint{align-items:center}.paint #sheet{font-size:1px;width:1024em;height:768em;margin:auto;overflow:auto;position:fixed;object-fit:contain;left:0;top:0;bottom:0;right:0}.layer{position:absolute;left:0;top:0;background:none}#base-layer{background:#fff}.layer.floating{outline:2px dashed #000}#stamp-layer{opacity:.2}@media(orientation: portrait){.paint #sheet{transform:rotate(-90deg);overflow-x:hidden}}.button.back{position:absolute;top:.25rem;left:.25rem;z-index:100}.button.settings{position:absolute;right:.25rem;top:.25rem;z-index:100}.button a{width:100%;height:100%;display:block;color:#000}.button#stamp-button{font-size:1.25rem;position:absolute;top:.25rem;right:.25rem;width:2rem;height:2rem;z-index:100;line-height:1.85rem}.toolbar{display:flex;background:#d3d3d3;border-radius:.5rem;z-index:100;position:absolute}.toolbar.left{flex-direction:column;left:.25rem;top:50%;transform:translateY(-50%)}.toolbar.right{flex-direction:column;right:.25rem;top:50%;transform:translateY(-50%)}.toolbar.top{flex-direction:row;left:50%;top:.25em;transform:translateX(-50%)}.toolbar.bottom{flex-direction:row;left:50%;bottom:.25em;transform:translateX(-50%)}.toolbar .button{background:transparent}.toolbar .spacer{width:1.5em;height:1.5em}.palette{position:relative;transition:transform .25s;display:inline-block;float:left;text-align:center;z-index:100}.palette .option i{font-size:.75em}.palette .options{position:absolute;display:flex;flex-wrap:wrap;background:#d3d3d3;border-radius:.5rem;padding:.25rem;transition:transform .15s;top:2.25rem;left:50%;transform:translateX(-50%)}.palette .option{width:1em;height:1em;line-height:.75em;display:inline-block;margin:.25em;float:left;transition:transform .25s;background-size:contain;background-repeat:no-repeat;background-position:center}.palette .options .option{margin:.125em}.palette .option:active{transform:scale(0.9)}.palette .options .arrow{position:absolute;width:0;height:0;font-size:.25rem;top:-2em;left:50%;margin-left:-1em;border-left:1em solid transparent;border-right:1em solid transparent;border-bottom:2em solid #d3d3d3;border-top:none}.toolbar.left .palette .options{left:2.25rem;top:50%;transform:translateY(-50%)}.toolbar.left .palette .options .arrow{top:initial;left:-2em;top:50%;margin-top:-1em;border-top:1em solid transparent;border-bottom:1em solid transparent;border-right:2em solid #d3d3d3}.toolbar.right .palette .options{left:initial;right:2.25rem;top:50%;transform:translateY(-50%)}.toolbar.right .palette .options .arrow{left:initial;top:initial;right:-2em;top:50%;margin-top:-1em;border-top:1em solid transparent;border-bottom:1em solid transparent;border-left:2em solid #d3d3d3;border-right:0}.toolbar.bottom .palette .options{left:50%;top:initial;bottom:2.25rem;transform:translateX(-50%)}.toolbar.bottom .palette .options .arrow{top:initial;bottom:-2em;left:50%;margin-left:-1em;border-left:1em solid transparent;border-right:1em solid transparent;border-top:2em solid #d3d3d3;border-bottom:none}.palette.collapsed:active{transform:scale(0.9)}.toolbar.top .palette.collapsed .options,.toolbar.bottom .palette.collapsed .options{transform:translateX(-50%) scale(0)}.toolbar.left .palette.collapsed .options,.toolbar.right .palette.collapsed .options{transform:translateY(-50%) scale(0)}#stamp-palette.palette .options{font-size:1.5rem}@media(max-width: 400px),(max-height: 400px){#stamp-palette.palette .options{font-size:1rem}}.line-width{background:#000;height:100%;margin:auto;border-radius:.15em}#color-palette .option{border-radius:40%}.hidden{display:none !important}.disabled{opacity:.25}.selected{background:#58b0ff !important;color:#fff}\", \"\",{\"version\":3,\"sources\":[\"webpack://./painter.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"* {\\n    -webkit-touch-callout: none;\\n    -webkit-user-select: none;\\n    user-select: none;\\n    touch-action: none; /* prevent pinch zoom in whole app */\\n}\\n\\ntextarea {\\n    -webkit-user-select: initial;\\n}\\n\\nhtml,\\nbody{\\n    margin: 0;\\n    width: 100%;\\n    height: 100%;\\n    position: fixed;\\n    font-size: 40px;\\n}\\n\\n@media (max-width: 400px), (max-height: 400px){\\n    html,\\n    body{\\n        font-size: 28px;\\n    }   \\n}\\n\\nbody {\\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    line-height: 1.5rem;\\n}\\n\\nbody, input, textarea {\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    line-height: 1.5rem;\\n}\\n\\n.button {\\n    width: 1.5rem;\\n    height: 1.5rem;\\n    line-height: 1.5rem;\\n    text-align: center;\\n    font-size: 0.75rem;\\n    border-radius: 30%;\\n    cursor: pointer;\\n    background: rgba(255, 255, 255, 0.5);\\n    color: black;\\n    transition: transform 0.25s;\\n}\\n\\n.button.down {\\n    transform: scale(0.9);\\n}\\n\\n.button i{\\n    line-height: 1.5rem;\\n}\\n\\n.button .fa-stack{\\n    height: 1em;\\n    width: 1em;    \\n}\\n\\n.button .fa-stack.fa-fw{\\n    width: 1.25em;    \\n}\\n\\n#dropbox-button{\\n    border-radius: 3px;\\n    background-color: #007ee5;\\n    border: none;\\n    color: #fff;\\n    font-size: 16px;\\n    padding: 10px 15px;\\n    text-decoration: none;\\n    height: 24px;\\n}\\n\\n.view {\\n    display: flex;\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    background: #BBB;\\n    overflow: hidden;\\n}\\n\\n.dropbox-auth{\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.view.book {\\n    flex-wrap: wrap;\\n    align-content: flex-start;\\n    justify-content: center;\\n    overflow-y: auto;\\n    -webkit-overflow-scrolling: touch;\\n}\\n\\n.view.book, .view.book * {\\n    touch-action: pan-y;\\n}\\n\\n.view.settings {\\n    font-size: 0.5rem;\\n    padding: 0.5rem 2.5rem;\\n    display: block;\\n    box-sizing: border-box;\\n    padding-right: 52%;\\n    line-height: 1.4em;\\n}\\n\\n.view.settings input{\\n    font-size: 0.5rem;\\n    line-height: 1em;\\n    border: none;\\n    width: 100%;\\n    border-radius: 0.5em;\\n    box-sizing: border-box;\\n    padding: 0.5em;\\n    -webkit-user-select: initial;\\n}\\n\\n.view.settings .button.text {\\n    width: auto;\\n    border-radius: 0.5em;\\n    padding: 0 0.5em;\\n    margin-bottom: 0.5em;\\n    text-align: left;\\n}\\n\\n.view.settings label{\\n    display: block;\\n    text-transform: uppercase;\\n    color: grey;\\n}\\n\\n.view.settings #log {\\n    width: 50vw;\\n    background: #272727;\\n    color: #c7c7c7;\\n    overflow: scroll;\\n    -webkit-overflow-scrolling: touch;\\n    touch-action: pan-y;\\n    height: 100vh;\\n    padding: 0;\\n    font-family: monospace;\\n    font-size: 12px;\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    margin: 0;\\n    line-height: 20px;\\n}\\n\\n#log li {\\n    border-bottom: #444444 solid 1px;\\n    padding: 0 1em;\\n}\\n\\n.thumbnail {\\n    margin: 0.3rem;\\n    color: #CCC;\\n    background: white;\\n    border-radius: 0.1rem;\\n    font-size: 5.6rem;\\n    width: 1em;\\n    height: 0.75em;\\n    background-size: contain;\\n    cursor: pointer;\\n    transition: opacity 1s;\\n}\\n\\n.thumbnail.down {\\n    transform: scale(0.9);\\n}\\n\\n.paint{\\n    align-items: center;\\n}\\n\\n.paint #sheet {\\n    font-size: 1px;\\n    width: 1024em;\\n    height: 768em;\\n    margin: auto;\\n    overflow: auto;\\n    position: fixed;\\n    object-fit: contain;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n    right: 0;\\n}\\n\\n.layer {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    background: none;\\n}\\n\\n#base-layer {\\n    background: white;\\n}\\n\\n.layer.floating{\\n    outline: 2px dashed black;\\n}\\n\\n#stamp-layer{\\n    opacity: 0.2;\\n}\\n\\n@media (orientation: portrait) {\\n    .paint #sheet {\\n        transform: rotate(-90deg);\\n        overflow-x: hidden;\\n    }\\n}\\n\\n\\n.button.back {\\n    position: absolute;\\n    top: 0.25rem;\\n    left: 0.25rem;\\n    z-index: 100;\\n}\\n\\n.button.settings {\\n    position: absolute;\\n    right: 0.25rem;\\n    top: 0.25rem;\\n    z-index: 100;\\n}\\n\\n.button a{\\n    width: 100%;\\n    height: 100%;\\n    display: block;\\n    color: black;    \\n}\\n\\n.button#stamp-button{\\n    font-size: 1.25rem;\\n    position: absolute;\\n    top: 0.25rem;\\n    right: 0.25rem;\\n    width: 2rem;\\n    height: 2rem;\\n    z-index: 100;\\n    line-height: 1.85rem;\\n}\\n\\n.toolbar {\\n    display: flex;\\n    background: lightgray;\\n    border-radius: 0.5rem;\\n    z-index: 100;\\n    position: absolute;\\n}\\n\\n.toolbar.left {\\n    flex-direction: column;\\n    left: 0.25rem;\\n    top: 50%;\\n    transform: translateY(-50%);\\n}\\n\\n.toolbar.right {\\n    flex-direction: column;\\n    right: 0.25rem;\\n    top: 50%;\\n    transform: translateY(-50%);\\n}\\n\\n.toolbar.top {\\n    flex-direction: row;\\n    left: 50%;\\n    top: 0.25em;\\n    transform: translateX(-50%);\\n}\\n\\n.toolbar.bottom {\\n    flex-direction: row;\\n    left: 50%;\\n    bottom: 0.25em;\\n    transform: translateX(-50%);\\n}\\n\\n\\n.toolbar .button {\\n    /*display: inline-block;*/\\n    background: transparent;\\n}\\n\\n.toolbar .spacer {\\n    width: 1.5em;\\n    height: 1.5em;\\n}\\n\\n.palette {\\n    position: relative;\\n    transition: transform 0.25s;\\n    display: inline-block;\\n    float: left;\\n    text-align: center;\\n    z-index: 100;\\n}\\n\\n.palette .option i {\\n    font-size: 0.75em;\\n}\\n\\n/* down direction is default: */\\n.palette .options{\\n    position: absolute;\\n    display: flex;\\n    flex-wrap: wrap;\\n    background: lightgray;\\n    border-radius: 0.5rem;\\n    padding: 0.25rem;\\n    transition: transform 0.15s;\\n    top: 2.25rem;\\n    left: 50%;\\n    transform: translateX(-50%);\\n}\\n\\n.palette .option {\\n    width: 1em;\\n    height: 1em;\\n    line-height: 0.75em;\\n    display: inline-block;\\n    margin: 0.25em;\\n    float: left;\\n    transition: transform 0.25s;\\n    background-size: contain;\\n    background-repeat: no-repeat;\\n    background-position: center;\\n}\\n\\n.palette .options .option {\\n    margin: 0.125em;\\n}\\n\\n.palette .option:active {\\n    transform: scale(0.9);\\n}\\n\\n.palette .options .arrow {\\n    position: absolute;\\n    width: 0;\\n    height: 0;\\n    font-size: 0.25rem;\\n    top: -2em;\\n    left: 50%;\\n    margin-left: -1em;\\n    border-left: 1em solid transparent;\\n    border-right: 1em solid transparent;\\n    border-bottom: 2em solid lightgray;\\n    border-top: none;\\n}\\n\\n.toolbar.left .palette .options{\\n    left: 2.25rem;\\n    top: 50%;\\n    transform: translateY(-50%);\\n}\\n\\n.toolbar.left .palette .options .arrow {\\n    top: initial;\\n    left: -2em;\\n    top: 50%;\\n    margin-top: -1em;\\n    border-top: 1em solid transparent;\\n    border-bottom: 1em solid transparent;\\n    border-right: 2em solid lightgray;\\n}\\n\\n.toolbar.right .palette .options{\\n    left: initial;\\n    right: 2.25rem;\\n    top: 50%;\\n    transform: translateY(-50%);\\n}\\n\\n.toolbar.right .palette .options .arrow {\\n    left: initial;\\n    top: initial;\\n    right: -2em;\\n    top: 50%;\\n    margin-top: -1em;\\n    border-top: 1em solid transparent;\\n    border-bottom: 1em solid transparent;\\n    border-left: 2em solid lightgray;\\n    border-right: 0;\\n}\\n\\n.toolbar.bottom .palette .options{\\n    left: 50%;\\n    top: initial;\\n    bottom: 2.25rem;\\n    transform: translateX(-50%);\\n}\\n\\n.toolbar.bottom .palette .options .arrow {\\n    top: initial;\\n    bottom: -2em;\\n    left: 50%;\\n    margin-left: -1em;\\n    border-left: 1em solid transparent;\\n    border-right: 1em solid transparent;\\n    border-top: 2em solid lightgray;\\n    border-bottom: none;\\n}\\n\\n.palette.collapsed:active {\\n    transform: scale(0.9);\\n}\\n\\n.toolbar.top .palette.collapsed .options, .toolbar.bottom .palette.collapsed .options {\\n    transform: translateX(-50%) scale(0.0);\\n}\\n\\n.toolbar.left .palette.collapsed .options, .toolbar.right .palette.collapsed .options {\\n    transform: translateY(-50%) scale(0.0);\\n}\\n\\n#stamp-palette.palette .options{\\n    font-size: 1.5rem;\\n}\\n\\n@media (max-width: 400px), (max-height: 400px){\\n    #stamp-palette.palette .options{\\n        font-size: 1rem;\\n    }\\n}\\n\\n.line-width{\\n    background: black;\\n    height: 100%;\\n    margin: auto;\\n    border-radius: 0.15em;\\n}\\n\\n#color-palette .option {\\n    border-radius: 40%;\\n}\\n\\n.hidden {\\n    display: none!important;\\n}\\n\\n.disabled {\\n    opacity: 0.25;\\n}\\n\\n.selected {\\n    background: #58b0ff!important;\\n    color: white;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js!./painter.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = function() {};\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\nvar deferredModules = [\n\t[8781,196]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = function() {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb_paint\"] = self[\"webpackChunkweb_paint\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = function() {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = function() {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (function() {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\n__webpack_require__.x();\n"],"sourceRoot":""}