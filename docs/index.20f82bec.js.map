{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BACqB;;;8BACC;;sBAGD;;;;;;;;;;;;;;;;;;;;IAEfA;EAOF;;;IACIA,IAAIC;IAEJ,KAAKC,SAASC,SAASC,eAAe;IACtCC,OAAOC,iBAAiB,UAAU,UAAAC;MAC9BC,MAAKC;;IAET,KAAKA;IAEL,KAAKC,6CAAwB;IAC7B,KAAKA,SAASC,kBAAkB,UAACC;MAC7BJ,MAAKK,UAAUC,UAAUF,IACpBG,KAAK;QACFP,MAAKQ,SAASR,MAAKK;;;IAI/B,KAAKA,+CAA0B,SAAQ;MACnCL,MAAKQ,SAASR,MAAKE;;;;;IAQvB,KAAKM,SAAS,KAAKN;;;;;UAIbO,WAAWZ,OAAOa,aAAab,OAAOc;UACtCC,gBAAgBf,OAAOa,aAAa;UACpCG,cAAcC,KAAKC,IAAIlB,OAAOa,YAAYb,OAAOc;UACjDK,eAAeF,KAAKG,IAAIpB,OAAOa,YAAYb,OAAOc;UAClDO,sBAAsBL,6BAAqBM;UAC3CC,oBAAoBJ,8BAAsBK;UAE1CC,kCAA0BC,qBAAqBX,gBACjDE,KAAKC,IAAIG,qBAAqBE,qBAC9BN,KAAKG,IAAIC,qBAAqBE;MAElC,KAAK1B,OAAO8B,MAAMC,uBAAcH;MAChC,KAAK5B,OAAO8B,MAAME,mBAAUjB,WAAW,OAAOZ,OAAOa,aAAaY,kCAA0BH,SAAS;;;;6BAOhGQ;UACD,KAAKC;QACL,KAAKA,WAAWC;;MAEpB,KAAKD,aAAaD;MAClB,KAAKC,WAAWE;;;;;MARhBnC,SAASoC,cAAc,UAAAhC;QAAWA,MAAMiC;;;;;;;AAahDnC,OAAOoC,UAAUzC;;;;;;SCpEI0C;;qBALF;sBACE;yBACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGDA;;;;;;;;;;;MAOb,KAAKC;;;;;;UAID,KAAKC;;;MAIT,KAAKA;gEAEoBC;;;cAAhBC;cACDC,0CAA0B,KAAKC,UAAUF,MAAMlC,IAAI,UAACA;mBAAeJ,MAAKG,gBAAgBC;;UAC5F,KAAKgC,YAAYK,KAAKF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICxBrBG;EAIZ,cAAYtC;;IACX,KAAKoC,WAA2B7C,SAASC,eAAeQ;SACnD,KAAKoC;MACTG,QAAQC,iDAAwCxC;;IAEjD,KAAKyB;;;;;aAIE,KAAKW,SAASK;QACpB,KAAKL,SAASM,YAAyB,KAAKN,SAASO;;;;;;MAKtD,KAAKP,SAASQ,UAAUC,OAAO;;;;;MAI/B,KAAKT,SAASQ,UAAUE,IAAI;;;;+BAGlBC;MACV,KAAKX,SAASQ,UAAUI,OAAO,WAAWD;;;;;cAIlC,KAAKX,SAASQ,UAAUK,SAAS;;;;;;;AC/B3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ICvCaC;EACTC,OAAO;EACPC,gBAAgB;EAChBC,eAAe;EACflC,kBAAkB;;;EAClBmC,cAAc;;;EACdC,gBAAgB;;;EAChBxC,OAAO;EACPE,QAAQ;EACRgB;IAEQjC,IAAI;IACJwD,SAAS;;IAGTxD,IAAI;IACJwD,SAAS;;IAGTxD,IAAI;IACJwD,SAAS;;IAGTxD,IAAI;IACJwD,SAAS;;IAGTxD,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;IAGJA,IAAI;;;;;;;;SCzDKyD;;0BAHH;;mCACO;;;;;;;;;;;;;;;;;;;;;IAEJA;;;;aAKC,KAAKrB,SAASpC;;;EAEhC,mBAAY0D,QAAqB1D,IAAYD;;;QACrC4D,UAA0BpE,SAASqE,cAAc;IACrD,KAAKxB,WAAWuB;IAChBA,QAAQ3D,KAAKA;IACb2D,QAAQf,UAAUE,IAAI;+BAEhBe,aAAaF,SAAQ,UAAAhE;MACvBA,MAAMiC;UACF7B;QACAA,gBAAgBC;;;IAIxB2D,QAAQjE,iBAAiB,cAAc,UAACC;UAChCA,MAAMmE,UAAUlE,MAAKI;;;MAGzBJ,MAAKM;;IAGT,KAAK6D,aAAaC;IAClB,KAAKD,OAAOE,YAAY;IACxBN,QAAQO,YAAY,KAAKH;QAErBI,yCAAoBC,eAAepE;QACnCmE;MACA,KAAKE,eAAeL;MACpB,KAAKK,SAASJ,YAAY;MAC1B,KAAKI,SAASC,MAAMH;MACpBR,QAAQO,YAAY,KAAKG;;IAG7BX,OAAOQ,YAAYP;IACnB,KAAKzD;;;;;;0CAKQqE,SAAS,KAAKvE,IACtBG,KAAK,UAAAqE;QACFC,OAAKV,OAAOO,MAAME,OAAOE,IAAIC,gBAAgBH,QAAQ;QACrDC,OAAKV,OAAO3C,MAAMwD,UAAUJ,OAAO,YAAY;;;;;;;;;;;SC1C1CK;;qBATH;;sBACG;oBACJ;;;;;;;;;;;;;;;;;;;;;IAEbC;IACAC,OAAe;IACfC;IACAC,qBAAqB;IAEJJ;;;;;;;aAGNpF,OAAOyF,gBAAgB;;;;mCAGZlF;UACdmF,sBAAclD,OAAOmD,KAAK,UAAAC;eAAKA,EAAErF,MAAMA;;aACpCmF,QAAQ,OAAO,OAAOA,KAAK3B;;;;wBAGpB8B;0BACFnC;;;wCADoBoC;QAAAA;;MAIhChD,QAAQiD,IAAIF,SAASC;;;;;WAIhBN;eACM;;UAGLQ,MAAMC,YAAYD;aACjBX,OAAOa,SAAS,KAAKb,OAAO,MAAMW,MAAM;QAC3CX,OAAOc;;MAEXd,OAAOzC,KAAKoD;MACZV,OAAOrE,KAAKG,IAAI,IAAI,KAAKgF,KAAKd,MAAMD,OAAOa,QAAQ;UAC/CX,eAAe;QACfA,cAA2BzF,SAASC,eAAe;YAC/CwF,eAAe;UACf,KAAKQ,IAAI;UACTP,qBAAqB;;;;MAI7BD,YAAYc,YAAYf,KAAKgB,QAAQ;;;;iCAGdpC,SAAsBqC;MAC7CrC,QAAQjE,iBAAiB,cAAc,UAAAC;eAASA,MAAMiC;;MACtD+B,QAAQjE,iBAAiB,YAAYsG;MACrCrC,QAAQjE,iBAAiB,SAASsG;;;;iCAGXrC,SAAsBqC;UAAkDC,4EAAgB;UAE3GC;UACAC,SAAS;UACTC,SAAkB;MAEtBzC,QAAQjE,iBAAiB,cAAc,UAAAC;QACnCyG,SAAS;QACTF,QAAQG,WAAW;UACfL,SAASM,KAAKH,QAAQxG;UACtByG,SAAS;WACVH;;MAEPtC,QAAQjE,iBAAiB,YAAY,UAAAC;YAC7ByG;UACAzG,MAAM4G;UACNH,SAAS;;UAGTI,aAAaN;;;;;;+CAKgBvG;UAC/B8G,WAAWlH,SAASmH,qBAAqB;eACtCC,IAAI,GAAGA,IAAIF,SAASd,QAAQgB;QACjCF,SAASE,GAAGC,cAAcjH;;;;;;aAKvBkH,KAAKpB,MAAMqB;;;;yBAGHC,GAAWC,GAAWC;aAC9BF,KAAK,IAAIE,SAASD,IAAIC;;;;0BAGbC,OAAeC,OAAeC;aACvC1G,KAAKG,IAAIsG,OAAOzG,KAAKC,IAAIuG,OAAOE;;;;8BAGnBC,QAAgBC,QAAgBL;UAChDA,SAAS;eACFI;;UAGPJ,SAAS;eACFK;;UAGLC,MAAMF,SAAS,eAAe;UAC9BG,MAAMH,SAAS,eAAe;UAC9BI,MAAMJ,SAAS,eAAe;UAC9BK,KAAML,SAAS;UAEfM,MAAML,SAAS,eAAe;UAC9BM,MAAMN,SAAS,eAAe;UAC9BO,MAAMP,SAAS,eAAe;UAC9BQ,KAAMR,SAAS;UAEfS,IAAIrH,KAAKsH,MAAMnD,MAAMgB,KAAK6B,IAAII,IAAIb;UAClCgB,IAAIvH,KAAKsH,MAAMnD,MAAMgB,KAAK4B,IAAII,IAAIZ;UAClCD,IAAItG,KAAKsH,MAAMnD,MAAMgB,KAAK2B,IAAII,IAAIX;UAClCF,IAAI;;aAEHgB,KAAKE,KAAK,MAAMjB,KAAK,MAAM;;;;+BAGbkB,MAAgCC,MAAgCC;UAC/ErH,QAAQmH,KAAKG,OAAOtH;UACpBE,SAASiH,KAAKG,OAAOpH;UACrBqH,QAAQJ,KAAKK,aAAa,GAAG,GAAGxH,OAAOE;UACvCuH,QAAQL,KAAKI,aAAa,GAAG,GAAGxH,OAAOE;UACvCwH,WAAWL,QAAQG,aAAa,GAAG,GAAGxH,OAAOE;UAE7CyH,UAAUC,kBAAkBL,MAAMM,KAAKC;UACvCC,UAAUH,kBAAkBH,MAAMI,KAAKC;UACvCE,UAAUJ,kBAAkBF,SAASG,KAAKC;eAEvClC,IAAI,GAAGA,IAAI5F,QAAQE,QAAQ0F;YAC1BI,IAAIgC,IAAIpC,IAAI,IAAI,KAAK;QAC3B+B,IAAI/B,IAAI,IAAI,MAAM,IAAII,KAAK2B,IAAI/B,IAAI,IAAI,KAAKI,IAAI+B,IAAInC,IAAI,IAAI;QAC5D+B,IAAI/B,IAAI,IAAI,MAAM,IAAII,KAAK2B,IAAI/B,IAAI,IAAI,KAAKI,IAAI+B,IAAInC,IAAI,IAAI;QAC5D+B,IAAI/B,IAAI,IAAI,MAAM,IAAII,KAAK2B,IAAI/B,IAAI,IAAI,KAAKI,IAAI+B,IAAInC,IAAI,IAAI;QAC5D+B,IAAI/B,IAAI,IAAI,MAAM,IAAII,KAAK2B,IAAI/B,IAAI,IAAI,KAAKI,IAAI+B,IAAInC,IAAI,IAAI;;MAEhEuB,KAAKc,aAAaV,OAAO,GAAG;;;;kCAGJW;UACpBlB,IAAI,GAAGE,IAAI,GAAGjB,IAAI;UAElBiC,EAAEtD,UAAU;QACZoC,IAAImB,SAASD,EAAE,KAAKA,EAAE,IAAI;QAC1BhB,IAAIiB,SAASD,EAAE,KAAKA,EAAE,IAAI;QAC1BjC,IAAIkC,SAASD,EAAE,KAAKA,EAAE,IAAI;;QAG1BlB,IAAImB,SAASD,EAAE,KAAKA,EAAE,IAAI;QAC1BhB,IAAIiB,SAASD,EAAE,KAAKA,EAAE,IAAI;QAC1BjC,IAAIkC,SAASD,EAAE,KAAKA,EAAE,IAAI;;aAGvB,aAAalB,KAAKE,KAAK,MAAMjB,KAAK;;;;8BAGrBmC,WAAqCC,MAA0BC;UAC7EC,YAAY;UACZvI,QAAQoI,UAAUd,OAAOtH;UACzBE,SAASkI,UAAUd,OAAOpH;UAE1BsI,aAAaJ,UAAUZ,aAAa,GAAG,GAAGxH,OAAOE;UACjDuI,eAAeD,WAAWX;MAEhCS,gBAAgBA,cAAcI,OAAOC;UAC/BC,aAAqBN,cAAcO,IAAIP,cAAcQ,IAAI9I;UAEzD+I,SAASN,aAAaG,aAAa;UACnCI,SAASP,aAAaG,aAAa,IAAI;UACvCK,SAASR,aAAaG,aAAa,IAAI;UACvCM,SAAST,aAAaG,aAAa,IAAI;;eAGpChD,IAAI,GAAGA,IAAI5F,QAAQE,QAAQ0F;QAChCyC,KAAKzC,IAAI,IAAI,KAAK;;UAGlBuD;MACJA,MAAM7H,KAAKgH;UACPA,cAAcO,IAAI;QAClBM,MAAM7H,+BAAegH,cAAcO,IAAI,GAAGP,cAAcQ;;UAExDR,cAAcO,IAAI7I,QAAQ;QAC1BmJ,MAAM7H,+BAAegH,cAAcO,IAAI,GAAGP,cAAcQ;;UAExDR,cAAcQ,IAAI;QAClBK,MAAM7H,+BAAegH,cAAcO,GAAGP,cAAcQ,IAAI;;UAExDR,cAAcQ,IAAI5I,SAAS;QAC3BiJ,MAAM7H,+BAAegH,cAAcO,GAAGP,cAAcQ,IAAI;;aAGrDK,MAAMvE,SAAS;YAEdwE,MAAMD,MAAME;YAEZC,cAAcF,IAAIP,GAAGO,IAAIN,GAAG;;;YAI1BS,OAAOC,SAASJ,IAAIP,GAAGO,IAAIN;YAC3BW,OAAOC,UAAUN,IAAIP,GAAGO,IAAIN;QAClCa,WAAWJ,MAAME,MAAML,IAAIN,IAAI;QAC/Ba,WAAWJ,MAAME,MAAML,IAAIN,IAAI;;MAGnC,kBAAkBD,GAAWC;YAErBS,OAAOV;eACJU,QAAQ;cAEPD,cAAcC,MAAMT,GAAG;;;UAG3BS,QAAQ;;eAELA,OAAO;;MAGlB,mBAAmBV,GAAWC;YAEtBW,OAAeZ,IAAI;eAChBY,OAAOzJ;cAENsJ,cAAcG,MAAMX,GAAG;;;UAG3BW,QAAQ;;eAELA,OAAO;;MAGlB,oBAAoBF,MAAcE,MAAcX;YAExCA,IAAI,KAAKA,KAAK5I;;;iBAKT2I,IAAIU,MAAMV,KAAKY,MAAMZ;cAEtBS,cAAcT,GAAGC,GAAG;;;UAGxBK,MAAM7H,+BAAeuH,GAAGC;;;MAKhC,uBAAuBD,GAAWC,GAAWc;YACrCC,SAAShB,IAAIC,IAAI9I,SAAS;YAC1B8J,SAASD,QAAQ;YACjBxB,KAAKyB;iBACE;;;;;;;;;;;;;YAePrB,aAAaqB,YAAY;cACrBF;YACAvB,KAAKyB,UAAU;;iBAEZ;;;;;;;;;;;eAaJ;;;;;yCAIoBC,KAA+BC;UACzDnB,IAAuBmB,KAAvBnB,GAAGC,IAAoBkB,KAApBlB,GAAG9I,QAAiBgK,KAAjBhK,OAAOE,SAAU8J,KAAV9J;UAEdF,SAAS,KAAKE,UAAU;oCACZ+J;;UAGVpC,OAAOkC,IAAIvC,aAAaqB,GAAGC,GAAG9I,OAAOE;UACrCgK,SAASrC,KAAKA;UAEhB0B,OAAOvJ;UACPyJ,OAAO;UACPU,OAAOjK;UACPkK,OAAO;eAEFC,KAAK,GAAGA,KAAKnK,QAAQmK;iBACjBC,KAAK,GAAGA,KAAKtK,OAAOsK;cACrBJ,QAAQI,KAAKD,KAAKrK,SAAS,IAAI;YAC/BuJ,OAAOe,KAAKf,OAAOe,KAAKf;YACxBE,OAAOa,KAAKb,OAAOa,KAAKb;YACxBU,OAAOE,KAAKF,OAAOE,KAAKF;YACxBC,OAAOC,KAAKD,OAAOC,KAAKD;;;;MAKpCvB,KAAKU;MACLT,KAAKqB;MACLnK,QAAQL,KAAKC,IAAI,GAAG6J,OAAOF,OAAO;MAClCrJ,SAASP,KAAKC,IAAI,GAAGwK,OAAOD,OAAO;sCACnBtB,GAAGC,GAAG9I,OAAOE;;;;+BAGRgK,QAA2BlK,OAAeE;eACtD4I,IAAI,GAAGA,IAAI5I,QAAQ4I;iBACfD,IAAI,GAAGA,IAAI7I,QAAQ,GAAG6I;cACrBjD,KAAKiD,IAAIC,IAAI9I,SAAS,IAAI;cAC5BkK,OAAOtE,IAAI;YACXsE,OAAOtE,KAAK;;;iBAGX2E,KAAIvK,QAAQ,GAAGuK,KAAI,GAAGA;cACrBC,MAAKD,KAAIzB,IAAI9I,SAAS,IAAI;cAC5BkK,OAAOM,KAAI;YACXN,OAAOM,MAAK;;;;eAIfC,MAAI,GAAGA,MAAIzK,OAAOyK;iBACdC,KAAI,GAAGA,KAAIxK,SAAS,GAAGwK;cACtBC,OAAKF,MAAIC,KAAI1K,SAAS,IAAI;cAC5BkK,OAAOS,MAAI,IAAI3K;YACfkK,OAAOS,OAAK;;;iBAGXC,MAAI1K,SAAS,GAAG0K,MAAI,GAAGA;cACtBC,OAAKJ,MAAIG,MAAI5K,SAAS,IAAI;cAC5BkK,OAAOW,MAAI,IAAI7K;YACfkK,OAAOW,OAAK;;;;;;;;;;;;;SChWXC;;qBAFH;;;;;;;;;;;;;;;;;;;;;IAEGA;EAIjB,eAAYjC,GAAWC;;IACnB,KAAKD,IAAIA;IACT,KAAKC,IAAIA;;;;;iBAIEgC,MAAM,KAAKjC,GAAG,KAAKC;;;;wBAO9BiC;MACA,KAAKlC,KAAKkC,EAAElC;MACZ,KAAKC,KAAKiC,EAAEjC;aACL;;;;6BAOFiC;MACL,KAAKlC,KAAKkC,EAAElC;MACZ,KAAKC,KAAKiC,EAAEjC;aACL;;;;;MAIP,KAAKD,IAAIlJ,KAAKgJ,MAAM,KAAKE;MACzB,KAAKC,IAAInJ,KAAKgJ,MAAM,KAAKG;aAClB;;;;0BAGLS,MAAcY,MAAcV,MAAcW;MAC5C,KAAKvB,0BAAUmC,MAAMzB,MAAME,MAAM,KAAKZ;MACtC,KAAKC,0BAAUkC,MAAMb,MAAMC,MAAM,KAAKtB;aAC/B;;;;wBA7BA9C,GAAUC;iBACN6E,MAAM9E,EAAE6C,IAAI5C,EAAE4C,GAAG7C,EAAE8C,IAAI7C,EAAE6C;;;;6BASxB9C,GAAUC;iBACX6E,MAAM9E,EAAE6C,IAAI5C,EAAE4C,GAAG7C,EAAE8C,IAAI7C,EAAE6C;;;;6BAqBxB9C,GAAUC;UAClBgF,KAAKjF,EAAE6C,IAAI5C,EAAE4C;UACbqC,KAAKlF,EAAE8C,IAAI7C,EAAE6C;aACVnJ,KAAKwL,KAAKF,KAAKA,KAAKC,KAAKA;;;;2BAGtBlF,GAAUC;iBACT6E,MAAM,OAAO9E,EAAE6C,IAAI5C,EAAE4C,IAAI,OAAO7C,EAAE8C,IAAI7C,EAAE6C;;;;2BAGzCiC,GAAUK;iBACTN,MAAM,IAAIM,OAAOvC,IAAIkC,EAAElC,GAAG,IAAIuC,OAAOtC,IAAIiC,EAAEjC;;;;yBAG9CuC,IAAWC,IAAWtF;iBACnB8E,MACPO,GAAGxC,KAAK,IAAI7C,KAAKsF,GAAGzC,IAAI7C,GACxBqF,GAAGvC,KAAK,IAAI9C,KAAKsF,GAAGxC,IAAI9C;;;;;;;;;;SChEfuF;;;;;;;;;;;;;;;;;;;;;IAAAA;;;;aAMG,KAAK1C;;;;;aACL,KAAKC;;;;;aACL,KAAKD,IAAI,KAAK7I;;;;;aACd,KAAK8I,IAAI,KAAK5I;;;EAElC,cAAY2I,GAAWC,GAAW9I,OAAeE;;IAC7C,KAAK2I,IAAIA;IACT,KAAKC,IAAIA;IACT,KAAK9I,QAAQA;IACb,KAAKE,SAASA;;;;;aAIP,KAAKF,SAAS,KAAK,KAAKE,UAAU;;;;;iBAI9BqL,KAAK,GAAG,GAAG,GAAG;;;;;;;;;;SClBZC;;kCALU;;0BACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIGA;;;;;;uCAWcvM;;WAC5BA;eACGwM,QAAQC,OAAO;;aAGhB,KAAKC,QAAQC,QAAQ3M,IAC1BG,KAAK,UAAAqE;aACAA;;iBAEGgI,QAAQI,QAAQ;;YAGpBC,MAAMjN,MAAKkN,cAAc9M,IAAIwE;aAC5BqI;iBACGL,QAAQI,QAAQ;;YAGpBC,IAAIE,UAAU;iBACVF,IAAIE,SAAS5M,KAAK;mBAAMqM,QAAQI,QAAQC;;;mBAGrCL,QAAQ,UAAAI;UAClBC,IAAIG,SAAS;mBAAMJ,QAAQC;;;;;;;8BAKP7M;aAChB,KAAKiN,mBAAmBjN;;;;6BAGTA;aACA,KAAK0M,QAAQC,QAAQ3M;;;;kCAGfA,IAAYwE;UACpCqI,UAAU7I;MACd6I,IAAI7M,KAAKA;MACT6M,IAAIvI,MAAMI,IAAIC,gBAAgBH;aACvBqI;;;;;+FAGsB7M,IAAYwE;;;;;;;;uBAElC,KAAKkI,QAAQQ,QAAQlN,IAAIwE;;;;;;;;gBAI1B7E,YAAYwN,YAAoB;kBAAerJ,QAAQ9D;;2CACvDoN,2BAA2BzN;;;;;;;;;;;;;;;gCAGRK;aAClB,KAAK0M,QAAQW,WAAWrN,IAC7BG,KAAK;YACCR,YAAYwN,YAAoB;UAAiBrJ,QAAQ9D;;mCACzDoN,2BAA2BzN;;;;;;aAK5B,KAAK+M,QAAQY;;;;;UAnEhB,KAAKC,YAAY;QACpB,KAAKA;;aAEC,KAAKA;;;;;;;;;;SCVOC;;2BAHG;;+BACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAENA;;;;;;;;;;8FAEiBC;MAAgBC,MAAM;;;;;;4BAEhD1N;aACG,KAAK2N,YAAYhB,QAAQ3M;;;;4BAG5BA,IAAYwE;aACT,KAAKmJ,YAAYT,QAAQlN,IAAIwE;;;;+BAG7BxE;aACA,KAAK2N,YAAYN,WAAWrN;;;;;aAI5B,KAAK2N,YAAYL;;;;4BAGpBM;aACG,KAAKD,YAAYE,QAAQD;;;;;;;;;;;;;;;CClBvC,UAASE;aAAaC,YAAU,mBAAiBC,WAAS;IAAaA,OAAOD,UAAQD;oBAAmBG,WAAS,cAAYA,OAAOC;IAAKD,WAAUH;;QAAY7F;eAAYxI,WAAS;MAAawI,IAAExI;sBAAsB0O,WAAS;MAAalG,IAAEkG;sBAAsBC,SAAO;MAAanG,IAAEmG;;MAAUnG,IAAE;;IAAKA,EAAEoG,cAAcP;;GAAO;MAAeG,QAAOD,QAAOD;UAAgB,WAAWO,GAAElH,GAAEW;IAAG,WAAWwG,GAAEC;WAAOpH,EAAEmH;aAAQD,EAAEC;cAAQxH,WAAS0H,WAAS,cAAYA;eAAYD,KAAGzH,UAASA,EAAEwH,IAAG;cAAM5H,UAASA,EAAE4H,IAAG;cAAOT,QAAMY,MAAM,yBAAuBH,IAAE;iBAAYT,EAAEa,OAAK,oBAAoBb;;YAAOc,IAAExH,EAAEmH;UAAIR;;QAAYO,EAAEC,GAAG,GAAGjI,KAAKsI,EAAEb,SAAQ,UAAS1I;cAAO+B,IAAEkH,EAAEC,GAAG,GAAGlJ;iBAAUwJ,EAAEzH,IAAEA,IAAE/B;WAAIuJ,GAAEA,EAAEb,SAAQ1I,GAAEiJ,GAAElH,GAAEW;;aAAUX,EAAEmH,GAAGR;;QAAYpH,WAAS8H,WAAS,cAAYA;aAAgBF,IAAE,GAAEA,IAAExG,EAAEpC,QAAO4I,KAAIM,EAAE9G,EAAEwG;WAAWM;;IAAK,IAAG,UAASC,SAAQd,QAAOD;OAC50B,UAAUI;QACX;YACIY,WAAWZ,OAAOa,oBAAoBb,OAAOc;YAE7CC;;cAGEH;gBACE3I,SAAS;gBACT+I,eAAeJ,SAASK;gBACxBzL,UAAUwK,OAAO5O,SAAS8P,eAAe;YAC7CF,SAASG,QAAQ3L;cACf4L,eAAe;;YAEjBL,gBAAgB;cACdvL,QAAQiF,OAAQxC,WAAWA,SAAS;;sBAE5B+H,OAAOqB,uBAAuBrB,OAAOsB,mBAAmB;gBAC9DC,cAAcvB,OAAOsB;YACzBC,QAAQC,MAAMC,YAAYR;YAC1BF,gBAAgB;cACdQ,QAAQG,MAAMC,YAAY;;sBAEnB,cAAc3B,YAAU,wBAAwBA,OAAO5O,SAASqE,cAAc;YACvFsL,gBAAgB;;;kBAIVa,WAAW5B,OAAO5O,SAASqE,cAAc;cAC7CmM,SAASC,qBAAqB;gBAC5BZ;gBAEAW,SAASC,qBAAqB;gBAC9BD,SAASE,WAAWvN,YAAYqN;gBAChCA,WAAW;;cAEb5B,OAAO5O,SAAS2Q,gBAAgBhM,YAAY6L;;;YAG9Cb,gBAAgB;cACd7I,WAAW+I,UAAU;;;;YAKvBe;YACAC;;QAEJ;UACED,WAAW;cACPxJ,GAAG0J;cACHC,MAAMF,MAAMzK;iBACT2K;YACLD,WAAWD;YACXA;YACAzJ,KAAK;qBACIA,IAAI2J;cACXD,SAAS1J;;YAEX2J,MAAMF,MAAMzK;;UAEdwK,WAAW;;QAGbnC,OAAOD,UAAUwC;QACjB,mBAAmBC;cACbJ,MAAM/N,KAAKmO,UAAU,MAAML;YAC7BjB;;;SAID5I,KAAK,aAAY6H,WAAW,cAAcA,gBAAgBC,SAAS,cAAcA,cAAc3O,WAAW,cAAcA;;IACrH,IAAG,UAASqP,SAAQd,QAAOD;MACjC;UACIwC,YAAYzB,QAAQ;;MAGxB;UAEI2B;UAEAC,YAAY;UACZC,aAAa;UACbC,WAAW;MAEf5C,OAAOD,UAAUvB;MAEjB,iBAAiBqE;mBACJA,aAAa;oBACZC,UAAU;;QAEtB,KAAKC,QAAQH;QACb,KAAKR;QACL,KAAKY,eAAe;YAChBH,aAAaI;UACfC,sBAAsB,MAAML;;;MAIhCrE,QAAQ2E,UAAU,WAAW,UAAUC;eAC9B,KAAKjR,KAAK,MAAMiR;;MAEzB5E,QAAQ2E,UAAUhR,OAAO,UAAUkR,aAAaD;mBACnCC,gBAAgB,cAAc,KAAKN,UAAUJ,oBAC/CS,eAAe,cAAc,KAAKL,UAAUL;iBAC5C;;YAELY,cAAc,KAAKC,YAAYN;YAC/B,KAAKF,UAAUH;cACbC,WAAW,KAAKE,UAAUJ,YAAYU,cAAcD;UACxDI,OAAOF,SAAST,UAAU,KAAKG;;UAE/B,KAAKZ,MAAM/N,SAASoP,UAAUH,SAASD,aAAaD;;eAG/CE;;MAET,mBAAmBA,SAASD,aAAaD;QACvC,KAAKE,UAAUA;mBACJD,gBAAgB;UACzB,KAAKA,cAAcA;UACnB,KAAKK,gBAAgB,KAAKC;;mBAEjBP,eAAe;UACxB,KAAKA,aAAaA;UAClB,KAAKQ,eAAe,KAAKC;;;MAG7BJ,UAAUN,UAAUO,gBAAgB,UAAUI;QAC5CrB,SAAS7D,QAAQ,KAAK0E,SAASQ;;MAEjCL,UAAUN,UAAUQ,qBAAqB,UAAUG;QACjDN,OAAO,KAAKF,SAAS,KAAKD,aAAaS;;MAEzCL,UAAUN,UAAUS,eAAe,UAAUE;QAC3CrB,SAAShE,OAAO,KAAK6E,SAASQ;;MAEhCL,UAAUN,UAAUU,oBAAoB,UAAUC;QAChDN,OAAO,KAAKF,SAAS,KAAKF,YAAYU;;MAGxC,gBAAgBR,SAASS,MAAMD;QAC7BvB,UAAU;cACJyB;;YAEFA,cAAcD,KAAKD;mBACZzM;mBACAoL,SAAShE,OAAO6E,SAASjM;;cAE9B2M,gBAAgBV;YAClBb,SAAShE,OAAO6E,aAAaR,UAAU;;YAEvCL,SAAS7D,QAAQ0E,SAASU;;;;MAKhCvB,SAAS7D,UAAU,UAAUwB,MAAM0D;YAC7BG,SAASC,SAASC,SAASL;YAC3BG,OAAOG,WAAW;iBACb3B,SAAShE,OAAO2B,MAAM6D,OAAOH;;YAElCO,WAAWJ,OAAOH;YAElBO;UACFnB,sBAAsB9C,MAAMiE;;UAE5BjE,KAAK2C,QAAQJ;UACbvC,KAAK4C,UAAUc;cACXnL,KAAK;cACL2J,MAAMlC,KAAKgC,MAAMzK;mBACZgB,IAAI2J;YACXlC,KAAKgC,MAAMzJ,GAAG+K,cAAcI;;;eAGzB1D;;MAETqC,SAAShE,SAAS,UAAU2B,MAAM5L;QAChC4L,KAAK2C,QAAQL;QACbtC,KAAK4C,UAAUxO;YACXmE,KAAK;YACL2J,MAAMlC,KAAKgC,MAAMzK;iBACZgB,IAAI2J;UACXlC,KAAKgC,MAAMzJ,GAAGiL,aAAapP;;eAEtB4L;;MAGT,iBAAiBkE;;YAEXnS,OAAOmS,OAAOA,IAAInS;YAClBmS,eAAeA,QAAQ,mBAAmBA,QAAQ,sBAAsBnS,SAAS;iBAC5E;YACLA,KAAKoS,MAAMD,KAAKE;;;;MAKtB,+BAA+BpE,MAAMiE;;YAE/BjM,SAAS;QACb,iBAAiB0L;cACX1L;;;UAGJA,SAAS;UACTqK,SAAShE,OAAO2B,MAAM0D;;QAGxB,mBAAmBA;cACb1L;;;UAGJA,SAAS;UACTqK,SAAS7D,QAAQwB,MAAM0D;;QAGzB;UACEO,SAASI,WAAWC;;YAGlBT,SAASC,SAASS;YAClBV,OAAOG,WAAW;UACpBM,QAAQT,OAAOH;;;MAInB,kBAAkBC,MAAMD;YAClBc;;UAEFA,IAAId,QAAQC,KAAKD;UACjBc,IAAIR,SAAS;iBACN/M;UACPuN,IAAIR,SAAS;UACbQ,IAAId,QAAQzM;;eAEPuN;;MAGTpG,QAAQI,UAAUA;MAClB,iBAAiBkF;YACXA,iBAAiB;iBACZA;;eAEFrB,SAAS7D,YAAY,KAAKqE,WAAWa;;MAG9CtF,QAAQC,SAASA;MACjB,gBAAgBoG;YACVvB,cAAc,KAAKL;eAChBR,SAAShE,OAAO6E,SAASuB;;MAGlCrG,QAAQsG,MAAMA;MACd,aAAaC;YACP3E,OAAO;YACP4E,OAAO7B,UAAUrK,SAASR,KAAKyM,cAAc;iBACxC,KAAKtG,WAAWqE,UAAU;;YAG/BR,MAAMyC,SAASpN;YACfS,SAAS;aACRkK;iBACI,KAAK1D;;YAGVqG,aAAaC,MAAM5C;YACnB6C,WAAW;YACXxM,KAAK;YACL2K,cAAc,KAAKL;iBAEdtK,IAAI2J;UACX8C,YAAYL,SAASpM,IAAIA;;eAEpB2K;QACP,qBAAqBQ,OAAOnL;UAC1ByH,KAAKxB,QAAQkF,OAAO3R,KAAKkT,gBAAgB,UAAU7Q;iBAC5C4D;cACHA,SAAS;cACTqK,SAAShE,OAAO6E,SAAS9O;;;UAG7B,wBAAwB8Q;YACtBL,OAAOtM,KAAK2M;kBACNH,aAAa7C,QAAQlK;cACzBA,SAAS;cACTqK,SAAS7D,QAAQ0E,SAAS2B;;;;;MAMlCzG,QAAQ+G,OAAOA;MACf,cAAcR;YACR3E,OAAO;YACP4E,OAAO7B,UAAUrK,SAASR,KAAKyM,cAAc;iBACxC,KAAKtG,WAAWqE,UAAU;;YAG/BR,MAAMyC,SAASpN;YACfS,SAAS;aACRkK;iBACI,KAAK1D;;YAGVjG,KAAK;YACL2K,cAAc,KAAKL;iBAEdtK,IAAI2J;UACXO,SAASkC,SAASpM;;eAEb2K;QACP,kBAAkBQ;UAChB1D,KAAKxB,QAAQkF,OAAO3R,KAAK,UAAUqT;iBAC5BpN;cACHA,SAAS;cACTqK,SAAS7D,QAAQ0E,SAASkC;;aAE3B,UAAUhR;iBACN4D;cACHA,SAAS;cACTqK,SAAShE,OAAO6E,SAAS9O;;;;;;MAM9B,KAAI;;IAAI,IAAG,UAASsM,SAAQd,QAAOD;OACrC,UAAUI;QACX;mBACWA,OAAO3B,YAAY;UAC5B2B,OAAO3B,UAAUsC,QAAQ;;SAGxBxI,KAAK,aAAY6H,WAAW,cAAcA,gBAAgBC,SAAS,cAAcA,cAAc3O,WAAW,cAAcA;;MACxH,KAAI;;IAAI,IAAG,UAASqP,SAAQd,QAAOD;MACtC;UAEI0F,iBAAiBC,WAAW,qBAAqBA,OAAOC,aAAa,WAAW,UAAUrB;sBAAqBA;UAAS,UAAUA;eAAcA,cAAcoB,WAAW,cAAcpB,IAAIf,gBAAgBmC,UAAUpB,QAAQoB,OAAOvC,YAAY,kBAAkBmB;;MAEtQ,yBAAyBsB,UAAUC;cAAqBD,oBAAoBC;oBAA0B/C,UAAU;;;MAEhH;;;qBAGmBgD,cAAc;mBACdA;;qBAEAC,oBAAoB;mBACpBA;;qBAEAC,iBAAiB;mBACjBA;;qBAEAC,eAAe;mBACfA;;qBAEAC,gBAAgB;mBAChBA;;iBAEN7O;;;;UAKT8O,MAAMC;MAEV;;;;eAIaD,QAAQA,IAAIE;mBACN;;;;;;cAMPC,kBAAkBC,iBAAiB,gBAAe,6BAA4BC,KAAKC,UAAUC,gBAAe,UAASF,KAAKC,UAAUC,gBAAe,cAAaF,KAAKC,UAAUE;cAE/KC,kBAAkBC,UAAU,cAAcA,MAAM/N,WAAWgO,QAAQ,qBAAqB;;;;;;;mBAQnFR,YAAYM,oBAAoBd,cAAc;;;;iBAKhDiB,gBAAgB;iBAClB1P;iBACE;;;;;;;;;MAUf,oBAAoB2P,OAAOC;;QAEvBD,QAAQA;QACRC,aAAaA;;qBAEEC,KAAKF,OAAOC;iBAClB5P;cACDA,EAAEqI,SAAS;kBACLrI;;cAEN8P,iBAAiBC,gBAAgB,cAAcA,qBAAqBC,kBAAkB,cAAcA,uBAAuBC,mBAAmB,cAAcA,iBAAiBC;cAC7KC,cAAcL;mBACTxO,IAAI,GAAGA,IAAIqO,MAAMrP,QAAQgB,KAAK;YACnC6O,QAAQC,OAAOT,MAAMrO;;iBAElB6O,QAAQE,QAAQT,WAAWU;;;;;iBAM/BnJ,YAAY;;;QAGnBsC,QAAQ;;UAER8G,YAAYpJ;MAEhB,yBAAyB8E,SAAStL;YAC1BA;UACAsL,QAAQnR,KAAK,UAAU8R;YACnBjM,SAAS,MAAMiM;aAChB,UAAUzP;YACTwD,SAASxD;;;;MAKrB,6BAA6B8O,SAAStL,UAAU6P;mBACjC7P,aAAa;UACpBsL,QAAQnR,KAAK6F;;mBAGN6P,kBAAkB;UACzBvE,QAAQ,SAASuE;;;MAIzB,sBAAsBC;;mBAEPA,QAAQ;UACfvT,QAAQwT,KAAKD,MAAM;UACnBA,MAAME,OAAOF;;eAGVA;;MAGX;YACQtD,UAAU7M,iBAAiB6M,UAAUA,UAAU7M,SAAS,OAAO;iBACxD6M,UAAUA,UAAU7M,SAAS;;;;;UAOxCsQ,4BAA4B;UAC5BC,qBAAqB;UACrBC;UACArP,WAAWkM,OAAO7B,UAAUrK;;UAG5BsP,YAAY;UACZC,aAAa;;;;;;MAOjB,iCAAiCC;YACzB3Q,SAAS2Q,IAAI3Q;YACb4Q,UAAUC,YAAY7Q;YACtB8Q,UAAUC,WAAWH;iBAChB5P,IAAI,GAAGA,IAAIhB,QAAQgB;UACxB8P,IAAI9P,KAAK2P,IAAIK,WAAWhQ;;eAErB4P;;;;;;;;;;;;;;;;;MAkBX,yCAAyCpC;mBAC1ByB,UAAU,UAAUhJ;cACvBgK,MAAMzC,IAAI0C,YAAYZ,2BAA2BI;cACjD7R,OAAOsS,YAAY;UACvBF,IAAIG,YAAYd,2BAA2Be,IAAIxS,MAAM;UAErDoS,IAAIK,UAAU,UAAU5R;;;YAGpBA,EAAEzD;YACFyD,EAAE6R;YACFtK,QAAQ;;UAGZgK,IAAIO,aAAa;gBACTC,gBAAgB3C,UAAUC,UAAU2C,MAAM;gBAC1CC,cAAc7C,UAAUC,UAAU2C,MAAM;;;YAG5CzK,QAAQ0K,gBAAgBF,iBAAiBlO,SAASkO,cAAc,IAAI,OAAO;;WAEhF,SAAS;iBACD;;;MAIf,2BAA2BjD;mBACZ+B,kBAAkB;iBAClBN,UAAUhJ,QAAQsJ;;eAEtBqB,gCAAgCpD,KAAKhU,KAAK,UAAU2R;UACvDoE,gBAAgBpE;iBACToE;;;MAIf,yBAAyBsB;YACjBC,YAAYtB,WAAWqB,OAAO9J;;YAG9BgK;QAEJA,kBAAkBpG,cAAcsE,UAAU,UAAUhJ,SAASH;UACzDiL,kBAAkB9K,UAAUA;UAC5B8K,kBAAkBjL,SAASA;;;QAI/BgL,UAAUE,mBAAmBtV,KAAKqV;;aAG7BD,UAAUG;UACXH,UAAUG,UAAUF,kBAAkBpG;;UAEtCmG,UAAUG,UAAUH,UAAUG,QAAQzX,KAAK;mBAChCuX,kBAAkBpG;;;;MAKrC,2BAA2BkG;YACnBC,YAAYtB,WAAWqB,OAAO9J;;YAG9BgK,oBAAoBD,UAAUE,mBAAmBvN;;;YAIjDsN;UACAA,kBAAkB9K;iBACX8K,kBAAkBpG;;;MAIjC,0BAA0BkG,QAAQK;YAC1BJ,YAAYtB,WAAWqB,OAAO9J;;YAG9BgK,oBAAoBD,UAAUE,mBAAmBvN;;;YAIjDsN;UACAA,kBAAkBjL,OAAOoL;iBAClBH,kBAAkBpG;;;MAIjC,wBAAwBkG,QAAQM;mBACjBlC,UAAU,UAAUhJ,SAASH;UACpC0J,WAAWqB,OAAO9J,QAAQyI,WAAWqB,OAAO9J,SAASqK;cAEjDP,OAAOQ;gBACHF;cACAG,gBAAgBT;cAChBA,OAAOQ,GAAGE;;qBAEHtL,QAAQ4K,OAAOQ;;;cAI1BG,UAAUX,OAAO9J;cAEjBoK;YACAK,OAAO9V,KAAKmV,OAAOY;;cAGnBC,UAAUlE,IAAIE,KAAK9B,MAAM4B,KAAKgE;cAE9BL;YACAO,QAAQC,kBAAkB,UAAUjT;kBAC5B2S,KAAKK,QAAQpG;;gBAEb+F,GAAGO,kBAAkBf,OAAOgB;oBACxBnT,EAAEoT,cAAc;;kBAEhBT,GAAGO,kBAAkBtC;;uBAEpByC;oBACDA,GAAGhL,SAAS;kBACZnL,QAAQwT,KAAK,mBAAmByB,OAAO9J,OAAO,MAAM,qCAAqCrI,EAAEoT,aAAa,iBAAiBpT,EAAEsT,aAAa,wBAAwBnB,OAAOgB,YAAY;;wBAE7KE;;;;;UAMtBL,QAAQO,UAAU,UAAUvT;YACxBA,EAAEzD;YACF6K,OAAO4L,QAAQ7V;;UAGnB6V,QAAQQ,YAAY;YAChBjM,QAAQyL,QAAQpG;YAChB6G,kBAAkBtB;;;;MAK9B,gCAAgCA;eACrBuB,eAAevB,QAAQ;;MAGlC,gCAAgCA;eACrBuB,eAAevB,QAAQ;;MAGlC,0BAA0BA,QAAQwB;aACzBxB,OAAOQ;iBACD;;YAGPiB,cAAczB,OAAOQ,GAAGkB,iBAAiBjW,SAASuU,OAAOgB;YACzDW,cAAc3B,OAAOY,UAAUZ,OAAOQ,GAAGI;YACzCgB,YAAY5B,OAAOY,UAAUZ,OAAOQ,GAAGI;YAEvCe;;;cAGI3B,OAAOY,YAAYY;YACnBzW,QAAQwT,KAAK,mBAAmByB,OAAO9J,OAAO,MAAM,uCAAuC8J,OAAOQ,GAAGI,UAAU,iBAAiBZ,OAAOY,UAAU;;;UAGrJZ,OAAOY,UAAUZ,OAAOQ,GAAGI;;YAG3BgB,aAAaH;;;;cAITA;gBACII,aAAa7B,OAAOQ,GAAGI,UAAU;gBACjCiB,aAAa7B,OAAOY;cACpBZ,OAAOY,UAAUiB;;;iBAIlB;;eAGJ;;;MAIX,qBAAqB7U;mBACNoR,UAAU,UAAUhJ,SAASH;cAChC6M,aAAaC;UACjBD,OAAOV,UAAUnM;UACjB6M,OAAOE,YAAY,UAAUnU;gBACrBoU,SAASC,KAAKrU,EAAEsU,OAAO1H,UAAU;YACrCrF;cACIgN,6BAA6B;cAC7BhR,MAAM6Q;cACN9D,MAAMnR,KAAKmR;;;UAGnB2D,OAAOO,mBAAmBrV;;;;MAKlC,qBAAqBsV;YACbC,YAAYC,wBAAwBC,KAAKH,YAAYlR;eAClDkO,YAAYiD;UAAcpE,MAAMmE,YAAYnE;;;;MAIvD,wBAAwB7D;eACbA,SAASA,MAAM8H;;;;;;MAO1B,qBAAqB5T;YACboI,OAAO;YAEPkD,UAAUlD,KAAK8L,aAAa/Z,KAAK;cAC7BsX,YAAYtB,WAAW/H,KAAK+L,QAAQzM;cAEpC+J,aAAaA,UAAUG;mBAChBH,UAAUG;;;QAIzBwC,oBAAoB9I,SAAStL,UAAUA;eAChCsL;;;;;MAMX,uBAAuBkG;QACnBS,gBAAgBT;YAEZC,YAAYtB,WAAWqB,OAAO9J;YAC9B2M,UAAU5C,UAAU4C;iBAEf1T,IAAI,GAAGA,IAAI0T,QAAQ1U,QAAQgB;cAC5B2T,SAASD,QAAQ1T;cACjB2T,OAAOH,QAAQnC;YACfsC,OAAOH,QAAQnC,GAAGE;YAClBoC,OAAOH,QAAQnC,KAAK;;;QAG5BR,OAAOQ,KAAK;eAELuC,uBAAuB/C,QAAQrX,KAAK,UAAU6X;UACjDR,OAAOQ,KAAKA;cACRwC,iBAAiBhD;;mBAEViD,uBAAuBjD;;iBAE3BQ;WACR7X,KAAK,UAAU6X;;;UAGdR,OAAOQ,KAAKP,UAAUO,KAAKA;mBAClBrR,IAAI,GAAGA,IAAI0T,QAAQ1U,QAAQgB;YAChC0T,QAAQ1T,GAAGwT,QAAQnC,KAAKA;;WAE7B,SAAS,UAAUH;UAClB6C,iBAAiBlD,QAAQK;gBACnBA;;;;;MAMd,2BAA2BL,QAAQmD,MAAM3U,UAAU4U;YAC3CA,YAAYC;UACZD,UAAU;;;cAINE,KAAKtD,OAAOQ,GAAGnB,YAAYW,OAAOgB,WAAWmC;UACjD3U,SAAS,MAAM8U;iBACVjD;cACD+C,UAAU,OAAOpD,OAAOQ,MAAMH,IAAInK,SAAS,uBAAuBmK,IAAInK,SAAS;mBACxEkI,UAAUhJ,UAAUzM,KAAK;mBACvBqX,OAAOQ,MAAMH,IAAInK,SAAS,oBAAoB8J,OAAOQ,GAAGkB,iBAAiBjW,SAASuU,OAAOgB,cAAchB,OAAOY,WAAWZ,OAAOQ,GAAGI;;oBAEhIZ,OAAOQ;kBACPR,OAAOY,UAAUZ,OAAOQ,GAAGI,UAAU;;;uBAGlCqC,uBAAuBjD;;eAEnCrX,KAAK;qBACG4a,cAAcvD,QAAQrX,KAAK;gBAC9B6a,kBAAkBxD,QAAQmD,MAAM3U,UAAU4U,UAAU;;eAEzD,SAAS5U;;UAGhBA,SAAS6R;;;MAIjB;;;;UAGQwC;;;UAEArC,IAAI;;;UAEJJ,SAAS;;;UAETD;;;;;MAMR,sBAAsBsD;YACd7M,OAAO;YACPoJ;UACAQ,IAAI;;YAGJiD;mBACStU,KAAKsU;YACVzD,OAAO7Q,KAAKsU,QAAQtU;;;;YAKxB8Q,YAAYtB,WAAWqB,OAAO9J;;aAG7B+J;UACDA,YAAYM;;UAEZ5B,WAAWqB,OAAO9J,QAAQ+J;;;QAI9BA,UAAU4C,QAAQhY,KAAK+L;;aAGlBA,KAAK8L;UACN9L,KAAK8L,aAAa9L,KAAK8M;UACvB9M,KAAK8M,QAAQC;;;YAIbC;QAEJ;;;iBAGWxF,UAAUhJ;;iBAGZyO,IAAI,GAAGA,IAAI5D,UAAU4C,QAAQ1U,QAAQ0V;cACtCf,SAAS7C,UAAU4C,QAAQgB;cAC3Bf,WAAWlM;;YAEXgN,aAAa/Y,KAAKiY,OAAOJ,aAAa,SAASoB;;;;YAKnDjB,UAAU5C,UAAU4C,QAAQkB,MAAM;;;eAI/B3F,UAAU9C,IAAIsI,cAAcjb,KAAK;UACpCqX,OAAOQ,KAAKP,UAAUO;;iBAEfuC,uBAAuB/C;WAC/BrX,KAAK,UAAU6X;UACdR,OAAOQ,KAAKA;cACRwC,iBAAiBhD,QAAQpJ,KAAKoN,eAAepD;;mBAEtCqC,uBAAuBjD;;iBAE3BQ;WACR7X,KAAK,UAAU6X;UACdR,OAAOQ,KAAKP,UAAUO,KAAKA;UAC3B5J,KAAK+L,UAAU3C;;mBAENiE,IAAI,GAAGA,IAAIpB,QAAQ1U,QAAQ8V;gBAC5BnB,SAASD,QAAQoB;gBACjBnB,WAAWlM;;cAEXkM,OAAOH,QAAQnC,KAAKR,OAAOQ;cAC3BsC,OAAOH,QAAQ/B,UAAUZ,OAAOY;;;;;MAMhD,iBAAiBtC,KAAK9P;YACdoI,OAAO;QAEX0H,MAAM4F,aAAa5F;YAEfxE,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;YACd6a,kBAAkB5M,KAAK+L,SAAS/D,WAAW,UAAUyB,KAAKhB;kBAClDgB;uBACOpL,OAAOoL;;;oBAIV8D,QAAQ9E,YAAYE,YAAY3I,KAAK+L,QAAQ3B;oBAC7CoD,MAAMD,MAAME,IAAI/F;gBAEpB8F,IAAI/C,YAAY;sBACR/G,QAAQ8J,IAAI3J;sBACZH,UAAU+I;oBACV/I,QAAQ;;sBAERgK,eAAehK;oBACfA,QAAQiK,YAAYjK;;kBAExBlF,QAAQkF;;gBAGZ8J,IAAIhD,UAAU;kBACVnM,OAAOmP,IAAIpZ;;uBAEV6C;gBACLoH,OAAOpH;;;aAGhB,SAASoH;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;;MAIX,iBAAiBqC,UAAU3N;YACnBoI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;YACd6a,kBAAkB5M,KAAK+L,SAAS/D,WAAW,UAAUyB,KAAKhB;kBAClDgB;uBACOpL,OAAOoL;;;oBAIV8D,QAAQ9E,YAAYE,YAAY3I,KAAK+L,QAAQ3B;oBAC7CoD,MAAMD,MAAMM;oBACZC,kBAAkB;gBAEtBN,IAAI/C,YAAY;sBACRsD,SAASP,IAAI3J;sBAEbkK;wBACIrK,QAAQqK,OAAOrK;wBACfgK,eAAehK;sBACfA,QAAQiK,YAAYjK;;wBAEpBG,SAAS0B,SAAS7B,OAAOqK,OAAOrG,KAAKoG;;;;wBAKrCjK,gBAAgB;sBAChBrF,QAAQqF;;sBAERkK,OAAO;;;oBAGXvP;;;gBAIRgP,IAAIhD,UAAU;kBACVnM,OAAOmP,IAAIpZ;;uBAEV6C;gBACLoH,OAAOpH;;;aAGhB,SAASoH;;QAGhBuP,gBAAgB1K,SAAStL;eAElBsL;;MAGX,iBAAiBwE,KAAKhE,OAAO9L;YACrBoI,OAAO;QAEX0H,MAAM4F,aAAa5F;YAEfxE,cAAcsE,UAAU,UAAUhJ,SAASH;cACvC+K;UACJpJ,KAAK8M,QAAQ/a,KAAK;YACdqX,SAASpJ,KAAK+L;gBACVrT,SAASR,KAAKwL,WAAW;qBAClBsK,kBAAkB5E,OAAOQ,IAAI7X,KAAK,UAAUkc;oBAC3CA;yBACOvK;;uBAEJwK,YAAYxK;;;mBAGpBA;aACR3R,KAAK,UAAU2R;YACdkJ,kBAAkB5M,KAAK+L,SAAS9D,YAAY,UAAUwB,KAAKhB;kBACnDgB;uBACOpL,OAAOoL;;;oBAIV8D,QAAQ9E,YAAYE,YAAY3I,KAAK+L,QAAQ3B;;;;;oBAM7C1G,UAAU;kBACVA,QAAQ+I;;oBAGRe,MAAMD,MAAM3E,IAAIlF,OAAOgE;gBAE3Be,YAAYM,aAAa;;;;;;;sBAOjBrF,UAAU+I;oBACV/I,QAAQ;;kBAGZlF,QAAQkF;;gBAEZ+E,YAAYI,UAAUJ,YAAY+B,UAAU;sBACpCf,MAAM+D,IAAIpZ,QAAQoZ,IAAIpZ,QAAQoZ,IAAI/E,YAAYrU;kBAClDiK,OAAOoL;;uBAENxS;gBACLoH,OAAOpH;;;aAGhB,SAASoH;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,oBAAoBwE,KAAK9P;YACjBoI,OAAO;QAEX0H,MAAM4F,aAAa5F;YAEfxE,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;YACd6a,kBAAkB5M,KAAK+L,SAAS9D,YAAY,UAAUwB,KAAKhB;kBACnDgB;uBACOpL,OAAOoL;;;oBAIV8D,QAAQ9E,YAAYE,YAAY3I,KAAK+L,QAAQ3B;;;;;;oBAM7CoD,MAAMD,MAAM,UAAU7F;gBAC1Be,YAAYM,aAAa;kBACrBvK;;gBAGJiK,YAAY+B,UAAU;kBAClBnM,OAAOmP,IAAIpZ;;;;gBAKfqU,YAAYI,UAAU;sBACdY,MAAM+D,IAAIpZ,QAAQoZ,IAAIpZ,QAAQoZ,IAAI/E,YAAYrU;kBAClDiK,OAAOoL;;uBAENxS;gBACLoH,OAAOpH;;;aAGhB,SAASoH;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,eAAetL;YACPoI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;YACd6a,kBAAkB5M,KAAK+L,SAAS9D,YAAY,UAAUwB,KAAKhB;kBACnDgB;uBACOpL,OAAOoL;;;oBAIV8D,QAAQ9E,YAAYE,YAAY3I,KAAK+L,QAAQ3B;oBAC7CoD,MAAMD,MAAMY;gBAEhB1F,YAAYM,aAAa;kBACrBvK;;gBAGJiK,YAAYI,UAAUJ,YAAY+B,UAAU;sBACpCf,MAAM+D,IAAIpZ,QAAQoZ,IAAIpZ,QAAQoZ,IAAI/E,YAAYrU;kBAClDiK,OAAOoL;;uBAENxS;gBACLoH,OAAOpH;;;aAGhB,SAASoH;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,gBAAgBtL;YACRoI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;YACd6a,kBAAkB5M,KAAK+L,SAAS/D,WAAW,UAAUyB,KAAKhB;kBAClDgB;uBACOpL,OAAOoL;;;oBAIV8D,QAAQ9E,YAAYE,YAAY3I,KAAK+L,QAAQ3B;oBAC7CoD,MAAMD,MAAMa;gBAEhBZ,IAAI/C,YAAY;kBACZjM,QAAQgP,IAAI3J;;gBAGhB2J,IAAIhD,UAAU;kBACVnM,OAAOmP,IAAIpZ;;uBAEV6C;gBACLoH,OAAOpH;;;aAGhB,SAASoH;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,aAAalK,GAAGpB;YACRoI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;cACvCrF,IAAI;YACJwF,QAAQ;;;UAKZwB,KAAK8M,QAAQ/a,KAAK;YACd6a,kBAAkB5M,KAAK+L,SAAS/D,WAAW,UAAUyB,KAAKhB;kBAClDgB;uBACOpL,OAAOoL;;;oBAIV8D,QAAQ9E,YAAYE,YAAY3I,KAAK+L,QAAQ3B;oBAC7CiE,WAAW;oBACXb,MAAMD,MAAMe;gBAEhBd,IAAI/C,YAAY;sBACRsD,SAASP,IAAI3J;uBACZkK;;oBAEDvP,QAAQ;;;sBAKRxF,MAAM;;;oBAGNwF,QAAQuP,OAAOrG;;yBAEV2G;;;sBAGDA,WAAW;sBACXN,OAAOQ,QAAQvV;;;sBAGfwF,QAAQuP,OAAOrG;;;;gBAK3B8F,IAAIhD,UAAU;kBACVnM,OAAOmP,IAAIpZ;;uBAEV6C;gBACLoH,OAAOpH;;;aAGhB,SAASoH;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,cAActL;YACNoI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;YACd6a,kBAAkB5M,KAAK+L,SAAS/D,WAAW,UAAUyB,KAAKhB;kBAClDgB;uBACOpL,OAAOoL;;;oBAIV8D,QAAQ9E,YAAYE,YAAY3I,KAAK+L,QAAQ3B;oBAC7CoD,MAAMD,MAAMe;oBACZpP;gBAEJsO,IAAI/C,YAAY;sBACRsD,SAASP,IAAI3J;uBAEZkK;oBACDvP,QAAQU;;;kBAIZA,KAAKjL,KAAK8Z,OAAOrG;kBACjBqG,OAAO;;gBAGXP,IAAIhD,UAAU;kBACVnM,OAAOmP,IAAIpZ;;uBAEV6C;gBACLoH,OAAOpH;;;aAGhB,SAASoH;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,sBAAsB2J,SAASjV;QAC3BA,WAAW4W,YAAYrK,MAAM,MAAMC;YAE/BqK,gBAAgB,KAAK3Z;QACzB+X,iBAAiBA,YAAY,cAAcA;aACtCA,QAAQvN;UACTuN,QAAQvN,OAAOuN,QAAQvN,QAAQmP,cAAcnP;UAC7CuN,QAAQzC,YAAYyC,QAAQzC,aAAaqE,cAAcrE;;YAGvDpK,OAAO;YACPkD;aACC2J,QAAQvN;UACT4D,UAAUsE,UAAUnJ,OAAO;;cAEvBqQ,cAAc7B,QAAQvN,SAASmP,cAAcnP,QAAQU,KAAK+L,QAAQnC;cAElE+E,YAAYD,cAAclH,UAAUhJ,QAAQwB,KAAK+L,QAAQnC,MAAMuC,uBAAuBU,SAAS9a,KAAK,UAAU6X;gBAC1GP,YAAYtB,WAAW8E,QAAQvN;gBAC/B2M,UAAU5C,UAAU4C;YACxB5C,UAAUO,KAAKA;qBACNrR,IAAI,GAAGA,IAAI0T,QAAQ1U,QAAQgB;cAChC0T,QAAQ1T,GAAGwT,QAAQnC,KAAKA;;mBAErBA;;eAGNiD,QAAQzC;YACTlH,UAAUyL,UAAU5c,KAAK,UAAU6X;cAC/BC,gBAAgBgD;kBAEZxD,YAAYtB,WAAW8E,QAAQvN;kBAC/B2M,UAAU5C,UAAU4C;cAExBrC,GAAGE;uBACMvR,IAAI,GAAGA,IAAI0T,QAAQ1U,QAAQgB;oBAC5B2T,SAASD,QAAQ1T;gBACrB2T,OAAOH,QAAQnC,KAAK;;kBAGpBgF,oBAAoBpH,UAAU,UAAUhJ,SAASH;oBAC7CmP,MAAMzH,IAAI8I,eAAehC,QAAQvN;gBAErCkO,IAAIhD,UAAUgD,IAAIsB,YAAY,UAAUrF;sBAChCG,KAAK4D,IAAI3J;sBACT+F;oBACAA,GAAGE;;kBAEPzL,OAAOoL;;gBAGX+D,IAAI/C,YAAY;sBACRb,KAAK4D,IAAI3J;sBACT+F;oBACAA,GAAGE;;kBAEPtL,QAAQoL;;;qBAITgF,cAAc7c,KAAK,UAAU6X;gBAChCP,UAAUO,KAAKA;yBACNrR,IAAI,GAAGA,IAAI0T,QAAQ1U,QAAQgB;sBAC5BwW,UAAU9C,QAAQ1T;kBACtBmS,kBAAkBqE,QAAQhD;;iBAE/B,SAAS,UAAUtC;iBACjB6C,iBAAiBO,SAASpD,QAAQjC,UAAUhJ,WAAW,SAAS;sBAC3DiL;;;;YAIdvG,UAAUyL,UAAU5c,KAAK,UAAU6X;mBAC1BA,GAAGkB,iBAAiBjW,SAASgY,QAAQzC;;;kBAItCG,aAAaX,GAAGI,UAAU;cAE9BH,gBAAgBgD;kBAEZxD,YAAYtB,WAAW8E,QAAQvN;kBAC/B2M,UAAU5C,UAAU4C;cAExBrC,GAAGE;uBACMvR,IAAI,GAAGA,IAAI0T,QAAQ1U,QAAQgB;oBAC5B2T,SAASD,QAAQ1T;gBACrB2T,OAAOH,QAAQnC,KAAK;gBACpBsC,OAAOH,QAAQ/B,UAAUO;;kBAGzByE,wBAAwBxH,UAAU,UAAUhJ,SAASH;oBACjDmP,MAAMzH,IAAIE,KAAK4G,QAAQvN,MAAMiL;gBAEjCiD,IAAIhD,UAAU,UAAUf;sBAChBG,KAAK4D,IAAI3J;kBACb+F,GAAGE;kBACHzL,OAAOoL;;gBAGX+D,IAAItD,kBAAkB;sBACdN,KAAK4D,IAAI3J;kBACb+F,GAAGqF,kBAAkBpC,QAAQzC;;gBAGjCoD,IAAI/C,YAAY;sBACRb,KAAK4D,IAAI3J;kBACb+F,GAAGE;kBACHtL,QAAQoL;;;qBAIToF,kBAAkBjd,KAAK,UAAU6X;gBACpCP,UAAUO,KAAKA;yBACNqD,IAAI,GAAGA,IAAIhB,QAAQ1U,QAAQ0V;sBAC5BiC,WAAWjD,QAAQgB;kBACvBiC,SAASnD,QAAQnC,KAAKA;kBACtBc,kBAAkBwE,SAASnD;;iBAEhC,SAAS,UAAUtC;iBACjB6C,iBAAiBO,SAASpD,QAAQjC,UAAUhJ,WAAW,SAAS;sBAC3DiL;;;;;QAMtBmE,gBAAgB1K,SAAStL;eAClBsL;;UAGPiM;QACAC,SAAS;QACTC,cAAcA;QACdC,UAAUC;QACV9P,SAASA;QACTlB,SAASA;QACTO,SAASA;QACTG,YAAYA;QACZkP,OAAOA;QACP5W,QAAQA;QACRmQ,KAAKA;QACLxI,MAAMA;QACNsQ,cAAcA;;MAGlB;sBACkBrJ,iBAAiB;;;;;UAM/BsJ,aAAa;UAEbC,mBAAmB;UACnBC,yBAAyB;UAEzBC,oBAAoB;UACpBC,2BAA2BD,kBAAkBrY;;UAG7CuY,mBAAmB;UACnBC,YAAY;UACZC,iBAAiB;UACjBC,kBAAkB;UAClBC,yBAAyB;UACzBC,kBAAkB;UAClBC,kBAAkB;UAClBC,mBAAmB;UACnBC,mBAAmB;UACnBC,oBAAoB;UACpBC,oBAAoB;UACpBC,gCAAgCZ,2BAA2BC,iBAAiBvY;UAE5EmZ,aAAa9L,OAAO7B,UAAUrK;MAElC,wBAAwBiY;;YAEhBC,eAAeD,iBAAiBpZ,SAAS;YACzC2K,MAAMyO,iBAAiBpZ;YACvBgB;YACAmF,IAAI;YACJmT,UAAUC,UAAUC,UAAUC;YAE9BL,iBAAiBA,iBAAiBpZ,SAAS,OAAO;UAClDqZ;cACID,iBAAiBA,iBAAiBpZ,SAAS,OAAO;YAClDqZ;;;YAIJnW,aAAa2N,YAAYwI;YACzBK,YAAY3I,WAAW7N;aAEtBlC,IAAI,GAAGA,IAAI2J,KAAK3J,KAAK;UACtBsY,WAAWpB,WAAW/I,QAAQiK,iBAAiBpY;UAC/CuY,WAAWrB,WAAW/I,QAAQiK,iBAAiBpY,IAAI;UACnDwY,WAAWtB,WAAW/I,QAAQiK,iBAAiBpY,IAAI;UACnDyY,WAAWvB,WAAW/I,QAAQiK,iBAAiBpY,IAAI;;UAGnD0Y,MAAMvT,OAAOmT,YAAY,IAAIC,YAAY;UACzCG,MAAMvT,QAAQoT,WAAW,OAAO,IAAIC,YAAY;UAChDE,MAAMvT,QAAQqT,WAAW,MAAM,IAAIC,WAAW;;eAE3CvW;;;;MAKX,wBAAwBA;;YAEhBwW,YAAY3I,WAAW7N;YACvByW,eAAe;YACf3Y;aAECA,IAAI,GAAGA,IAAI0Y,MAAM1Z,QAAQgB,KAAK;;UAE/B2Y,gBAAgBzB,WAAWwB,MAAM1Y,MAAM;UACvC2Y,gBAAgBzB,YAAYwB,MAAM1Y,KAAK,MAAM,IAAI0Y,MAAM1Y,IAAI,MAAM;UACjE2Y,gBAAgBzB,YAAYwB,MAAM1Y,IAAI,KAAK,OAAO,IAAI0Y,MAAM1Y,IAAI,MAAM;UACtE2Y,gBAAgBzB,WAAWwB,MAAM1Y,IAAI,KAAK;;YAG1C0Y,MAAM1Z,SAAS,MAAM;UACrB2Z,eAAeA,aAAaC,UAAU,GAAGD,aAAa3Z,SAAS,KAAK;mBAC7D0Z,MAAM1Z,SAAS,MAAM;UAC5B2Z,eAAeA,aAAaC,UAAU,GAAGD,aAAa3Z,SAAS,KAAK;;eAGjE2Z;;;;;MAMX,mBAAmBxN,OAAO9L;YAClBwZ,YAAY;YACZ1N;UACA0N,YAAYV,WAAWxY,KAAKwL;;;;;;YAO5BA,UAAU0N,cAAc,0BAA0B1N,MAAMjJ,UAAUiW,WAAWxY,KAAKwL,MAAMjJ,YAAY;;;cAGhGA;cACA4W,SAASzB;cAETlM,iBAAiB0E;YACjB3N,SAASiJ;YACT2N,UAAUvB;;YAEVrV,SAASiJ,MAAMjJ;gBAEX2W,cAAc;cACdC,UAAUrB;uBACHoB,cAAc;cACrBC,UAAUpB;uBACHmB,cAAc;cACrBC,UAAUnB;uBACHkB,cAAc;cACrBC,UAAUlB;uBACHiB,cAAc;cACrBC,UAAUhB;uBACHe,cAAc;cACrBC,UAAUjB;uBACHgB,cAAc;cACrBC,UAAUf;uBACHc,cAAc;cACrBC,UAAUd;uBACHa,cAAc;cACrBC,UAAUb;;cAEV5Y,aAAa0I,MAAM;;;UAI3B1I,SAASyZ,SAASC,eAAe7W;mBAC1B2W,cAAc;;cAEjBG,iBAAiBpG;UAErBoG,WAAW3S,SAAS;;gBAEZ4S,MAAM9B,mBAAmBhM,MAAM6D,OAAO,MAAM+J,eAAe,KAAKzN;YAEpEjM,SAASgY,oBAAoBG,YAAYyB;;UAG7CD,WAAWE,kBAAkB/N;;;YAGzB9L,SAAS8Z,KAAKC,UAAUjO;mBACnBzM;YACL9C,QAAQC,MAAM,+CAA+CsP;YAE7D9L,SAAS,MAAMX;;;;;;;;;;;;MAa3B,qBAAqByM;;;;YAIbA,MAAMyN,UAAU,GAAGtB,8BAA8BD;iBAC1C8B,KAAKE,MAAMlO;;;;;YAMlBiN,mBAAmBjN,MAAMyN,UAAUV;YACnClJ,OAAO7D,MAAMyN,UAAUtB,0BAA0BY;YAEjDoB;;;YAGAtK,SAASwI,aAAaJ,uBAAuBvJ,KAAKuK;cAC9CmB,UAAUnB,iBAAiB1H,MAAM0G;UACrCkC,WAAWC,QAAQ;UACnBnB,mBAAmBA,iBAAiBQ,UAAUW,QAAQ,GAAGva;;YAEzDkD,SAASsX,eAAepB;;;gBAIpBpJ;eACCuI;mBACMrV;eACNsV;mBACMrH,YAAYjO;cAAW8M,MAAMsK;;eACnC7B;uBACUgC,UAAUvX;eACpBwV;uBACU3H,WAAW7N;eACrByV;uBACU3V,kBAAkBE;eAC5B0V;uBACU8B,WAAWxX;eACrB4V;uBACU6B,YAAYzX;eACtB2V;uBACU+B,WAAW1X;eACrB6V;uBACU8B,YAAY3X;eACtB8V;uBACU8B,aAAa5X;eACvB+V;uBACU8B,aAAa7X;;sBAEd6F,MAAM,kBAAkBiH;;;UAI1CgL;QACAC,WAAWA;QACXC,aAAaA;QACbV,gBAAgBA;QAChBT,gBAAgBA;;;;;;;;;;;MAapB,uBAAuBpR,GAAGkJ,QAAQxR,UAAU6P;QACxCvH,EAAEwS,WAAW,gCAAgCtJ,OAAOgB,YAAY,MAAM,mDAAmDxS,UAAU6P;;;;MAKvI,wBAAwBoF;YAChB7M,OAAO;YACPoJ;UACAQ,IAAI;;YAGJiD;mBACStU,KAAKsU;YACVzD,OAAO7Q,YAAYsU,QAAQtU,OAAO,WAAWsU,QAAQtU,GAAGG,aAAamU,QAAQtU;;;YAIjFoa,oBAAoBnL,UAAU,UAAUhJ,SAASH;;;;YAI7C+K,OAAOQ,KAAKzD,aAAaiD,OAAO9J,MAAMsI,OAAOwB,OAAOY,UAAUZ,OAAOwJ,aAAaxJ,OAAOyJ;mBACpF5b;mBACEoH,OAAOpH;;;UAIlBmS,OAAOQ,GAAGnB,YAAY,UAAUvI;YAC5B4S,cAAc5S,GAAGkJ,QAAQ;cACrBpJ,KAAK+L,UAAU3C;cACf5K;eACD,UAAU0B,GAAG9L;cACZiK,OAAOjK;;aAEZiK;;QAGP+K,OAAO2J,aAAaR;eACbI;;MAGX,uBAAuBzS,GAAGkJ,QAAQ4J,cAAcC,MAAMrb,UAAU6P;QAC5DvH,EAAEwS,WAAWM,cAAcC,MAAMrb,UAAU,UAAUsI,GAAG9L;cAChDA,MAAMmM,SAASnM,MAAM8e;YACrBhT,EAAEwS,WAAW,oCAAoC,oCAAoCtJ,OAAOgB,YAAY,UAAUlK,GAAGiT;mBAC5GA,QAAQC,KAAK7b;;;gBAGdub,cAAc5S,GAAGkJ,QAAQ;kBACrBlJ,EAAEwS,WAAWM,cAAcC,MAAMrb,UAAU6P;mBAC5CA;;gBAEHA,cAAcvH,GAAG9L;;eAEtBqT;;YAEHA,cAAcvH,GAAG9L;;WAEtBqT;;MAGP,mBAAmBC,KAAK9P;YAChBoI,OAAO;QAEX0H,MAAM4F,aAAa5F;YAEfxE,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;gBACVqX,SAASpJ,KAAK+L;YAClB3C,OAAOQ,GAAGnB,YAAY,UAAUvI;cAC5BmT,cAAcnT,GAAGkJ,QAAQ,mBAAmBA,OAAOgB,YAAY,2BAA2B1C,MAAM,UAAUxH,GAAGiT;oBACrGtP,SAASsP,QAAQC,KAAK7b,SAAS4b,QAAQC,KAAKE,KAAK,GAAG5P,QAAQ;;;oBAI5DG;kBACAA,SAASuF,OAAO2J,WAAWN,YAAY5O;;gBAG3CrF,QAAQqF;iBACT,UAAU3D,GAAG9L;gBACZiK,OAAOjK;;;aAGhB,SAASiK;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,mBAAmBqC,UAAU3N;YACrBoI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;gBACVqX,SAASpJ,KAAK+L;YAElB3C,OAAOQ,GAAGnB,YAAY,UAAUvI;cAC5BmT,cAAcnT,GAAGkJ,QAAQ,mBAAmBA,OAAOgB,eAAe,UAAUlK,GAAGiT;oBACvEC,OAAOD,QAAQC;oBACf7b,SAAS6b,KAAK7b;yBAETgB,IAAI,GAAGA,IAAIhB,QAAQgB;sBACpB+a,OAAOF,KAAKE,KAAK/a;sBACjBsL,SAASyP,KAAK5P;;;sBAIdG;oBACAA,SAASuF,OAAO2J,WAAWN,YAAY5O;;kBAG3CA,SAAS0B,SAAS1B,QAAQyP,KAAK5L,KAAKnP,IAAI;;;sBAIpCsL,gBAAgB;oBAChBrF,QAAQqF;;;;gBAKhBrF;iBACD,UAAU0B,GAAG9L;gBACZiK,OAAOjK;;;aAGhB,SAASiK;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,kBAAkBwE,KAAKhE,OAAO9L,UAAU2b;YAChCvT,OAAO;QAEX0H,MAAM4F,aAAa5F;YAEfxE,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;;;;gBAIV2R,UAAU+I;cACV/I,QAAQ;;;gBAIR8P,gBAAgB9P;gBAEhB0F,SAASpJ,KAAK+L;YAClB3C,OAAO2J,WAAWP,UAAU9O,OAAO,UAAUA,OAAOtP;kBAC5CA;gBACAiK,OAAOjK;;gBAEPgV,OAAOQ,GAAGnB,YAAY,UAAUvI;kBAC5BmT,cAAcnT,GAAGkJ,QAAQ,4BAA4BA,OAAOgB,YAAY,MAAM,+BAA+B1C,KAAKhE,QAAQ;oBACtHlF,QAAQgV;qBACT,UAAUtT,GAAG9L;oBACZiK,OAAOjK;;mBAEZ,UAAUqf;;;sBAGLA,SAASlT,SAASkT,SAASC;;;;;;;;wBAQvBH,cAAc;sBACd/U,QAAQmV,SAASxP,MAAMnE,OAAO0H,KAAK8L,eAAe5b,UAAU2b,cAAc;;;oBAG9ElV,OAAOoV;;;;;aAKxB,SAASpV;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,mBAAmBwE,KAAKhE,OAAO9L;eACpB+b,SAASxP,MAAM,OAAOuD,KAAKhE,OAAO9L,UAAU;;MAGvD,sBAAsB8P,KAAK9P;YACnBoI,OAAO;QAEX0H,MAAM4F,aAAa5F;YAEfxE,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;gBACVqX,SAASpJ,KAAK+L;YAClB3C,OAAOQ,GAAGnB,YAAY,UAAUvI;cAC5BmT,cAAcnT,GAAGkJ,QAAQ,iBAAiBA,OAAOgB,YAAY,mBAAmB1C,MAAM;gBAClFlJ;iBACD,UAAU0B,GAAG9L;gBACZiK,OAAOjK;;;aAGhB,SAASiK;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;;;MAKX,iBAAiBtL;YACToI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;gBACVqX,SAASpJ,KAAK+L;YAClB3C,OAAOQ,GAAGnB,YAAY,UAAUvI;cAC5BmT,cAAcnT,GAAGkJ,QAAQ,iBAAiBA,OAAOgB,eAAe;gBAC5D5L;iBACD,UAAU0B,GAAG9L;gBACZiK,OAAOjK;;;aAGhB,SAASiK;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;;;MAKX,kBAAkBtL;YACVoI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;gBACVqX,SAASpJ,KAAK+L;YAClB3C,OAAOQ,GAAGnB,YAAY,UAAUvI;;cAE5BmT,cAAcnT,GAAGkJ,QAAQ,iCAAiCA,OAAOgB,eAAe,UAAUlK,GAAGiT;oBACrFtP,SAASsP,QAAQC,KAAKE,KAAK,GAAGM;gBAClCpV,QAAQqF;iBACT,UAAU3D,GAAG9L;gBACZiK,OAAOjK;;;aAGhB,SAASiK;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;;;;;;;;MAUX,eAAelK,GAAGpB;YACVoI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;gBACVqX,SAASpJ,KAAK+L;YAClB3C,OAAOQ,GAAGnB,YAAY,UAAUvI;cAC5BmT,cAAcnT,GAAGkJ,QAAQ,qBAAqBA,OAAOgB,YAAY,0BAA0BpR,IAAI,IAAI,UAAUkH,GAAGiT;oBACxGtP,SAASsP,QAAQC,KAAK7b,SAAS4b,QAAQC,KAAKE,KAAK,GAAG5L,MAAM;gBAC9DlJ,QAAQqF;iBACT,UAAU3D,GAAG9L;gBACZiK,OAAOjK;;;aAGhB,SAASiK;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;MAGX,gBAAgBtL;YACRoI,OAAO;YAEPkD,cAAcsE,UAAU,UAAUhJ,SAASH;UAC3C2B,KAAK8M,QAAQ/a,KAAK;gBACVqX,SAASpJ,KAAK+L;YAClB3C,OAAOQ,GAAGnB,YAAY,UAAUvI;cAC5BmT,cAAcnT,GAAGkJ,QAAQ,qBAAqBA,OAAOgB,eAAe,UAAUlK,GAAGiT;oBACzEjU;yBAEK3G,IAAI,GAAGA,IAAI4a,QAAQC,KAAK7b,QAAQgB;kBACrC2G,KAAKjL,KAAKkf,QAAQC,KAAKE,KAAK/a,GAAGmP;;gBAGnClJ,QAAQU;iBACT,UAAUgB,GAAG9L;gBACZiK,OAAOjK;;;aAGhB,SAASiK;;QAGhBuP,gBAAgB1K,SAAStL;eAClBsL;;;;MAKX,0BAA0B0G;mBACXpC,UAAU,UAAUhJ,SAASH;UACpCuL,GAAGnB,YAAY,UAAUvI;YACrBA,EAAEwS,WAAW,oCAAoC,oEAAoE,UAAUxS,GAAGiT;kBAC1HU;uBAEKtb,IAAI,GAAGA,IAAI4a,QAAQC,KAAK7b,QAAQgB;gBACrCsb,WAAW5f,KAAKkf,QAAQC,KAAKE,KAAK/a,GAAG+G;;cAGzCd;gBACIoL,IAAIA;gBACJiK,YAAYA;;eAEjB,UAAU3T,GAAG9L;cACZiK,OAAOjK;;aAEZ,UAAUqf;YACTpV,OAAOoV;;;;MAKnB,wBAAwB5G,SAASjV;QAC7BA,WAAW4W,YAAYrK,MAAM,MAAMC;YAE/BqK,gBAAgB,KAAK3Z;QACzB+X,iBAAiBA,YAAY,cAAcA;aACtCA,QAAQvN;UACTuN,QAAQvN,OAAOuN,QAAQvN,QAAQmP,cAAcnP;UAC7CuN,QAAQzC,YAAYyC,QAAQzC,aAAaqE,cAAcrE;;YAGvDpK,OAAO;YACPkD;aACC2J,QAAQvN;UACT4D,UAAUsE,UAAUnJ,OAAO;;UAE3B6E,cAAcsE,UAAU,UAAUhJ;gBAC1BoL;gBACAiD,QAAQvN,SAASmP,cAAcnP;;cAE/BsK,KAAK5J,KAAK+L,QAAQnC;;cAElBA,KAAKzD,aAAa0G,QAAQvN,MAAM,IAAI,IAAI;;iBAGvCuN,QAAQzC;;cAET5L,QAAQsV,iBAAiBlK;;cAEzBpL;gBACIoL,IAAIA;gBACJiK,aAAahH,QAAQzC;;;aAG9BrY,KAAK,UAAUgiB;uBACHvM,UAAU,UAAUhJ,SAASH;cACpC0V,cAAcnK,GAAGnB,YAAY,UAAUvI;gBACnC,mBAAmBkK;6BACJ5C,UAAU,UAAUhJ,SAASH;oBACpC6B,EAAEwS,WAAW,0BAA0BtI,eAAe;sBAClD5L;uBACD,UAAU0B,GAAG9L;sBACZiK,OAAOjK;;;;oBAKf4f;yBACKzb,IAAI,GAAG2J,MAAM6R,cAAcF,WAAWtc,QAAQgB,IAAI2J,KAAK3J;kBAC5Dyb,WAAW/f,KAAKggB,UAAUF,cAAcF,WAAWtb;;gBAGvDiP,UAAU9C,IAAIsP,YAAYjiB,KAAK;kBAC3ByM;mBACD,SAAS,UAAUvH;kBAClBoH,OAAOpH;;iBAEZ,UAAUwc;gBACTpV,OAAOoV;;;;;QAMvB7F,gBAAgB1K,SAAStL;eAClBsL;;UAGPgR;QACA9E,SAAS;QACTC,cAAc8E;QACd7E,UAAU8E;QACV3U,SAAS4U;QACT9V,SAAS+V;QACTxV,SAASyV;QACTtV,YAAYuV;QACZrG,OAAOsG;QACPld,QAAQmd;QACRhN,KAAKiN;QACLzV,MAAM0V;QACNpF,cAAcqF;;MAGlB;;wBAEsBC,iBAAiB,gBAAe,aAAaA;YAEzDA,aAAahW;iBACV7H;iBACE;;;MAIf,uBAAuB4V,SAASkI;YACxBC,YAAYnI,QAAQvN,OAAO;YAE3BuN,QAAQzC,cAAc2K,cAAc3K;UACpC4K,aAAanI,QAAQzC,YAAY;;eAE9B4K;;;MAIX;YACQC,sBAAsB;;UAGtBH,aAAahW,QAAQmW,qBAAqB;UAC1CH,aAAa7V,WAAWgW;iBAEjB;iBACFhe;iBACE;;;;;;;MAQf;gBACYie,+BAA+BJ,aAAavd,SAAS;;;MAIjE,wBAAwBsV;YAChB7M,OAAO;YACPoJ;YACAyD;mBACStU,KAAKsU;YACVzD,OAAO7Q,KAAKsU,QAAQtU;;;QAI5B6Q,OAAO4L,YAAYG,cAActI,SAAS7M,KAAKoN;aAE1CgI;iBACM5N,UAAUnJ;;QAGrB2B,KAAK+L,UAAU3C;QACfA,OAAO2J,aAAaR;eAEb/K,UAAUhJ;;;;MAKrB,iBAAiB5G;YACToI,OAAO;YACPkD,UAAUlD,KAAK8M,QAAQ/a,KAAK;cACxBijB,YAAYhV,KAAK+L,QAAQiJ;mBAEpBzc,IAAIuc,aAAavd,SAAS,GAAGgB,KAAK,GAAGA;gBACtCmP,MAAMoN,aAAapN,IAAInP;gBAEvBmP,IAAIhB,QAAQsO,eAAe;cAC3BF,aAAa7V,WAAWyI;;;;QAKpCkG,gBAAgB1K,SAAStL;eAClBsL;;;;;MAMX,mBAAmBwE,KAAK9P;YAChBoI,OAAO;QAEX0H,MAAM4F,aAAa5F;YAEfxE,UAAUlD,KAAK8M,QAAQ/a,KAAK;cACxBqX,SAASpJ,KAAK+L;cACdlI,SAASiR,aAAavW,QAAQ6K,OAAO4L,YAAYtN;;;;;cAMjD7D;YACAA,SAASuF,OAAO2J,WAAWN,YAAY5O;;iBAGpCA;;QAGX+J,gBAAgB1K,SAAStL;eAClBsL;;;MAIX,mBAAmBqC,UAAU3N;YACrBoI,OAAO;YAEPkD,UAAUlD,KAAK8M,QAAQ/a,KAAK;cACxBqX,SAASpJ,KAAK+L;cACdiJ,YAAY5L,OAAO4L;cACnBK,kBAAkBL,UAAUzd;cAC5BA,SAASud,aAAavd;;;;;;;cAQtBuW,kBAAkB;mBAEbvV,IAAI,GAAGA,IAAIhB,QAAQgB;gBACpBmP,MAAMoN,aAAapN,IAAInP;gBACvBmP,IAAIhB,QAAQsO,eAAe;;;gBAG3BtR,QAAQoR,aAAavW,QAAQmJ;;;;;gBAM7BhE;cACAA,QAAQ0F,OAAO2J,WAAWN,YAAY/O;;YAG1CA,QAAQ6B,SAAS7B,OAAOgE,IAAIyJ,UAAUkE,kBAAkBvH;gBAEpDpK,eAAe;qBACRA;;;;QAKnBkK,gBAAgB1K,SAAStL;eAClBsL;;;MAIX,eAAelK,GAAGpB;YACVoI,OAAO;YACPkD,UAAUlD,KAAK8M,QAAQ/a,KAAK;cACxBqX,SAASpJ,KAAK+L;cACdlI;;YAEAA,SAASiR,aAAapN,IAAI1O;mBACrB5E;YACLyP,SAAS;;;cAITA;YACAA,SAASA,OAAOsN,UAAU/H,OAAO4L,UAAUzd;;iBAGxCsM;;QAGX+J,gBAAgB1K,SAAStL;eAClBsL;;MAGX,gBAAgBtL;YACRoI,OAAO;YACPkD,UAAUlD,KAAK8M,QAAQ/a,KAAK;cACxBqX,SAASpJ,KAAK+L;cACdxU,SAASud,aAAavd;cACtB2H;mBAEK3G,IAAI,GAAGA,IAAIhB,QAAQgB;gBACpB+c,UAAUR,aAAapN,IAAInP;gBAC3B+c,QAAQ5O,QAAQ0C,OAAO4L,eAAe;cACtC9V,KAAKjL,KAAKqhB,QAAQnE,UAAU/H,OAAO4L,UAAUzd;;;iBAI9C2H;;QAGX0O,gBAAgB1K,SAAStL;eAClBsL;;;MAIX,kBAAkBtL;YACVoI,OAAO;YACPkD,UAAUlD,KAAKd,OAAOnN,KAAK,UAAUmN;iBAC9BA,KAAK3H;;QAGhBqW,gBAAgB1K,SAAStL;eAClBsL;;;MAIX,sBAAsBwE,KAAK9P;YACnBoI,OAAO;QAEX0H,MAAM4F,aAAa5F;YAEfxE,UAAUlD,KAAK8M,QAAQ/a,KAAK;cACxBqX,SAASpJ,KAAK+L;UAClB+I,aAAa7V,WAAWmK,OAAO4L,YAAYtN;;QAG/CkG,gBAAgB1K,SAAStL;eAClBsL;;;;;;MAOX,mBAAmBwE,KAAKhE,OAAO9L;YACvBoI,OAAO;QAEX0H,MAAM4F,aAAa5F;YAEfxE,UAAUlD,KAAK8M,QAAQ/a,KAAK;;;cAGxB2R,UAAU+I;YACV/I,QAAQ;;;cAIR8P,gBAAgB9P;qBAET8D,UAAU,UAAUhJ,SAASH;gBAChC+K,SAASpJ,KAAK+L;YAClB3C,OAAO2J,WAAWP,UAAU9O,OAAO,UAAUA,OAAOtP;kBAC5CA;gBACAiK,OAAOjK;;;kBAGH0gB,aAAahW,QAAQsK,OAAO4L,YAAYtN,KAAKhE;kBAC7ClF,QAAQgV;yBACHvc;;;sBAGDA,EAAEqI,SAAS,wBAAwBrI,EAAEqI,SAAS;oBAC9CjB,OAAOpH;;kBAEXoH,OAAOpH;;;;;;QAO3B2W,gBAAgB1K,SAAStL;eAClBsL;;MAGX,wBAAwB2J,SAASjV;QAC7BA,WAAW4W,YAAYrK,MAAM,MAAMC;QAEnCyI,iBAAiBA,YAAY,cAAcA;aACtCA,QAAQvN;cACLmP,gBAAgB,KAAK3Z;UACzB+X,QAAQvN,OAAOuN,QAAQvN,QAAQmP,cAAcnP;UAC7CuN,QAAQzC,YAAYyC,QAAQzC,aAAaqE,cAAcrE;;YAGvDpK,OAAO;YACPkD;aACC2J,QAAQvN;UACT4D,UAAUsE,UAAUnJ,OAAO;;UAE3B6E,cAAcsE,UAAU,UAAUhJ;iBACzBqO,QAAQzC;cACT5L,QAAQqO,QAAQvN,OAAO;;cAEvBd,QAAQ2W,cAActI,SAAS7M,KAAKoN;;aAEzCrb,KAAK,UAAUijB;qBACLzc,IAAIuc,aAAavd,SAAS,GAAGgB,KAAK,GAAGA;kBACtCmP,MAAMoN,aAAapN,IAAInP;kBAEvBmP,IAAIhB,QAAQsO,eAAe;gBAC3BF,aAAa7V,WAAWyI;;;;;QAMxCkG,gBAAgB1K,SAAStL;eAClBsL;;UAGPqS;QACAnG,SAAS;QACTC,cAAcmG;QACdlG,UAAUmG;QACVhW,SAASiW;QACTnX,SAASoX;QACT7W,SAAS8W;QACT3W,YAAY4W;QACZ1H,OAAO2H;QACPve,QAAQwe;QACRrO,KAAKsO;QACL9W,MAAM+W;QACNzG,cAAc0G;;UAGdC,YAAY,mBAAmB3a,GAAGC;eAC3BD,MAAMC,YAAYD,MAAM,mBAAmBC,MAAM,YAAY2a,MAAM5a,MAAM4a,MAAM3a;;UAGtF4a,WAAW,kBAAkBC,OAAOC;YAChCrU,MAAMoU,MAAM/e;YACZgB,IAAI;eACDA,IAAI2J;cACHiU,UAAUG,MAAM/d,IAAIge;mBACb;;UAEXhe;;eAGG;;UAGPie,UAAU1R,MAAM0R,YAAW,UAAUC;eAC9B7R,OAAO7B,UAAUrK,SAASR,KAAKue,SAAS;;;;UAK/CC;UAEAC;UAEAC;QACAC,WAAW1H;QACX2H,QAAQ5C;QACR6C,cAAcxB;;UAGdyB,sBAAsBJ,eAAeC,UAAUzH,SAASwH,eAAeE,OAAO1H,SAASwH,eAAeG,aAAa3H;UAEnH6H,yBAAyB;UAEzBC,kBAAkB,SAAS,WAAW,WAAW,OAAO,QAAQ,UAAU,cAAc,WAAWC,OAAOF;UAE1GG;QACAxE,aAAa;QACbyE,QAAQL,mBAAmB7J;QAC3B7N,MAAM;;;;;QAGNuT,MAAM;QACNzI,WAAW;QACXJ,SAAS;;MAGb,uBAAuBsN,qBAAqBC;QACxCD,oBAAoBC,iBAAiB;cAC7BC,QAAQpT;iBACLkT,oBAAoBxK,QAAQ/a,KAAK;mBAC7BulB,oBAAoBC,eAAepT,MAAMmT,qBAAqBE;;;;MAKjF;iBACajf,IAAI,GAAGA,IAAI6L,UAAU7M,QAAQgB;cAC9Bke,MAAMrS,UAAU7L;cAEhBke;qBACSgB,QAAQhB;kBACTA,IAAIiB,eAAeD;oBACfjB,QAAQC,IAAIgB;kBACZrT,UAAU,GAAGqT,QAAQhB,IAAIgB,MAAMtK;;kBAE/B/I,UAAU,GAAGqT,QAAQhB,IAAIgB;;;;;;eAOtCrT,UAAU;;UAGjBuT,eAAc;QACd,qBAAqB9K;UACjB+K,gBAAgB,MAAMD;mBAEbE,iBAAiBjB;gBAClBA,eAAec,eAAeG;kBAC1BR,SAAST,eAAeiB;kBACxBC,aAAaT,OAAOjI;cACxB,KAAKyI,iBAAiBC;mBAEjBpB,eAAeoB;;;;gBAIhB,KAAKC,aAAaV;;;;UAK9B,KAAKjK,iBAAiB4K,WAAWZ;UACjC,KAAKa,UAAUD,WAAW,KAAK5K,gBAAgBP;UAC/C,KAAKqL,aAAa;UAClB,KAAKC,cAAc;UACnB,KAAKC,SAAS;UACd,KAAKrM,UAAU;UAEf,KAAKsM;UACL,KAAKC,UAAU,KAAKL,QAAQZ,QAAQ,SAAS;;;;;;QASjDM,YAAY5U,UAAUjO,SAAS,gBAAgB+X;;;;sBAI/BA,YAAY,cAAc,cAAcxH,QAAQwH,cAAc;;;gBAGlE,KAAKuL;yBACM9X,MAAM,2CAA2C;;qBAGvD/H,KAAKsU;kBACNtU,MAAM;gBACNsU,QAAQtU,KAAKsU,QAAQtU,GAAGggB,QAAQ,OAAO;;kBAGvChgB,MAAM,oBAAoBsU,QAAQtU,OAAO;2BAC9B+H,MAAM;;cAGrB,KAAK2X,QAAQ1f,KAAKsU,QAAQtU;;;;iBAK1B,YAAYsU,YAAWA,QAAQwK;qBACxB,KAAKiB,UAAU,KAAKL,QAAQZ;;mBAGhC;4BACOxK,YAAY;mBACnB,KAAKoL,QAAQpL;;mBAEb,KAAKoL;;;;;QAQpBN,YAAY5U,UAAUgV,eAAe,sBAAsBS,cAAc5gB,UAAU6P;cAC3EvE,cAAcsE,UAAU,UAAUhJ,SAASH;;kBAEnCyZ,aAAaU,aAAapJ;kBAC1BqJ,sBAAsBnY,MAAM,sCAAsC;;;mBAIjEkY,aAAapJ;gBACd/Q,OAAOoa;;;kBAIPC,gBAAgBxB,eAAeC,OAAO;uBACjC5e,IAAI,GAAG2J,MAAMwW,cAAcnhB,QAAQgB,IAAI2J,KAAK3J;oBAC7CogB,mBAAmBD,cAAcngB;;;oBAIjCqgB,cAAcvC,SAASY,uBAAuB0B;qBAC7CC,cAAcJ,aAAaG,6BAA6BH,aAAaG,sBAAsB;kBAC5Fta,OAAOoa;;;;kBAKXI,0BAA0B;oBACtBC,8BAA8B,qCAAqCC;yBAC5D;wBACC3kB,YAAYkM,MAAM,YAAYyY,aAAa;wBAC3C7V,UAAUsE,UAAUnJ,OAAOjK;oBAC/BwZ,gBAAgB1K,SAASkB,UAAUA,UAAU7M,SAAS;2BAC/C2L;;;yBAIN/F,KAAK,GAAG6b,OAAO/B,sBAAsB1f,QAAQ4F,KAAK6b,MAAM7b;sBACzD8b,uBAAuBhC,sBAAsB9Z;uBAC5Cqb,aAAaS;oBACdT,aAAaS,wBAAwBH,4BAA4BG;;;;cAK7EJ;kBAEIK,mBAAmB,0BAA0BC;oBACzCzC,eAAeoB;kBACf3jB,QAAQilB,KAAK,oCAAoCtB;;gBAErDpB,eAAeoB,cAAcU;gBAC7B7B,cAAcmB,cAAcqB;;;;gBAI5B3a;;mBAGA,cAAcga;oBACVA,aAAalJ,mBAAmBkJ,aAAalJ,aAAa;kBAC1DkJ,aAAalJ,WAAWvd,KAAKmnB,kBAAkB7a;;kBAE/C6a,mBAAmBV,aAAalJ;;;gBAGpC4J,iBAAiB;;qBAEhBjiB;cACLoH,OAAOpH;;;UAIf+U,oBAAoB9I,SAAStL,UAAU6P;iBAChCvE;;QAGXyU,YAAY5U,UAAUsU,SAAS;iBACpB,KAAKjI,WAAW;;QAG3BuI,YAAY5U,UAAUsW,YAAY,mBAAmBvB,YAAYlgB,UAAU6P;cACnE6R,mBAAmB5C,eAAeoB,cAActQ,UAAUhJ,QAAQkY,eAAeoB,eAAetQ,UAAUnJ,WAAWiC,MAAM;UAE/H0L,oBAAoBsN,kBAAkB1hB,UAAU6P;iBACzC6R;;QAGX3B,YAAY5U,UAAUwW,gBAAgB,uBAAuB3hB;cACrD4hB,oBAAoBhS,UAAUhJ,QAAQ+T;UAC1CvG,oBAAoBwN,mBAAmB5hB;iBAChC4hB;;QAGX7B,YAAY5U,UAAU+J,QAAQ,eAAelV;cACrCoI,OAAO;cAEPkD,UAAUlD,KAAKkY,WAAWnmB,KAAK;gBAC3BiO,KAAKoY,WAAW;cAChBpY,KAAKoY,SAASpY,KAAKmY;;mBAGhBnY,KAAKoY;;UAGhBpM,oBAAoB9I,SAAStL,UAAUA;iBAChCsL;;QAGXyU,YAAY5U,UAAUuV,YAAY,mBAAmBmB,SAAS7hB,UAAU6P;cAChEzH,OAAO;eAENwW,QAAQiD;YACTA,WAAWA;;cAGXC,mBAAmB,KAAKC,qBAAqBF;UAEjD;YACIzZ,KAAKiY,QAAQZ,SAASrX,KAAKqX;;UAG/B,8BAA8BA;YAC1BrX,KAAK4Z,QAAQvC;YACbwC;YAEA7Z,KAAKoY,SAASpY,KAAKqP,aAAarP,KAAKiY;mBAC9BjY,KAAKoY;;UAGhB,oBAAoBsB;mBACT;kBACCI,qBAAqB;cAEzB;uBACWA,qBAAqBJ,iBAAiBniB;sBACrCugB,aAAa4B,iBAAiBI;kBAClCA;kBAEA9Z,KAAK+L,UAAU;kBACf/L,KAAKoY,SAAS;yBAEPpY,KAAKqZ,UAAUvB,YAAY/lB,KAAKgoB,sBAAsB,SAASC;;gBAG1EH;oBACIzlB,YAAYkM,MAAM;gBACtBN,KAAKkY,aAAa1Q,UAAUnJ,OAAOjK;uBAC5B4L,KAAKkY;;qBAGT8B;;;;;;cAOXC,mBAAmB,KAAK/B,eAAe,OAAO,KAAKA,WAAW,SAAS;mBAChE1Q,UAAUhJ;eAChBgJ,UAAUhJ;UAEf,KAAK0Z,aAAa+B,iBAAiBloB,KAAK;gBAChC+lB,aAAa4B,iBAAiB;YAClC1Z,KAAK+L,UAAU;YACf/L,KAAKoY,SAAS;mBAEPpY,KAAKqZ,UAAUvB,YAAY/lB,KAAK,UAAUslB;cAC7CrX,KAAKoP,UAAUiI,OAAOjI;cACtByK;cACA7Z,KAAKqY;cACLrY,KAAKmY,cAAc+B,WAAWR;;aAEnC,SAAS;YACRG;gBACIzlB,YAAYkM,MAAM;YACtBN,KAAKkY,aAAa1Q,UAAUnJ,OAAOjK;mBAC5B4L,KAAKkY;;UAGhBlM,oBAAoB,KAAKkM,YAAYtgB,UAAU6P;iBACxC,KAAKyQ;;QAGhBP,YAAY5U,UAAUoX,WAAW,kBAAkBrC;mBACtCnB,cAAcmB;;QAG3BH,YAAY5U,UAAU6W,UAAU,iBAAiBQ;UAC7CpC,OAAO,MAAMoC;;QAGjBzC,YAAY5U,UAAU4W,uBAAuB,8BAA8BF;cACnEC;mBACKnhB,IAAI,GAAG2J,MAAMuX,QAAQliB,QAAQgB,IAAI2J,KAAK3J;gBACvCuf,aAAa2B,QAAQlhB;gBACrB,KAAK4hB,SAASrC;cACd4B,iBAAiBzlB,KAAK6jB;;;iBAGvB4B;;QAGX/B,YAAY5U,UAAUsV,+BAA+B;;;;;mBAKxC9f,IAAI,GAAG2J,MAAMgV,eAAe3f,QAAQgB,IAAI2J,KAAK3J;YAClD8hB,cAAc,MAAMnD,eAAe3e;;;QAI3Cof,YAAY5U,UAAU1D,iBAAiB,wBAAwBwN;qBAChD8K,YAAY9K;;eAGpB8K;;;;UAOP2C,qBAAqB3C;MAEzB/X,OAAOD,UAAU2a;;MAEd,KAAI;;UAAS,IAAI;;;;;;;SC/uFUC;;;;;;;IAAAA;;;;;;;;SCyBTC;;qBAzBF;oCAEM;;mCAED;;0BACN;;4BACE;;0BAEF;;+BACI;mCACG;;sBACJ;oCAII;;2BAGD;;0BACD;;kCACG;;uBACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIDA;;;;;;aAkCY,KAAKC;;;;;aACL,KAAKC;;;;;aACH,KAAKC;;;;;aACH,KAAKC;;;;;aACe,KAAKC;;;;;;;aAEP,KAAKC,QAAQ;;;;;aACZ,KAAKA,QAAQ;;;EAEjE,mBAAYlpB,IAAYmpB;;;8BACdnpB;kEA3CoB;sEAsBI;;kFAuUI,UAACqF;aAAoBA,EAAE+jB,gBAAgB,UAAU,OAAO/jB,EAAEgkB,YAAY;;UAhTnG/pB,SAASC,SAASC,eAAe;UAEjCuB,uBAAeA;UACfE,wBAAgBA;+BACfuE,gDAAsCzE,2BAAgBE;UAEvDqoB,eAAe,cAAc,GAAG,SAAQvoB,aAAYE,QAAO;UAC3DsoB;UACAC,cAAcL;UACdM;UACAC;UACAC;QAEDC,iBAAiBrqB,SAASqE,cAAc;IAC5CgmB,eAAe5pB,KAAK;IACpB4pB,eAAe7oB,cAAaA;IAC5B6oB,eAAe3oB,eAAcA;UACxBgoB,eAAyCW,eAAeC,WAAW;MAAO5iB,OAAO;;;;;;6BAGjFjH;aACE,KAAKkpB,QAAQlpB;;;;kCAGFmpB;;UACdW,aAA6BvqB,SAASC,eAAe;iCACnDqE,aAAaimB,YAAY;eAAMX;;MAErC,KAAKY,cAA8BxqB,SAASC,eAAe;iCACrDqE,aAAa,KAAKkmB,aAAa;eAAMtlB,OAAKulB;;UAE5CC,mBAAqC1qB,SAASC,eAAe;MACjEyqB,iBAAiBvqB,iBAAiB,UAAU,UAAAwqB;YACpCD,iBAAiBC,MAAMvkB,UAAU;;;YAGjCwkB,OAAOF,iBAAiBC,MAAM;YAC9BE,YAAYpmB;QAChBomB,MAAM9lB,MAAMI,IAAIC,gBAAgBwlB;QAChCC,MAAMpd,SAAS;UACXvI,OAAK4lB,QAAQ5lB,OAAK6lB;UAClB7lB,OAAK6lB,cAAcC,SAASH;;;MAGpC,KAAKI,qBAAqCjrB,SAASC,eAAe;iCAC5DqE,aAAa,KAAK2mB,oBAAoB;eAAMP,iBAAiBQ;;;;;6BAGtDC;MACbA,MAAM9f,QAAQoI,OAAO1F,KAAK,KAAK4b,SAASvjB;MACxC,KAAKujB,QAAQwB,MAAM1qB,MAAM0qB;aAClBA;;;;kCAGU1qB,IAAY4J,GAAWC,GAAW9I,OAAeE,QAAgB0pB;UAC5ED,uCAAuB,KAAKprB,QAAQU,IAAI4J,GAAGC,GAAG9I,OAAOE;MAC3DypB,MAAMC,WAAWA;MACjB,KAAKC,SAASF;aACPA;;;;mCAGW1qB,IAAY4J,GAAWC,GAAW9I,OAAeE,QAAgB0pB;UAC7ED,wCAAwB,KAAKprB,QAAQU,IAAI4J,GAAGC,GAAG9I,OAAOE;MAC5DypB,MAAMC,WAAWA;MACjB,KAAKC,SAASF;aACPA;;;;gCAGQA;WACVA;;;MAGLA,MAAM7nB;aACC,KAAKqmB,QAAQwB,MAAM1qB;;;;;UAItB,KAAK6qB;;;MAGT,KAAKD,wCAAwB,KAAKtrB,QAAQ,iBAAiB,GAAG,GAAG,KAAKyB,OAAO,KAAKE;;;;;MAIlF,KAAK6pB,YAAY,KAAKD;;;;+BAGRE;WACTA;QACD,KAAKC;;;MAGT,KAAKC;MACL,KAAKJ,aAAaT,MAAM9lB,MAAMymB;;;;;;UAU1BG,YAAY3rB,SAASC,eAAe;iCAClCqE,aAAaqnB,WAAW;eAAMC,OAAKd,QAAQc,OAAKC;;UAClDC,eAAe9rB,SAASC,eAAe;iCACrC8rB,aAAaD,cAAc;eAAMF,OAAK5O,MAAM,MAAM;;iCAClD1Y,aAAawnB,cAAc;eAAMF,OAAKd,QAAQc,OAAKI;;UACrDC,kBAAkBjsB,SAASC,eAAe;iCACxCqE,aAAa2nB,iBAAiB;eAAML,OAAKd,QAAQc,OAAKb;;MAE5D,KAAKmB;;MAEL,KAAKL,aAAa,KAAKM,yCAAoB,MAAM,YAAY;MAC7D,KAAKH,aAAa,KAAKG,yCAAoB,MAAM,eAAe;MAChE,KAAKpB,gBAA+B,KAAKoB,+CAA0B,MAAM;;;MAGzE,KAAKrB,QAAQ,KAAKe;;;;4BAGNO;MACZ,KAAKF,OAAOppB,KAAKspB;aACVA;;;;;MAIP,KAAKC,oCAA2B;MAEhC,KAAKC,uCAA8B;;;;;;MAInC,KAAKC,uDAA+B;MACpC,KAAKA,aAAaC,qBAAqB,UAACC;QACpCC,OAAKjD,aAAagD;;MAEtB,KAAKhD,aAAa,KAAK8C,aAAa7K;MAEpC,KAAKiL,yDAAiC;MACtC,KAAKA,cAAcH,qBAAqB,UAACI;eAAkBF,OAAKpD,SAASsD;;MACzE,KAAKtD,SAAS,KAAKqD,cAAcC;MAEjC,KAAKC,yDAAiC;MACtC,KAAKA,cAAcL,qBAAqB,UAACM;QACrCJ,OAAKnD,SAASuD;QACdJ,OAAK5B,QAAQ4B,OAAK3B;QAClB2B,OAAK3B,cAAcgC,YAAYL,OAAKI;;MAExC,KAAKvD,SAAS,KAAKsD,cAAcC;MAEjC,KAAKtD,WAAW;;;;4BAGJ4C;UACR,KAAKY;QACL,KAAKA,aAAaC;;MAEtB,KAAKD,eAAeZ;UAChB,KAAKY;QACL,KAAKA,aAAaE;;MAGtB,KAAKP,cAAcQ,WAAW,KAAKH,gBAAgB,KAAKnB;MACxD,KAAKU,aAAaY,WAAW,KAAKH,gBAAgB,KAAKnB,cAAc,KAAKmB,gBAAgB,KAAKhB;;;;;;UAM3FljB,SAAS,KAAKskB,UAAUtkB;MAC5BA,OAAOjH,MAAMwrB,gBAAgB;;MAE7BrtB,SAASG,iBAAiB,WAAW,UAAAC;eAASktB,OAAKC,QAAQntB;;MAC3D0I,OAAO3I,iBAAiB,SAAS,UAAAC;eAASA,MAAMiC;;UAE5CnC,OAAOyF,gBAAgB;;QAEvBmD,OAAO3I,iBAAiB,cAAc,UAAAC;iBAASA,MAAMiC;;QAErDyG,OAAO3I,iBAAiB,eAAe,UAAAC;iBAASktB,OAAKE,YAAYptB;;QACjE0I,OAAO3I,iBAAiB,eAAe,UAAAC;iBAASktB,OAAKG,YAAYrtB;;QACjE0I,OAAO3I,iBAAiB,aAAa,UAAAC;iBAASktB,OAAKI,UAAUttB;;QAC7D0I,OAAO3I,iBAAiB,iBAAiB,UAAAC;iBAASA,MAAMiC;;;QAGxDyG,OAAO3I,iBAAiB,cAAc,UAAAC;iBAASktB,OAAKK,WAAWvtB;;QAC/D0I,OAAO3I,iBAAiB,aAAa,UAAAC;iBAASktB,OAAKM,UAAUxtB;;QAC7D0I,OAAO3I,iBAAiB,YAAY,UAAAC;iBAASktB,OAAKO,SAASztB;;QAC3D0I,OAAO3I,iBAAiB,eAAe,UAAAC;iBAASA,MAAMiC;;;;;;4CAQ9BjC;UACxBga,SAAsBha,MAAMga;UAC5B5O,OAAO4O,OAAO0T;UACZC,wBAAwBviB,KAAK9J,SAAS8J,KAAKhK;UAE7CwsB,MAAM5tB,MAAM6tB,UAAUziB,KAAKzJ,QAAQyJ,KAAKhK;UACxC0sB,MAAM9tB,MAAM+tB,UAAU3iB,KAAK4iB,OAAO5iB,KAAK9J;UAEvC2I,KAAK0jB,wBAAwB,IAAIG,KAAKF,MAAM,KAAKxsB;UACjD8I,KAAKyjB,wBAAwBC,KAAKE,MAAM,KAAKxsB;yBAEtCqC;QACPsG,IAAIlJ,KAAKgJ,MAAME;QACfC,IAAInJ,KAAKgJ,MAAMG;;4CAEFD,GAAGC;;;;0CAGM+jB;UACtB7iB,OAAO,KAAK4hB,UAAUtkB,OAAOglB;UAC3BC,wBAAwBviB,KAAK9J,SAAS8J,KAAKhK;UAE7CwsB,MAAMK,MAAMJ,UAAUziB,KAAKzJ,QAAQyJ,KAAKhK;UACxC0sB,MAAMG,MAAMF,UAAU3iB,KAAK4iB,OAAO5iB,KAAK9J;UAEvC2I,KAAK0jB,wBAAwB,IAAIG,KAAKF,MAAM,KAAKxsB;UACjD8I,KAAKyjB,wBAAwBC,KAAKE,MAAM,KAAKxsB;yBAEtCqC;QACPsG,IAAIlJ,KAAKgJ,MAAME;QACfC,IAAInJ,KAAKgJ,MAAMG;;4CAEFD,GAAGC;;;;4BAGRlK;WACP,KAAKkuB;;;cAIFluB,MAAMgP;aACL;cACGhP,MAAMmuB;YACN,KAAKzD,QAAQ,KAAKC;YAClB,KAAKA,cAAcyD;;;;WAK1B,KAAKxB;;;MAGV,KAAKA,aAAaO,QAAQntB;;;;gCAGlBA;MACRA,MAAMiC;UAEFjC,MAAMypB,eAAe,WAAW,KAAK4E,oBAAoB;;;UAIzDruB,MAAMypB,eAAe,WAAWzpB,MAAM0pB,YAAY;;;UAIlD1P,SAAsBha,MAAMga;MAChCA,OAAOsU,kBAAkBtuB,MAAMuuB;MAE/B,KAAKF,kBAAkBruB,MAAMuuB;UACzBC,WAAWxuB,MAAMypB,eAAe,mCAAcrd,MAAM,KAAK,GAAGpM,MAAMwuB,WAAW,KAAK;MACtF,KAAKC,KAAKzuB,MAAM0uB,WAAW,MAAM,KAAKC,wBAAwB3uB,QAAQwuB;;;;gCAG9DxuB;MACRA,MAAMiC;UACFjC,MAAMypB,eAAe,WAAWzpB,MAAMuuB,cAAc,KAAKF;;;UAIzDruB,MAAMypB,eAAe,WAAWzpB,MAAM0pB,YAAY;;;;UAKlD8E,WAAWxuB,MAAMypB,eAAe,mCAAcrd,MAAM,KAAK,GAAGpM,MAAMwuB,WAAW,KAAK;MACtF,KAAKI,KAAK5uB,MAAM0uB,WAAW,MAAM,KAAKC,wBAAwB3uB,QAAQwuB;;;;8BAGhExuB;MACNA,MAAMiC;UACFjC,MAAMypB,eAAe,WAAWzpB,MAAMuuB,cAAc,KAAKF;;;;;;;UASzDrU,SAAsBha,MAAMga;MAChCA,OAAO6U,sBAAsB7uB,MAAMuuB;MAEnC,KAAKO,GAAG,KAAKC,4BAA4B/uB,QAAQ,KAAK2uB,wBAAwB3uB;MAC9E,KAAKquB,kBAAkB;;;;oCAKXW;UACRR,sCAAiBpiB,MAAM,KAAK,GAAG4iB,QAAQ;MAC3C,KAAKpC,aAAa4B,WAAWztB,KAAKC,IAAIwtB,UAAU,KAAK5B,aAAa4B;MAClE,KAAK5B,aAAaqC;;;;+BAGXjvB;MACPA,MAAMiC;UACF,KAAKosB,oBAAoB;;;MAG7B,KAAKA,kBAAkBruB,MAAMkvB,cAAc,GAAGC;MAC9C,KAAKV,KAAKzuB,MAAM0uB,WAAU,MAAM,KAAKU,sBAAsBpvB,MAAMkvB,cAAc,KAAK;;;;8BAG9ElvB;MACNA,MAAMiC;UACFgsB,QAAQhF,UAAUoG,UAAUrvB,MAAMkvB,eAAe,KAAKb;UACtDJ,SAAS;;;MAGb,KAAKW,KAAK5uB,MAAM0uB,WAAW,MAAM,KAAKU,sBAAsBnB,QAAQ;;;;6BAG/DjuB;MACLA,MAAMiC;UACFgsB,QAAQhF,UAAUoG,UAAUrvB,MAAMkvB,eAAe,KAAKb;UACtDJ,SAAS;;;MAGb,KAAKa,GAAG,MAAK9uB,MAAMsvB,QAAQtpB,SAAS,IAAI,KAAKopB,sBAAsBnB,SAAS,KAAKrB,aAAa2C;MAC9F,KAAKlB,kBAAkB;;;;yBAYdK,WAAmBc,YAAqBD,OAAcf;WAC1D,KAAK5B;;;;MAKV,KAAKA,aAAa4B,WAAWA;UAEzBiB,WAAWF;UACXG,mCAAcC,SAAS,KAAK/C,aAAa2C,OAAOE;UAEhDC,QAAQ;YACJE,YAAYlB,YAAY,KAAKmB;QACjC,KAAKA,aAAanB;YACdoB,QAAQJ,QAAQE;QAEpB,KAAKhD,aAAakD,mCAAc5pB,KAAK,KAAK0mB,aAAakD,OAAOA,OAAO;QACrE,KAAKlD,aAAa2C,QAAQE;QAC1B,KAAK7C,aAAagC;;;;;yBAIbF,WAAmBc,YAAqBD,OAAcf;+BACvDuB;WAEH,KAAKnD;;;MAIV,KAAKoD;MACL,KAAKH,aAAanB;MAClB,KAAK9B,aAAakD,QAAQ;MAC1B,KAAKlD,aAAaqD,WAAWT;MAC7B,KAAK5C,aAAa4B,WAAWA;MAC7B,KAAK5B,aAAa2C,QAAQA;MAC1B,KAAK3C,aAAa6B;;;;uBAGXe,YAAqBD;WACvB,KAAK3C;;;MAIV,KAAKA,aAAaqD,WAAWT;MAC7B,KAAK5C,aAAa2C,QAAQA;MAC1B,KAAK3C,aAAakC;MAClB,KAAKoB;;;;;UAGHC,mFAAwB;UAAOC,2EAAgB;UAC7CD;QACA,KAAKH;;MAET,KAAKhD,UAAUpQ;UACXwT;QACA,KAAKF;;;;;;MAKT,KAAKG,cAAc,KAAKrD,UAAUsD;MAClC,KAAKC;;;;;MAIL,KAAKF,cAAc;MACnB,KAAKE;;;;;MAIL,KAAKnG,YAAYnnB,UAAUI,OAAO,YAAY,KAAKgtB,eAAe;;;;;UAGjEG,kFAAc;WACV,KAAKH;;;UAGNI,aAAa,KAAKJ;UAClBG;QACA,KAAKR;;MAET,KAAKhD,UAAU0D,QAAQD;;;;8BAGjBpwB;;iDACcE,UAAUF,IACzBG,KAAK,UAAAiqB;QACFkG,OAAKC,WAAWvwB;QAChBswB,OAAK/T;YACD6N;UACAkG,OAAK3D,UAAU6D,UAAUpG;;QAG7BkG,OAAKG,sCAAiBrsB,eAAepE;;;;;;;iCAKvCwF,IAAI;MACV,KAAKmnB,UAAUtkB,OAAOqoB,OAAO,UAAAlsB;mDAAqBqrB,UAAUc,OAAKJ,UAAU/rB;;;;;;;;MAK3E,KAAKwpB,kBAAkB;MACvB,KAAK4C;MACL,KAAKC,oBAAoB;MACzBpxB,OAAOqxB,sBAAsB,UAAAzC;eAAa0C,OAAKC,KAAK3C;;MACpD,KAAK9B,aAAaE;;;;;UAId,KAAKvD;QACL,KAAK2G;;UAEL,KAAKtD;QACL,KAAKA,aAAaC;;;;;;yBAKb6B;;WACJ,KAAKR;;;MAIVpuB,OAAOqxB,sBAAsB,UAAAzC;eAAa4C,OAAKD,KAAK3C;;yBAEzClrB;mCACD+tB;;WAGL,KAAK3E;;;UAIN8C,QAAQhB,YAAY,KAAK8C;MAC7B,KAAKA,iBAAiB9C;MACtB,KAAK9B,aAAayE,KAAK3B;;;;oCAGX+B;MACZ,KAAKP,oBAAoB;WACpB,KAAKhG;;;;;;mCAkBS/f;UACbumB,YAAYvmB,IAAIvC,aAAa,GAAG,GAAG,KAAKxH,OAAO,KAAKE;UACpDgK,SAASomB,UAAUzoB;eAChBjC,IAAIsE,OAAOtF,SAAS,GAAGgB,KAAK,GAAGA;QACpCsE,OAAOtE,KAAKsE,OAAOtE,KAAK,KAAK,MAAM;;MAEvCmE,IAAI9B,aAAaqoB,WAAW,GAAG;;;;8BAhLVpC,SAAoBjvB;eAChC2G,IAAI,GAAGA,IAAIsoB,QAAQtpB,QAAQgB;YAC5BsoB,QAAQtoB,GAAGmoB,cAAc9uB;iBAClBivB,QAAQtoB;;;aAGhB;;;;;;;;;;SC/ZM2qB;;wBAFC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEDA;;;;;;aAEI,KAAKC;;sBAChBzf;MAAiB,KAAKyf,iBAAiBzf;;;EAEjD,sBAAY9R;;;;;;;;;;;;;QAYJwxB,UACA,WAAW,WAAW,WAAW,WACjC,WAAW,WAAW,WAAW,WACjC,WAAW,WAAW,WAAW,WACjC,WAAW,WAAW,WAAW,WACjC,WAAW,WAAW,WAAW,WACjC,WAAW,WAAW,WAAW,WACjC,WAAW,WAAW,WAAW,WACjC,WAAW,WAAW,WAAW;8BAG/BxxB,IAAIwxB;UACLC,gBAAgB;;;;;wCAGL9tB,SAAyB+tB;MACzC/tB,QAAQvC,MAAMuwB,aAAaD;;;;;;;;;;;;yBCnChB;0BACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGLE;;;;;;aAUmB,KAAKC;;sBACf/f;MACd,KAAK+f,iBAAiBnxB,KAAKC,IAAI,GAAGD,KAAKG,IAAI,KAAKixB,SAASnsB,SAAS,GAAGmM;MACrE,KAAKigB,4BAA4B,KAAKC,kBAAkB,KAAKT;;;;;aAGpC,KAAKO,SAAS,KAAKD;;sBAC7B/f;UACXlH,QAAQ,KAAKknB,SAAShd,QAAQhD;UAC9BlH,WAAW;;;MAGf,KAAK6mB,gBAAgB7mB;;;;;aAGC,KAAKxI,SAASQ,UAAUK,SAAS;;;EAE3D,iBAAYjD,IAAYib;;QAAgBgX,iFAAsB;;8BACpDjyB;UACD8xB,WAAW7W;UACXiX;UACAL,iBAAiB;UACjBM;UACAzwB;UACA0wB;;;;;;MAUL,KAAKC;MACL,KAAKC;;;;;MAIL,KAAK/V;MACL,KAAK4V;;;;;MAIL,KAAK/vB,SAASQ,UAAUE,IAAI;UACxB8uB,QAAQW,oBAAoB;QAC5BX,QAAQW,mBAAmB;;;;;;MAK/BX,QAAQlC;MACR,KAAKttB,SAASQ,UAAUC,OAAO;MAC/B+uB,QAAQW,mBAAmB;;;;;UAIvB,KAAKC;QACL,KAAKC;;QAGL,KAAKL;;;;;8BAIHtgB;MACN,KAAKggB,SAASzvB,KAAKyP;MACnB,KAAK4gB,iBAAiB,KAAKZ,SAASnsB,SAAS,GAAGmM;MAChD,KAAK6gB;;;;iCAGI/nB;MACT,KAAKknB,SAASc,OAAOhoB,OAAO;MAC5B,KAAKsnB,gBAAgBtnB,OAAO/H;MAC5B,KAAKqvB,gBAAgBU,OAAOhoB,OAAO;;MAGnC,KAAKioB;;;;;;UAIDlvB,UAA0BpE,SAASqE,cAAc;MACrDD,QAAQf,UAAUE,IAAI;MACtB,KAAKkvB,mBAAmBruB;iCAClBE,aAAaF,SAAS;eAAMc,OAAKzB;;MACvC,KAAK+uB,4BAA4BpuB,SAAS,KAAK4tB;MAC/C,KAAKnvB,SAAS8B,YAAYP;;;;;UAItBA,UAA0BpE,SAASqE,cAAc;MACrDD,QAAQf,UAAUE,IAAI;MACtB,KAAKgwB,kBAAkBnvB;MACvB,KAAKovB;UAEDpsB,IAAY;iDACG,KAAKmrB;;;cAAfJ;UACL,KAAKgB,iBAAiB/rB,GAAG+qB;UACzB/qB;;;;;;;MAEJ,KAAKgsB;MACL,KAAKvwB,SAAS8B,YAAYP;;;;;MAI1B,KAAKmvB,gBAAgB1xB,MAAML,QAAQL,KAAKG,IAAI,GAAG,KAAKixB,SAASnsB,UAAU,OAAO;;;;;UAI1EhC,UAA0BpE,SAASqE,cAAc;MACrDD,QAAQf,UAAUE,IAAI;MACtB,KAAKgwB,gBAAgB5uB,YAAYP;;;;qCAGZiH,OAAe8mB;;UAChC/tB,UAA0BpE,SAASqE,cAAc;MACrDD,QAAQf,UAAUE,IAAI;MACtBa,QAAQqvB,QAAQpoB,oBAAWA;iCACrB0gB,aAAa3nB,SAAS,UAAAhE;eAASwrB,OAAK8H,kBAAkBtzB,OAAO+xB,QAAQ9mB;;iCACrE/G,aAAaF,SAAS,UAAAhE;eAASwrB,OAAK+H,cAAcvzB,OAAO+xB,QAAQ9mB;;MACvE,KAAKuoB,oBAAoBxvB,SAAS+tB;MAClC,KAAKoB,gBAAgB5uB,YAAYP;MACjC,KAAKuuB,gBAAgBtnB,SAASjH;;;;kCAGVhE,OAAc+xB,QAAa9mB;MAC/C,KAAK6mB,gBAAgB7mB;MACrB,KAAKwnB;UACD,KAAKrG;QACL,KAAKA,mBAAmB2F,QAAQ9mB;;;;;sCAIZjL,OAAc+xB,QAAa9mB;;;wCAGzBjH,SAAyB+tB;;;gDAGjB/tB,SAAyB+tB;MAC3D,KAAKyB,oBAAoBxvB,SAAS+tB;;;;;UAhH9BE,QAAQW;QACRX,QAAQW,iBAAiBH;;;;;;;;;;;SCzChBgB;;wBAFC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEDA;;;;;;aAEG,KAAK7B;;sBAChBzf;MAAiB,KAAKyf,iBAAiBzf;;;EAEhD,qBAAY9R;;;QACJqzB,SAAmB,GAAG,GAAG,IAAI;8BAC3BrzB,IAAIqzB,OAAO;UACZ5B,gBAAgB;;;;;wCAGL9tB,SAAyB+tB;UACnC3wB,QAAQ2wB,SAAS;MACvB/tB,QAAQ2vB,YAAY,0CAA0CvyB,QAAQ;;;;;;;;;;SCNzDwyB;;qBATJ;;0BACC;;0BAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMGA;;;EASjB,iBAAYC,SAAoBC;;QAAkBC,gFAAoB;;8BAC5DF,SAASC;gGARmB,GAAG;UAShCE,aAAaD;;;;;;MAIlB,KAAKF,QAAQI,gBAAgB,KAAK1E,MAAMzlB,OAAOC;MAE/C,KAAKmqB,aAAa,KAAK3E,MAAMzlB;MAC7B,KAAKqqB,WAAW,KAAKD;MACrB,KAAKE,WAAW,KAAKC;UAEjBlpB,MAAM,KAAKmpB;MACfnpB,IAAIopB,cAAc,KAAK/H;MACvBrhB,IAAIqpB,UAAU;MACdrpB,IAAIspB,WAAW;MACf,KAAKZ,QAAQ7G,UAAU7hB,IAAIupB,2BAA2B,KAAKV;MAE3D,KAAKW;;;;yBAGJjF;UACG,KAAKkF;QACL,KAAKC;QACL,KAAKD,qBAAqB;;;;;;MAK9B,KAAKA,qBAAqB;;;;;UAItBzpB,MAAM,KAAKmpB;UACX,KAAKH,QAAQnuB,SAAS;QACtB,KAAK6tB,QAAQxJ,KAAK;QAClBlf,IAAI2pB,UAAU,GAAG,GAAG,KAAKjB,QAAQzyB,OAAO,KAAKyyB,QAAQvyB;YAEjDyzB,QAAQ,KAAKZ,QAAQ;YACrBa,WAAWD;iBAEN/tB,IAAI,GAAGA,IAAI,KAAKmtB,QAAQnuB,QAAQgB;cACjCiuB,YAAY,KAAKd,QAAQpzB,KAAKC,IAAI,GAAGgG,IAAI;UAC7C+tB,QAAQ,KAAKZ,QAAQntB,GAAG8C;;;cAIpBorB,2CACCH,MAAM9qB,IAAIgrB,UAAUhrB,KAAK,MACzB8qB,MAAM7qB,IAAI+qB,UAAU/qB,KAAK;UAG9BiB,IAAIkhB,YAAY,KAAK+H,QAAQptB;UAC7BmE,IAAIgqB;UACJhqB,IAAIiqB,OAAOJ,SAAS/qB,GAAG+qB,SAAS9qB;UAChCiB,IAAIkqB,iBAAiBJ,UAAUhrB,GAAGgrB,UAAU/qB,GAAGgrB,SAASjrB,GAAGirB,SAAShrB;UACpEiB,IAAImqB;UACJN,WAAWE;;QAEf/pB,IAAIiqB,OAAOJ,SAAS/qB,GAAG+qB,SAAS9qB;QAChCiB,IAAIkqB,iBAAiBN,MAAM9qB,GAAG8qB,MAAM7qB,GAAG,KAAKgqB,WAAWjqB,GAAG,KAAKiqB,WAAWhqB;QAC1EiB,IAAImqB;YAEAC,SAAS,KAAKlB,aAAa;QAC/BlpB,IAAIgqB;QACJhqB,IAAIqqB,IAAI,KAAKtB,WAAWjqB,GAAG,KAAKiqB,WAAWhqB,GAAGqrB,QAAQ,GAAG,IAAIx0B,KAAK00B;QAClEtqB,IAAIuqB,YAAYvqB,IAAIopB;QACpBppB,IAAIwqB;;QAIJ,KAAK9B,QAAQ7G,UAAU7hB,IAAIyqB,cAAc,KAAKC;QAC9C,KAAKhC,QAAQ7G,UAAU6D,UAAU1lB,IAAIzC;QACrC,KAAKmrB,QAAQ7G,UAAU7hB,IAAIyqB,cAAc;;;;;;WAKxC,KAAK3F;;;MAIV,KAAKiE,aAAa,KAAK3E,MAAMzlB;UACzB1I,QAAQ,KAAKizB;MACjB,KAAKF,QAAQzxB,KAAK,KAAKwxB;UACjB4B,YAAY,KAAK1B,QAAQ,KAAKA,QAAQpuB,SAAS;MACrD,KAAKouB,QAAQ1xB,gCAAW0J,MAAM0pB,YAAY,GAAGA,YAAY,GAAG10B;MAE5D,KAAKuzB;;;;;MAIL,KAAKA;;;;;UAIDnG,sCAAiBpiB,MAAM,KAAK,GAAG,KAAKoiB,WAAW;UAC/CsB,mCAAc1jB,MAAM,GAAG,GAAG,KAAK0jB;aAC5B,KAAKzD,YAAYmC,WAAWsB;;;;;WAI9B,KAAK+D,QAAQ3I,iBAAiB,KAAK2I,QAAQkC;;;UAI5C5qB,MAAM,KAAKmpB;MACfnpB,IAAIupB,2BAA2B;MAC/BvpB,IAAI0lB,UAAU,KAAKgD,QAAQkC,YAAYrtB,QAAQ,GAAG;MAClDyC,IAAIupB,2BAA2B;;;;;;;;;;SC3HTsB;;0BAJZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIYA;;;;aAOL,KAAKnC,QAAQrH;;;;;aACX,KAAKqH,QAAQgC;;;;;aACX,KAAKhC,QAAQxH;;;EAKtC,cAAYwH,SAAoBC;;sCAZZ;sCACD;IAYf,KAAKD,UAAUA;IACf,KAAKtE,uCAAkB,GAAE;IACzB,KAAK0G,iBAAiBr2B,SAASC,eAAei0B;;;;;;;;;UAM1CoC,cAAct2B,SAASqE,cAAc;MACzCiyB,YAAY71B,KAAK;MACjB61B,YAAY90B,QAAQ,KAAKyyB,QAAQzyB;MACjC80B,YAAY50B,SAAS,KAAKuyB,QAAQvyB;MAClC00B,KAAKG,aAAuCD,YAAYhM,WAAW;QAAO5iB,OAAO;;MACjF0uB,KAAKG,WAAWC,wBAAwB;MACxCJ,KAAKG,WAAWE,wBAAwB;;;;;UAIpCL,KAAKG,cAAc;QACnB,KAAKG;;aAEFN,KAAKG;;;;;MAIZ,KAAKF,eAAehzB,UAAUE,IAAI;;;;;MAGlC,KAAK8yB,eAAehzB,UAAUC,OAAO;;;;;;;;;;;;;;;;yBAMpCwsB;;;4BACG1vB;;;;;;;;;SCnDSu2B;;wBAHC;mCACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEJA;;;;;;aAII,KAAK3E;;;EAE1B,sBAAYvxB;;;QACJm2B,aACA,uBACA,0BACA,0BACA,0BACA;8BAGEn2B,IAAIm2B,WAAW;UAChBC;UACA3E,gBAAgB;wCAERnkB,OACRnN,KAAK,UAACmN;UACG+oB,YAAY/oB,KAAKgpB,OAAO,UAAA1sB;eAAKA,EAAE2sB,WAAW;;iDAC5BF;;;cAAXG;gBACAC,oBAAoBD;;;;;;;;UAIhCp0B,SAAS1C,iBAAiB,cAAc,UAACC;UACpCK,KAAaL,MAAMmE;UACrB9D,GAAGu2B,WAAW;cACTE,oBAAoBz2B;;;;;;;wCAKT02B;;0CACXnyB,SAASmyB,SACjBv2B,KAAK,UAAAqE;YACIumB,MAAMrmB,IAAIC,gBAAgBH;QAChCC,OAAK2xB,UAAUrL,OAAO2L;QACtBjyB,OAAKkyB,UAAU5L;;;;;sCAICprB,OAAmB+xB,QAAa9mB;MACxD,KAAKgsB,YAAYhsB;;;;wCAGDjH,SAAyB+tB;MACzC/tB,QAAQvC,MAAMy1B,oCAA0BnF;;;;gDAGhB/tB,SAAyB+tB;MACjD/tB,QAAQ2vB,YAAY;;;;gCAGJ1oB;;UACZ8mB,SAAS,KAAKI,SAASlnB;UACvB8rB,UAAU,KAAKN,UAAU1E;WACxBgF;;;0CAGQI,YAAYJ,SACpBv2B,KAAK;eACKgrB,OAAKiL,UAAU1E;QACtBvG,OAAK4L,aAAansB;YACdugB,OAAKsG,iBAAiB7mB;;UAEtBugB,OAAKsG,gBAAgB7mB;;;;;;;;;;;;SCnEpBosB;;sBAJA;sBACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGGA;;;;;;aAIK,KAAK50B;;;;;aACR,KAAK60B;;;EAExB,qBAAYvzB,QAAqB1D,IAAY4J,GAAWC,GAAW9I,OAAeE;;;8BACxEyC,QAAQ,UAAU1D,IAAI4J,GAAGC,GAAG9I,OAAOE;UACpCg2B,aAAsC5uB,OAAOwhB,WAAW;MAAO5iB,OAAO;;UACtEgwB,KAAKlB,wBAAwB;UAC7BkB,KAAKjB,uCAA+BzyB;;;;;;aAIlC,KAAK0zB,KAAK1uB,aAAa,GAAG,GAAG,KAAKxH,OAAO,KAAKE;;;;4BAGjD2H;MACJ,KAAKquB,KAAKjuB,aAAaJ,MAAM,GAAG;;;;8BAG1BwhB,OAA6Crf;iBACrBA;QAASnB,GAAE;QAAGC,GAAE;QAAG9I,OAAM,KAAKA;QAAOE,QAAO,KAAKA;UAAxE2I,SAAAA,GAAGC,SAAAA,GAAG9I,aAAAA,OAAOE,cAAAA;MACpB,KAAKg2B,KAAKzG,UAAUpG,OAAOxgB,GAAGC,GAAG9I,OAAOE;;;;0BAGtC8J;kBAC4BA;QAASnB,GAAE;QAAGC,GAAE;QAAG9I,OAAM,KAAKA;QAAOE,QAAO,KAAKA;UAAxE2I,UAAAA,GAAGC,UAAAA,GAAG9I,cAAAA,OAAOE,eAAAA;MACpB,KAAKg2B,KAAKxC,UAAU7qB,GAAGC,GAAG9I,OAAOE;;;;;;;;;;SClBXi2B;;sBAfT;0BACH;;0BACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaYA;;;;aAkBA,KAAK90B,SAASpC;;;;;aACX,KAAKm3B;;sBACxBC;MACN,KAAKD,SAASC;MACd,KAAKC,UAAU,KAAKjG,UAAU,KAAKkG,OAAO,KAAKC;;;;;aAEtB,KAAKn1B,SAASrB;;;;;aACb,KAAKqB,SAASnB;;;;;aACpB,KAAKu2B;;;;;aACL,KAAKC;;;;;aACR,KAAKC;;;;;aACO,KAAKt1B,SAASQ,UAAUK,SAAS;;sBAErD6O;MACT,KAAK1P,SAASQ,UAAUI,OAAO,YAAY8O;MAC3C,KAAK1P,SAAShB,MAAMwrB,gBAAgB9a,QAAQ,SAAS;UACjDA;QACA,KAAKyX;;QAGL,KAAKoO;;;;EAIb,eAAYj0B,QAAqBk0B,KAAa53B,IAAY4J,GAAWC,GAAW9I,OAAeE;;yCAhCjE;4CACG;sEACI,GAAG;oCACf;uCACG;iDACU;;IA4BlC,KAAKmB,WAAc7C,SAASqE,cAAcg0B;IAC1C,KAAKx1B,SAASpC,KAAKA;IACnB,KAAKoC,SAASQ,UAAUE,IAAI;IAC5B,KAAKq0B,SAAS;IACd,KAAK/0B,SAASrB,QAAQA;IACtB,KAAKqB,SAASnB,SAASA;IACvB,KAAKmB,SAAShB,MAAML,oBAAWA;IAC/B,KAAKqB,SAAShB,MAAMH,qBAAYA;IAChC,KAAKmB,SAAShB,MAAMwrB,gBAAgB;IAEpClpB,OAAOQ,YAAY,KAAK9B;IACxB,KAAKi1B,yCAAoBztB,GAAGC,IAAI,GAAG;IACnC,KAAKguB;;;;;MAIL,KAAKz1B,SAASS;;;;2BAGX9B,OAAeE;UACZ2I,IAAI,KAAKwnB,SAASxnB,IAAI,OAAO,KAAK7I,QAAQA;UAC1C8I,IAAI,KAAKunB,SAASvnB,IAAI,OAAO,KAAK5I,SAASA;MAEjD,KAAK62B,mBAAmBluB,GAAGC,GAAG9I,OAAOE;;;;uCAGtB2I,GAAWC,GAAW9I,OAAeE;MACpD,KAAKmB,SAASrB,QAAQA;MACtB,KAAKqB,SAASnB,SAASA;MACvB,KAAKmB,SAAShB,MAAML,oBAAWA;MAC/B,KAAKqB,SAAShB,MAAMH,qBAAYA;MAChC,KAAKo2B,yCAAoBztB,GAAGC,IAAI,KAAKytB,OAAO,KAAKC;;;;iCAGxCzsB;MACTA,IAAIilB;UACAnmB,IAAI,KAAK4tB,UAAU5tB,IAAI,MAAM,KAAK7I;UAClC8I,IAAI,KAAK2tB,UAAU3tB,IAAI,MAAM,KAAK5I;MACtC6J,IAAIitB,aAAa,KAAKL,QAAQ,GAAG,GAAG,KAAKA,QAAQ9tB,GAAGC;MACpDiB,IAAIktB,OAAO,KAAKP;MAChB3sB,IAAImtB,WAAW,MAAM,KAAKl3B,QAAQ,MAAM,KAAKE;MAC7C6J,IAAI0lB,UAAU,KAAKpuB,UAAU,GAAG;MAChC0I,IAAIotB;;;;;;MAMJ,KAAK91B,SAAS1C,iBAAiB,SAAS,KAAKkC;qCAEnCu2B;QACN,KAAK/1B,SAAS1C,iBAAiB,cAAc,KAAKkC;QAClD,KAAKQ,SAAS1C,iBAAiB,eAAe,KAAKqtB;;QAGnD,KAAK3qB,SAAS1C,iBAAiB,cAAc,KAAKwtB;;;;;;MAKtD,KAAK9qB,SAASg2B,oBAAoB,SAAS,KAAKx2B;qCAEtCu2B;QACN,KAAK/1B,SAASg2B,oBAAoB,cAAc,KAAKx2B;QACrD,KAAKQ,SAASg2B,oBAAoB,eAAe,KAAKrL;;QAGtD,KAAK3qB,SAASg2B,oBAAoB,cAAc,KAAKlL;;;;;mCAItCvtB;MACnBA,MAAMiC;;;;8BAGQjC;UACV,KAAK04B;QACL,KAAKA,YAAY14B;;;;;gCAILA;MAChBA,MAAMiC;MACN,KAAKQ,SAAS6rB,kBAAkBtuB,MAAMuuB;MACtC,KAAKoK,gBAAgB34B;UAEjB,KAAK44B,UAAU5yB,WAAW;YACtBhG,MAAM0uB,YAAY,KAAKmK,qCAA6Bp1B;UACpD,KAAKq1B,UAAU94B;;QAEnB,KAAK64B,sBAAsB74B,MAAM0uB;QAEjC,KAAKjsB,SAAS1C,iBAAiB,eAAe,KAAKstB;QACnD,KAAK5qB,SAAS1C,iBAAiB,aAAa,KAAKutB;QAEjD,KAAKyL,8CACD,KAAKlB,UAAU5tB,IAAI,MAAM,KAAK7I,OAC9B,KAAKy2B,UAAU3tB,IAAI,MAAM,KAAK5I;YAE9BtB,MAAMg5B;cACFvsB,KAAK,KAAKwsB,cAAc,KAAKL,UAAU;cACvClsB,gCAAWwsB,OAAOzsB,IAAI,KAAKssB;UAC/B,KAAKI,WAAW1sB,IAAIC;;UAGpB,KAAK0sB,UAAU,KAAKH,cAAc,KAAKL,UAAU;;;UAIrD,KAAKA,UAAU5yB,WAAW;QAC1B,KAAKmzB,WAAW,KAAKF,cAAc,KAAKL,UAAU,KAAK,KAAKK,cAAc,KAAKL,UAAU;;;;;oCAIzE54B;UACdiL,QAAQ,KAAK2tB,UAAUS,UAAU,UAAApvB;eAAKA,EAAEskB,aAAavuB,MAAMuuB;;UAC7DtjB,QAAQ;QACR,KAAK2tB,UAAUl2B,KAAK1C;;QAEpB,KAAK44B,UAAU3tB,SAASjL;;;;;uCAILA;UACjBiL,QAAQ,KAAK2tB,UAAUS,UAAU,UAAApvB;eAAKA,EAAEskB,aAAavuB,MAAMuuB;;UAC7DtjB,SAAS;QACT,KAAK2tB,UAAU3F,OAAOhoB,OAAO;;;;;gCAIjBjL;MAChBA,MAAMiC;MACN,KAAK02B,gBAAgB34B;MACrB,KAAK4uB,KAAK,KAAKgK,WAAW54B,MAAMg5B;;;;8BAGlBh5B;MACdA,MAAMiC;MACN,KAAKQ,SAASosB,sBAAsB7uB,MAAMuuB;MAC1C,KAAK+K,mBAAmBt5B;UAEpB,KAAK44B,UAAU5yB,UAAU;QACzB,KAAKozB,UAAU,KAAKH,cAAc,KAAKL,UAAU;;UAGjD,KAAKA,UAAU5yB,UAAU;QACzB,KAAKvD,SAASg2B,oBAAoB,eAAe,KAAKpL;QACtD,KAAK5qB,SAASg2B,oBAAoB,aAAa,KAAKnL;;;;;+BAIzCttB;MACfA,MAAMiC;UAEFjC,MAAMsvB,QAAQtpB,WAAW;YACrBhG,MAAM0uB,YAAY,KAAKmK,qCAA6Bp1B;UACpD,KAAKq1B,UAAU94B;;QAEnB,KAAK64B,sBAAsB74B,MAAM0uB;QAEjC,KAAKjsB,SAAS1C,iBAAiB,aAAa,KAAKytB;QACjD,KAAK/qB,SAAS1C,iBAAiB,YAAY,KAAK0tB;QAEhD,KAAKsL,8CACD,KAAKlB,UAAU5tB,IAAI,MAAM,KAAK7I,OAC9B,KAAKy2B,UAAU3tB,IAAI,MAAM,KAAK5I;YAE9BtB,MAAMg5B;cACFvsB,KAAK,KAAKwsB,cAAcj5B,MAAMsvB,QAAQ;cACtC5iB,gCAAWwsB,OAAOzsB,IAAI,KAAKssB;UAC/B,KAAKI,WAAW1sB,IAAIC;;UAGpB,KAAK0sB,UAAU,KAAKH,cAAcj5B,MAAMsvB,QAAQ;;;UAIpDtvB,MAAMsvB,QAAQtpB,WAAW;QACzB,KAAKmzB,WAAW,KAAKF,cAAcj5B,MAAMsvB,QAAQ,KAAK,KAAK2J,cAAcj5B,MAAMsvB,QAAQ;;;;;8BAI7EtvB;MACdA,MAAMiC;MACN,KAAK2sB,KAAK5uB,MAAMsvB,SAAStvB,MAAMg5B;;;;yBAGtBO,UAAwBP;UAC7BO,SAASvzB,WAAW;YAChBgzB;cACIvsB,KAAK,KAAKwsB,cAAcM,SAAS;cACjC7sB,gCAAWwsB,OAAOzsB,IAAI,KAAKssB;UAC/B,KAAKS,UAAU/sB,IAAIC;;UAEnB,KAAK+sB,SAAS,KAAKR,cAAcM,SAAS;;;UAG9CA,SAASvzB,WAAW;QACpB,KAAKwzB,UAAU,KAAKP,cAAcM,SAAS,KAAK,KAAKN,cAAcM,SAAS;;;;;6BAIlEv5B;MACdA,MAAMiC;MACN,KAAKQ,SAASg2B,oBAAoB,aAAa,KAAKjL;MACpD,KAAK/qB,SAAS1C,iBAAiB,YAAY,KAAK0tB;;;;8BAG1CgE,UAAiBkG,OAAeC;MACtC,KAAKC,YAAYpG;MACjB,KAAKqG,YAAYF;MACjB,KAAKG,SAASJ;UACR1sB,QAAQ,KAAKusB;MACnB,KAAK/0B,SAAShB,MAAMi2B,kCAAyBjG,SAASxnB,kBAAQwnB,SAASvnB,yBAAe0tB,gCAAsBD,+BAAqB1sB;MACjI,KAAKxI,SAAShB,MAAMi4B,2BAAkB,IAAI/B;;;;;;MAM1C,KAAKpK,aAAa,KAAKA,WAAWoM,KAAK;MACvC,KAAKnM,YAAY,KAAKA,UAAUmM,KAAK;MACrC,KAAKlM,WAAW,KAAKA,SAASkM,KAAK;MAEnC,KAAKvM,cAAc,KAAKA,YAAYuM,KAAK;MACzC,KAAKtM,cAAc,KAAKA,YAAYsM,KAAK;MACzC,KAAKrM,YAAY,KAAKA,UAAUqM,KAAK;;;;8BAGvBlI;MACd,KAAKmI,gDAA2BC,SAASpI,UAAU,KAAKA;;;;6BAG3CA;MACbA,SAASoI,SAAS,KAAKD;MACvB,KAAKlC,UAAUjG,UAAU,KAAKsG,QAAQ,KAAKD;;;;+BAG5BrrB,IAAWC;UACtBF,oCAAeA,OAAOC,IAAIC;MAC9B,KAAKotB,6CAAwBnK,SAASljB,IAAIC;MAC1C,KAAKqtB,sBAAsBh5B,KAAKi5B,MAAMvtB,GAAGvC,IAAIsC,OAAOtC,GAAGuC,GAAGxC,IAAIuC,OAAOvC;MACrE,KAAKgwB,iBAAiB,KAAKnC;MAC3B,KAAKoC,cAAc,KAAKnC;;;;8BAGVtrB,IAAWC;UACrBF,oCAAeA,OAAOC,IAAIC;UAC1BijB,sCAAiBA,SAASljB,IAAIC;UAC9BytB,QAAQp5B,KAAKi5B,MAAMvtB,GAAGvC,IAAIsC,OAAOtC,GAAGuC,GAAGxC,IAAIuC,OAAOvC;UAClDmwB,cAAcD,QAAQ,KAAKJ;UAE3BpC,QAAQ,KAAKuC,eAAevK,WAAW,KAAKmK;MAChDnC,mCAAcvrB,MAAM,KAAK,IAAIurB;UACzBlG,sCAAiBjlB,OAAOC,IAAIC;MAChC+kB,SAASxnB,KAAK,MAAM,KAAK7I;MACzBqwB,SAASvnB,KAAK,MAAM,KAAK5I;UAErBs2B,WAAW,KAAKqC,iBAAiBG;MACrC,KAAK1C,UAAUjG,UAAUkG,OAAOC;;;;kCAGdyC;UACdt2B,SAAS,KAAKtB,SAAS63B;UACvBlvB,OAAOrH,OAAO2pB;UAEZC,wBAAwBviB,KAAK9J,SAAS8J,KAAKhK;UAE7CwsB,MAAMyM,UAAUxM,UAAUziB,KAAKzJ,QAAQyJ,KAAKhK;UAC5C0sB,MAAMuM,UAAUtM,UAAU3iB,KAAK4iB,OAAO5iB,KAAK9J;UAE3C2I,KAAK0jB,wBAAwB,IAAIG,KAAKF,qBAAaxsB;UACnD8I,KAAKyjB,wBAAwBC,KAAKE,qBAAaxsB;4CAElC2I,GAAGC;;;;;;;;;;SC1UPqwB;;sBAFH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEGA;;;;;;aAEsB,KAAK93B;;;EAE5C,oBAAYsB,QAAqB1D,IAAY4J,GAAWC,GAAW9I,OAAeE;;;8BACxEyC,QAAQ,OAAO1D,IAAI4J,GAAGC,GAAG9I,OAAOE;UACjCmB,SAAS4K,SAAS;;YAEdmtB,aAAY/P,MAAMgQ,oBAAmBhQ,MAAMiQ;;;;;;;;;;;SCAvCC;;qBAVJ;;0BACC;;yBAED;;mCACQ;;0BACP;;sBAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGAA;;;;;;aAGuC,KAAK9G,QAAQ+G,SAAS,KAAKC;;;;;aACpD,KAAKC;;;;;aACS,KAAKC;;sBACzB5oB;MACrB,KAAK4oB,wBAAwB5oB;MAC7B,KAAK6oB,+BAA+B7oB;;;;;aAEE,KAAK8oB;;sBACzB9oB;MAClB,KAAK8oB,qBAAqB9oB;MAC1B,KAAK+oB,YAAYj4B,UAAUI,OAAO,YAAY8O;;;EAalD,uBAAY0hB,SAAoBC;;;8BACtBD,SAASC;uEA1BS;2FAgBMzoB;UAWzB8vB,gBAAgCv7B,SAASC,eAAe;+BACvDqE,mBAAkBi3B,eAAe;mBAAWC;;UAC7CC,eAA+Bz7B,SAASC,eAAe;+BACtDqE,mBAAkBm3B,cAAc;mBAAWC;;UAC5CJ,cAA8Bt7B,SAASC,eAAe;+BACrDqE,mBAAkBg3B,aAAa;mBAAWK;;UAC3CC,oBAAoC57B,SAASC,eAAe;+BAC3DqE,mBAAkBs3B,mBAAmB;mBAAWC;;UACjDC,uBAAuB;;;;;mDAGDt4B;MAC3B,KAAK+3B,cAAcl4B,UAAUI,OAAO,WAAWD;MAC/C,KAAKi4B,aAAap4B,UAAUI,OAAO,WAAWD;MAC9C,KAAKo4B,kBAAkBv4B,UAAUI,OAAO,WAAWD;MACnD,KAAK83B,YAAYj4B,UAAUI,OAAO,WAAWD;;;;;;MAK7C,KAAKu4B;MACL,KAAKD,uBAAuB;MAC5B,KAAKE,oBAAoB;;;;;;MAKzB,KAAKN;MACL,KAAKO;MACL,KAAKH,uBAAuB;;;;;MAI5B,KAAKI;;;;;MAIL,KAAKR;MACL,KAAKS,eAAe5D,mBAAmB,GAAG,GAAG,KAAKtE,QAAQzyB,OAAO,KAAKyyB,QAAQvyB;MAC9E,KAAKy6B,eAAerE,yCAAoB,GAAG,IAAI,GAAG;MAClD,KAAKqE,eAAe/Q,WAAW;MAE/B,KAAK0Q,uBAAuB;MAC5B,KAAKE,oBAAoB;MACzB,KAAKI,iBAAiB,KAAKC;UAEvB9wB,MAAM,KAAK4wB,eAAe5wB;MAC9BA,IAAI+wB;MACJ/wB,IAAIopB,cAAc;MAClBppB,IAAIqpB,UAAU;MACdrpB,IAAIspB,WAAW;MACftpB,IAAIkhB,YAAY;MAChBlhB,IAAIgxB,aAAa,GAAG;MACpB,KAAKC;;;;;aAIE,KAAK7M,MAAMzlB,OAAOC,QAAQqC,MAAM,GAAG,GAAG,KAAKynB,QAAQzyB,QAAQ,GAAG,KAAKyyB,QAAQvyB,SAAS;;;;;WAItF,KAAK2uB;;;MAGV,KAAKV,MAAMxlB;MAEX,KAAKqyB;;;;;MAIL,KAAKC;;;;yBAGJ3M;UACG,KAAK4M;QACL,KAAKC;QACL,KAAKD,iCAAiC;;;;;4BAItCt8B;cACIA,MAAMgP;aACL;UACD,KAAKosB;;aAEJ;cACGp7B,MAAMmuB;YACN,KAAKqO;;;;;;;;MAOjB,KAAKT,eAAenf;MACpB,KAAKkf;;;;6BAGArR;MACL,KAAKiR,uBAAuB;MAC5B,KAAKK,eAAevB,OAAO/P,MAAMrpB,OAAOqpB,MAAMnpB;MAC9C,KAAKy6B,eAAe/Q,WAAW;MAC/B,KAAK+Q,eAAelL,UAAUpG;MAC9B,KAAKmR,oBAAoB;;;;gCAGjBxQ;;UACFle,UAAU7I;MAChB6I,IAAIvI,MAAMymB;MACVle,IAAIG,SAAS;QACTvI,OAAK8lB,SAAS1d;;;;;;MAKlB,KAAKovB,iCAAiC;;;;;UAIlC,KAAKZ;;;MAGT,KAAKK,eAAenf;UAChBzR,MAAM,KAAK4wB,eAAe5wB;UAExBsmB,WAAW,KAAKwK;UAEhBhyB,IAAIlJ,KAAKG,IAAI,KAAK86B,eAAe/xB,GAAGwnB,SAASxnB;UAC7CC,IAAInJ,KAAKG,IAAI,KAAK86B,eAAe9xB,GAAGunB,SAASvnB;UAC7C9I,QAAQL,KAAK07B,IAAI,KAAKT,eAAe/xB,IAAIwnB,SAASxnB;UAClD3I,SAASP,KAAK07B,IAAI,KAAKT,eAAe9xB,IAAIunB,SAASvnB;MACzD,KAAK4wB,2CAAsB7wB,GAAGC,GAAG9I,OAAOE;MAExC6J,IAAIuxB,WAAWzyB,GAAGC,GAAG9I,OAAOE;;;;;MAI5B,KAAKuyB,QAAQ1I,YAAY,KAAK4Q;;;;;;UAI1B,KAAKA;;;MAIT,KAAKlI,QAAQlK,eAAe,KAAKkR,kBAAkB,GAAG,GAAG,KAAKhH,QAAQzyB,OAAO,KAAKyyB,QAAQvyB,QAAQ;MAClG,KAAKy6B,eAAerD,cAAc,UAAC14B;YAC3BA,MAAMg5B;UACNxN,OAAK+P;;;QAGT/P,OAAK8P;;;;;;MAKT,KAAKS,eAAenf;MACpB,KAAKke,wCAAmB6B,qBAAqB,KAAK9I,QAAQ7G,UAAU7hB,KAAK,KAAKyxB;UAE1E,KAAKA,UAAUC;;;MAInB,KAAKnB,uBAAuB;4BACE,KAAKkB,WAA5B3yB,oBAAAA,GAAGC,oBAAAA,GAAG9I,wBAAAA,OAAOE,yBAAAA;MAEpB,KAAKy6B,eAAe5D,mBAAmBluB,GAAGC,GAAG9I,OAAOE;MACpD,KAAKy6B,eAAe/Q,WAAW;MAC/B,KAAK+Q,eAAe5wB,IAAI0lB,UAAU,KAAKgD,QAAQ7G,UAAUtkB,QAAQuB,GAAGC,GAAG9I,OAAOE,QAAQ,GAAG,GAAGF,OAAOE;MACnG,KAAKuyB,QAAQ7G,UAAUpQ,MAAM,KAAKggB;;;;;WAI7B,KAAKlB;;;MAGV,KAAK7H,QAAQ7D;MACb,KAAK6D,QAAQ7G,UAAU7hB,IAAIupB,2BAA2B;MACtD,KAAKqH,eAAee,aAAa,KAAKjJ,QAAQ7G,UAAU7hB;;;;;;0CAI3CwC,OACRnN,KAAK,UAACmN;YACG+oB,YAAY/oB,KAAKgpB,OAAO,UAAA1sB;iBAAKA,EAAE2sB,WAAW;;YAC5CF,UAAU1wB,yBAAiBtC;UAC3Bd,QAAQiD,IAAI;;;YAIVxF,KAAK,UAAU6G,KAAKpB;QAC1BlD,QAAQiD,qCAA4BxF;QACpCisB,OAAKyP,eAAerzB,OAAOqoB,OAAO,UAAAlsB;qDAAqBqrB,UAAU7vB,IAAIwE;;QACrEynB,OAAKsP,oBAAoB;;;;;;MAMjC,KAAKG,eAAerzB,OAAOqoB,OAAO,UAAAlsB;eAAQiQ,UAAUioB,UAAUC,WAAWC;UAAe,aAAap4B;;;MACrGjC,QAAQiD,IAAI;;;;;;MAIZiP,UAAUooB,YAAYC;QAAOpvB,MAAM;SAC9BvN,KAAK,UAAA8R;cACIA,OAAOlB,SAAS,aAAakB,OAAOlB,SAAS;;;QAGnD0D,UAAUioB,UAAUK,OACf58B,KAAK,UAAAyI;mBACOjC,IAAI,GAAGA,IAAIiC,KAAKjD,QAAQgB;iBACxBiC,KAAKjC,GAAGq2B,MAAMvY,SAAS;;;YAG5B7b,KAAKjC,GAAGs2B,QAAQ,aACX98B,KAAK,UAAAqE;cACFqoB,OAAKP,YAAY5nB,IAAIC,gBAAgBH;;;;;;;;;UAQ7DqI,UAAU7I;MACd,KAAK03B,eAAerzB,OAAOqoB,OAAO,UAAAlsB;eAAQqI,IAAIvI,MAAMI,IAAIC,gBAAgBH;;MACxEqI,IAAIjK,UAAUE,IAAI;iCACZe,aAAagJ,KAAK;QACpBA,IAAIhK;;MAERtD,SAAS29B,KAAKh5B,YAAY2I;;;;;;;;;;;;yBC7Qf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAENswB;;;EACT,iBAAYn9B;;;8BACFA;UACD0B;;;;;;UAID,KAAKU,SAASQ,UAAUK,SAAS,WAAW,KAAKb,SAASQ,UAAUK,SAAS;QAC7E,KAAKb,SAASQ,UAAUI,OAAO;QAC/B,KAAKZ,SAASQ,UAAUI,OAAO;;UAE/B,KAAKZ,SAASQ,UAAUK,SAAS,UAAU,KAAKb,SAASQ,UAAUK,SAAS;QAC5E,KAAKb,SAASQ,UAAUI,OAAO;QAC/B,KAAKZ,SAASQ,UAAUI,OAAO","sources":["./src/ts/app.ts","./src/ts/views/BookView.ts","./src/ts/views/View.ts","./node_modules/@parcel/transformer-js/lib/esmodule-helpers.js","./src/ts/config.ts","./src/ts/views/Thumbnail.ts","./src/ts/utils/Utils.ts","./src/ts/utils/Point.ts","./src/ts/utils/Rect.ts","./src/ts/storage/ImageStorage.ts","./src/ts/storage/LocalForageAdapter.ts","./node_modules/localforage/dist/localforage.js","./src/ts/storage/StorageAdapter.ts","./src/ts/views/PaintView.ts","./src/ts/palettes/ColorPalette.ts","./src/ts/palettes/Palette.ts","./src/ts/palettes/SizePalette.ts","./src/ts/tools/PenTool.ts","./src/ts/tools/Tool.ts","./src/ts/palettes/ShapePalette.ts","./src/ts/CanvasLayer.ts","./src/ts/Layer.ts","./src/ts/ImageLayer%20.ts","./src/ts/tools/SelectionTool.ts","./src/ts/Toolbar.ts"],"sourcesContent":["import {View} from \"./views/View\";\nimport BookView from \"./views/BookView\";\nimport PaintView from \"./views/PaintView\";\nimport ImageStorage from \"./storage/ImageStorage\";\nimport DropboxAuthView from \"./views/DropboxAuthView\";\nimport {config} from \"./config\";\n\nclass App {\n    private activeView: View;\n    private bookView: BookView;\n    private paintView: PaintView;\n    private dropboxAuthView: DropboxAuthView;\n    private _sheet: HTMLElement;\n\n    constructor() {\n        App.preventOverScroll();\n        \n        this._sheet = document.getElementById(\"sheet\")\n        window.addEventListener('resize', event => {\n            this.OnResize();\n        });\n        this.OnResize();\n        \n        this.bookView = new BookView(\"book\");\n        this.bookView.onImageSelected = (id: string) => {\n            this.paintView.loadImage(id)\n                .then(() => {\n                    this.openView(this.paintView);\n                });\n        }\n\n        this.paintView = new PaintView(\"paint\",() => {\n            this.openView(this.bookView);\n        });\n\n\n        // Dropbox integration is not working yet:\n        // this.dropboxAuthView = new DropboxAuthView(\"dropbox-auth\");\n        // this.openView(ImageStorage.adapter.isAuthenticated ? this.bookView : this.dropboxAuthView);\n\n        this.openView(this.bookView);\n    }\n\n    private OnResize() {\n        const portrait = window.innerWidth < window.innerHeight;\n        const isLargeScreen = window.innerWidth > 1024;\n        const windowWidth = Math.max(window.innerWidth, window.innerHeight);\n        const windowHeight = Math.min(window.innerWidth, window.innerHeight);\n        const horizontalPixelSize = windowWidth / config.width;\n        const verticalPixelSize = windowHeight / config.height;\n        \n        const virtualPixelSize = config.fullScreenCanvas && !isLargeScreen ?\n            Math.max(horizontalPixelSize, verticalPixelSize) :\n            Math.min(horizontalPixelSize, verticalPixelSize);\n\n        this._sheet.style.fontSize = `${virtualPixelSize}px`;\n        this._sheet.style.left = `${portrait ? 0.5 * (window.innerWidth - virtualPixelSize * config.width) : 0}px`;\n    }\n\n    private static preventOverScroll() {\n        document.ontouchmove = event => { event.preventDefault();}\n    }\n\n    openView(view: View){\n        if (this.activeView){\n            this.activeView.hide();\n        }\n        this.activeView = view;\n        this.activeView.show();\n    }\n}\n\n// @ts-ignore\nwindow.app = new App();\n","import {View} from \"./View\";\nimport {config} from \"../config\";\nimport Thumbnail from \"./Thumbnail\";\n\n\nexport default class BookView extends View {\n\n    public onImageSelected: Function | undefined;\n    private _thumbnails: Thumbnail[]; \n\n    show(): void {\n        super.show();\n        this.createImages();\n    }\n\n    private createImages() {\n        if (this._thumbnails){\n            return;\n        }\n        \n        this._thumbnails = [];\n        \n        for (let sheet of config.sheets) {\n            let thumbnail = new Thumbnail(this._element, sheet.id, (id: string) => this.onImageSelected(id))\n            this._thumbnails.push(thumbnail);\n        }\n    }\n}\n","export class View {\n\n\tprotected _element: HTMLDivElement;\n\n\tconstructor(id: string) {\n\t\tthis._element = <HTMLDivElement>document.getElementById(id);\n\t\tif (!this._element){\n\t\t\tconsole.error(`Could not find element with id ${id}`);\n\t\t}\n\t\tthis.hide();\n\t}\n\n\tclear(){\n\t\twhile (this._element.hasChildNodes()) {\n\t\t\tthis._element.removeChild(<HTMLElement>this._element.firstChild);\n\t\t}\n\t}\n\n\tshow():void {\n\t\tthis._element.classList.remove(\"hidden\");\n\t}\n\n\thide():void {\n\t\tthis._element.classList.add(\"hidden\");\n\t}\n\t\n\tsetVisible(visible: boolean){\n\t\tthis._element.classList.toggle(\"hidden\", !visible);\n\t}\n\n\tisVisible(): boolean {\n\t\treturn !this._element.classList.contains(\"hidden\");\n\t}\n}\n","\"use strict\";\n\nexports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {\n    default: a\n  };\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {\n    value: true\n  });\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    } // Skip duplicate re-exports when they have the same value.\n\n\n    if (key in dest && dest[key] === source[key]) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      }\n    });\n  });\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get\n  });\n};","export const config = {\n    debug: false,\n    doubleTapDelay: 400,\n    maxShapeCount: 30,\n    fullScreenCanvas: true, // If true fills the whole screen with the canvas, if false makes sure the whole canvas fits on the screen\n    pixelPerfect: false,   // Make sure to perform painting operations on rounded pixel positions\n    imageSmoothing: true,  // Whether to use smooth pixel filtering or to draw hard pixel edges\n    width: 1024,\n    height: 768,\n    sheets:[\n        {\n            id: \"image01\",\n            overlay: \"./img/overlays/spirit.png\"\n        },\n        {\n            id: \"image02\",\n            overlay: \"./img/overlays/spirit2.png\"\n        },\n        {\n            id: \"image03\",\n            overlay: \"./img/overlays/spirit3.png\"\n        },\n        {\n            id: \"image04\",\n            overlay: \"./img/overlays/santa.png\"\n        },\n        {\n            id: \"image05\"\n        },\n        {\n            id: \"image06\"\n        },\n        {\n            id: \"image07\"\n        },\n        {\n            id: \"image08\"\n        },\n        {\n            id: \"image09\"\n        },\n        {\n            id: \"image10\"\n        },\n        {\n            id: \"image11\"\n        },\n        {\n            id: \"image12\"\n        },\n        {\n            id: \"image13\"\n        },\n        {\n            id: \"image14\"\n        },\n        {\n            id: \"image15\"\n        },\n        {\n            id: \"image16\"\n        }\n    ]\n};","import Utils from \"../utils/Utils\";\nimport ImageStorage from \"../storage/ImageStorage\";\n\nexport default class Thumbnail {\n    \n    private _element: HTMLDivElement;\n    private _image: HTMLImageElement;\n    private _overlay: HTMLImageElement;\n    get id() { return this._element.id; }\n\n    constructor(parent: HTMLElement, id: string, onImageSelected: Function | undefined) {\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        this._element = element;\n        element.id = id;\n        element.classList.add(\"thumbnail\");\n        \n        Utils.addFastClick(element,event => {\n            event.preventDefault();\n            if (onImageSelected) {\n                onImageSelected(id);\n            }\n        });\n\n        element.addEventListener(\"imagesaved\", (event: CustomEvent) => {\n            if (event.detail != this.id){\n                return;\n            }\n            this.loadImage();\n        });\n        \n        this._image = new Image();\n        this._image.draggable = false;\n        element.appendChild(this._image);\n\n        let overlayPath = Utils.getOverlayPath(id);\n        if (overlayPath){\n            this._overlay = new Image();\n            this._overlay.draggable = false;\n            this._overlay.src = overlayPath;\n            element.appendChild(this._overlay);            \n        }\n\n        parent.appendChild(element);\n        this.loadImage();\n        //this.addOverlay(overlay, thumbnail);\n    }\n\n    private loadImage() {\n        ImageStorage.loadBlob(this.id)\n            .then(blob => {\n                this._image.src = blob ? URL.createObjectURL(blob) : \"//:0\";\n                this._image.style.display = blob ? \"initial\" : \"none\";\n            });\n    }\n}","import Point from \"./Point\";\nimport {config} from \"../config\";\nimport Rect from \"./Rect\";\n\nlet _times: number[] = [];\nlet _fps: number = 60;\nlet _fpsDisplay: HTMLElement;\nlet _fpsCounterEnabled = true;\n\nexport default class Utils {\n    \n    static pointerEventsSupported(): boolean {\n        return window.PointerEvent != null;\n    }\n\n    static getOverlayPath(id: string) {\n        let page = config.sheets.find(e => e.id == id);\n        return page == null ? null : page.overlay;\n    }\n    \n    public static log(message?: any, ...optionalParams: any[]){\n        if (!config.debug){\n            return;\n        }\n        console.log(message, optionalParams);\n    }\n\n    public static updateFPSCounter(){\n        if (!_fpsCounterEnabled){\n            return false;    \n        }\n\n        const now = performance.now();\n        while (_times.length > 0 && _times[0] <= now - 1000) {\n            _times.shift();\n        }\n        _times.push(now);\n        _fps = Math.min(60, this.lerp(_fps, _times.length, 0.1));\n        if (_fpsDisplay == null){\n            _fpsDisplay = <HTMLElement>document.getElementById(\"fps-counter\");\n            if (_fpsDisplay == null){\n                this.log(\"Could not find fps counter element. Disabling fps counter.\");\n                _fpsCounterEnabled = false;\n                return;\n            }\n        }\n        _fpsDisplay.innerText = _fps.toFixed(0);\n    }\n\n    public static addFastClick(element: HTMLElement, callback: (this: HTMLElement, event: any) => any){\n        element.addEventListener(\"touchstart\", event => event.preventDefault());\n        element.addEventListener(\"touchend\", callback);\n        element.addEventListener(\"click\", callback);\n    }\n\n    public static addLongClick(element: HTMLElement, callback: (this: HTMLElement, event: any) => any, delay: number = 1500){\n        \n        let timer: any;\n        let caller = this;\n        let called: boolean = false;\n        \n        element.addEventListener(\"touchstart\", event => {\n            called = false;\n            timer = setTimeout(() => {\n                callback.call(caller, event);\n                called = true;\n            }, delay);\n        });\n        element.addEventListener(\"touchend\", event => {\n            if (called){\n                event.stopImmediatePropagation();\n                called = false;\n            }\n            else{\n                clearTimeout(timer);\n            }\n        });\n    }\n\n    public static DispatchEventToAllElements(event: Event) {\n        const elements = document.getElementsByTagName(\"*\");\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].dispatchEvent(event);\n        }\n    }\n\n    public static createNewImageId(): string {\n        return Date.now().toString();\n    }\n\n    public static lerp(a: number, b: number, alpha: number): number{\n        return a * (1 - alpha) + b * alpha;\n    }\n\n    public static clamp(lower: number, upper: number, n: number): number{\n        return Math.min(upper, Math.max(lower, n));\n    }\n\n    public static lerpColor(color1: number, color2: number, alpha: number): number{\n        if (alpha == 0){\n            return color1;\n        }\n\n        if (alpha == 1){\n            return color2;\n        }\n\n        const aa = (color1 & 0xff000000) >> 24;\n        const ba = (color1 & 0x00ff0000) >> 16;\n        const ga = (color1 & 0x0000ff00) >> 8;\n        const ra = (color1 & 0x000000ff);\n\n        const ab = (color2 & 0xff000000) >> 24;\n        const bb = (color2 & 0x00ff0000) >> 16;\n        const gb = (color2 & 0x0000ff00) >> 8;\n        const rb = (color2 & 0x000000ff);\n\n        const r = Math.floor(Utils.lerp(ra, rb, alpha));\n        const g = Math.floor(Utils.lerp(ga, gb, alpha));\n        const b = Math.floor(Utils.lerp(ba, bb, alpha));\n        const a = 255; //Math.floor(Utils.lerp(aa, ab, alpha));\n\n        return r + (g << 8) + (b << 16) + 0xFF000000;\n    }\n\n    public static lerpCanvas(ctxA: CanvasRenderingContext2D, ctxB: CanvasRenderingContext2D, ctxMask: CanvasRenderingContext2D) {\n        const width = ctxA.canvas.width;\n        const height = ctxA.canvas.height;\n        const dataA = ctxA.getImageData(0, 0, width, height);\n        const dataB = ctxB.getImageData(0, 0, width, height);\n        const dataMask = ctxMask.getImageData(0, 0, width, height);\n\n        const a32 = new Uint8ClampedArray(dataA.data.buffer);\n        const b32 = new Uint8ClampedArray(dataB.data.buffer);\n        const m32 = new Uint8ClampedArray(dataMask.data.buffer);\n\n        for (let i = 0; i < width * height; i++){\n            const a = m32[i * 4 + 3] / 255;\n            a32[i * 4 + 0] = (1 - a) * a32[i * 4 + 0] + a * b32[i * 4 + 0];\n            a32[i * 4 + 1] = (1 - a) * a32[i * 4 + 1] + a * b32[i * 4 + 1];\n            a32[i * 4 + 2] = (1 - a) * a32[i * 4 + 2] + a * b32[i * 4 + 2];\n            a32[i * 4 + 3] = (1 - a) * a32[i * 4 + 3] + a * b32[i * 4 + 3];\n        }\n        ctxA.putImageData(dataA, 0, 0);\n    }\n    \n    public static stringToColor(h: string): number {\n        let r = 0, g = 0, b = 0;\n\n        if (h.length == 4) {\n            r = parseInt(h[1] + h[1], 16);\n            g = parseInt(h[2] + h[2], 16);\n            b = parseInt(h[3] + h[3], 16);\n        } \n        else  {\n            r = parseInt(h[1] + h[2], 16);\n            g = parseInt(h[3] + h[4], 16);\n            b = parseInt(h[5] + h[6], 16);\n        }\n\n        return 0xFF000000 + r + (g << 8) + (b << 16);\n    }\n \n    public static floodFill(sourceCtx: CanvasRenderingContext2D, mask: Uint8ClampedArray,  startPosition: Point) {\n        const threshold = 0.5;\n        const width = sourceCtx.canvas.width;\n        const height = sourceCtx.canvas.height;\n        \n        const sourceData = sourceCtx.getImageData(0, 0, width, height);\n        const sourcePixels = sourceData.data;\n\n        startPosition = startPosition.copy().round();\n        const startIndex: number = startPosition.x + startPosition.y * width;\n        \n        const startR = sourcePixels[startIndex * 4];\n        const startG = sourcePixels[startIndex * 4 + 1];\n        const startB = sourcePixels[startIndex * 4 + 2];\n        const startA = sourcePixels[startIndex * 4 + 3];\n        \n        // clear alpha channel:\n        for (let i = 0; i < width * height; i++) {\n            mask[i * 4 + 3] = 0;\n        }\n\n        let stack: Point[] = [];\n        stack.push(startPosition);\n        if (startPosition.x > 1){\n            stack.push(new Point(startPosition.x - 2, startPosition.y));\n        }\n        if (startPosition.x < width - 2){\n            stack.push(new Point(startPosition.x + 2, startPosition.y));\n        }\n        if (startPosition.y > 1){\n            stack.push(new Point(startPosition.x, startPosition.y - 2));\n        }\n        if (startPosition.y < height - 2){\n            stack.push(new Point(startPosition.x, startPosition.y + 2));\n        }\n\n        while (stack.length > 0)\n        {\n            let pos = stack.pop();\n\n            if (isBorderPixel(pos.x, pos.y, false)){\n                continue;\n            }\n            \n            const minX = scanLeft(pos.x, pos.y);\n            const maxX = scanRight(pos.x, pos.y);\n            addToStack(minX, maxX, pos.y - 1);\n            addToStack(minX, maxX, pos.y + 1);\n        }\n\n        function scanLeft(x: number, y: number): number\n        {\n            let minX = x;\n            while (minX >= 0)\n            {\n                if (isBorderPixel(minX, y, true)){\n                    break;\n                }\n                minX -= 1;\n            }\n            return minX + 1;\n        }\n\n        function scanRight(x: number, y: number): number\n        {\n            let maxX: number = x + 1;\n            while (maxX < width)\n            {\n                if (isBorderPixel(maxX, y, true)){\n                    break;\n                }\n                maxX += 1;\n            }\n            return maxX - 1;\n        }\n        \n        function addToStack(minX: number, maxX: number, y: number)\n        {\n            if (y < 0 || y >= height)\n            {\n                return;\n            }\n\n            for (let x = minX; x <= maxX; x++)\n            {\n                if (isBorderPixel(x, y, false)){\n                    continue;\n                }\n                stack.push(new Point(x, y));\n            }\n \n        }\n\n        function isBorderPixel(x: number, y: number, setValue: boolean): boolean {\n            let index = (x + y * width) * 4;\n            let indexA = index + 3;\n            if (mask[indexA]){\n                return true;\n            }\n\n            // let r = sourcePixels[index];\n            // let g = sourcePixels[index + 1];\n            // let b = sourcePixels[index + 2];\n            // let a = sourcePixels[index + 3];\n            //\n            // let difference = Math.max(\n            //     Math.abs(r - startR),\n            //     Math.abs(g - startG),\n            //     Math.abs(b - startB),\n            //     Math.abs(a - startA)\n            // ) / 255;\n            \n            if (sourcePixels[indexA] === 0){\n                if (setValue){\n                    mask[indexA] = 255;\n                }\n                return false;               \n            }\n            \n            // if (difference < threshold){\n            //     if (setValue){\n            //         mask[indexA] = 255;\n            //     }\n            //     return false;\n            // }\n\n            // if (setValue) {\n            //     mask[indexA] = (1 - difference) * 255;\n            // }\n            return true;\n        }\n    }\n\n    public static getVisiblePixelFrame(ctx: CanvasRenderingContext2D, rect: Rect): Rect {\n        let {x, y, width, height} = rect;\n\n        if (width <= 0 || height <= 0){\n            return Rect.Empty();\n        }\n        \n        const data = ctx.getImageData(x, y, width, height);\n        const pixels = data.data;\n        \n        let minX = width;\n        let maxX = 0;\n        let minY = height;\n        let maxY = 0;\n\n        for (let cy = 0; cy < height; cy++) {\n            for (let cx = 0; cx < width; cx++) {\n                if (pixels[(cx + cy * width) * 4 + 3]){\n                    minX = cx < minX ? cx : minX;\n                    maxX = cx > maxX ? cx : maxX;\n                    minY = cy < minY ? cy : minY;\n                    maxY = cy > maxY ? cy : maxY;\n                }\n            }\n        }\n        \n        x += minX;\n        y += minY;\n        width = Math.max(0, maxX - minX + 1);\n        height = Math.max(0, maxY - minY + 1);\n        return new Rect(x, y, width, height); \n    }\n    \n    public static dilateMask(pixels: Uint8ClampedArray, width: number, height: number) {\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width - 1; x++) {\n                const i = (x + y * width) * 4 + 3;\n                if (pixels[i + 4]){\n                    pixels[i] = 255;\n                }\n            }\n            for (let x = width - 1; x > 0; x--) {\n                const i = (x + y * width) * 4 + 3;\n                if (pixels[i - 4]){\n                    pixels[i] = 255;\n                }\n            }\n        }\n        for (let x = 0; x < width; x++) {\n            for (let y = 0; y < height - 1; y++) {\n                const i = (x + y * width) * 4 + 3;\n                if (pixels[i + 4 * width]){\n                    pixels[i] = 255;\n                }\n            }\n            for (let y = height - 1; y > 0; y--) {\n                const i = (x + y * width) * 4 + 3;\n                if (pixels[i - 4 * width]){\n                    pixels[i] = 255;\n                }\n            }\n        }\n    }\n}","import Utils from \"./Utils\";\n\nexport default class Point {\n    public x: number;\n    public y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    copy(): Point{\n        return new Point(this.x, this.y);\n    }\n\n    static add(a: Point, b: Point){\n        return new Point(a.x + b.x, a.y + b.y);\n    }\n    \n    add(p: Point){\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    }\n\n    static subtract(a: Point, b: Point){\n        return new Point(a.x - b.x, a.y - b.y);\n    }\n\n    subtract(p: Point){\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    }\n\n    round(){\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n    \n    clamp(minX: number, minY: number, maxX: number, maxY: number){\n        this.x = Utils.clamp(minX, maxX, this.x);\n        this.y = Utils.clamp(minY, maxY, this.y);\n        return this;\n    }\n\n    static distance(a: Point, b: Point) {\n        let dx = a.x - b.x;\n        let dy = a.y - b.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    static center(a: Point, b: Point) {\n        return new Point(0.5 * (a.x + b.x), 0.5 * (a.y + b.y));\n    }\n\n    static mirror(p: Point, center: Point) {\n        return new Point(2 * center.x - p.x, 2 * center.y - p.y);\n    }\n\n    static lerp(p1: Point, p2: Point, a: number){\n        return new Point(\n            p1.x * (1 - a) + p2.x * a,\n            p1.y * (1 - a) + p2.y * a);\n    }\n}","export default class Rect {\n    public x: number;\n    public y: number;\n    public width: number;\n    public height: number;\n    \n    get minX() { return this.x; }\n    get minY() { return this.y; }\n    get maxX() { return this.x + this.width; }\n    get maxY() { return this.y + this.height; }\n\n    constructor(x: number, y: number, width: number, height: number) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    \n    isEmpty(): boolean{\n        return this.width <= 0 || this.height <= 0;\n    }\n    \n    static Empty(): Rect{\n        return new Rect(0, 0, 0, 0);\n    }\n}","import LocalForageAdapter from \"./LocalForageAdapter\";\nimport Utils from \"../utils/Utils\";\nimport DropboxAdapter from \"./DropboxAdapter\";\nimport StorageAdapter from \"./StorageAdapter\";\n\nexport default class ImageStorage {\n\n\tprivate static _adapter: StorageAdapter;\n\t\n\tpublic static get adapter() {\n\t\tif (this._adapter == null) {\n\t\t\tthis._adapter = new LocalForageAdapter()\n\t\t}\n\t\treturn this._adapter \n\t}\n\n\tprivate static loadImageFromStore(id: string): Promise<HTMLImageElement> {\n\t\tif (!id) {\n\t\t\treturn Promise.reject(\"Could not load image from empty id.\");\n\t\t}\n\t\t\n\t\treturn this.adapter.getItem(id)\n\t\t\t.then(blob => {\n\t\t\t\tif (!blob){\n\t\t\t\t\t// Returning null will create a new image\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet img = this.imageFromBlob(id, blob as Blob);\n\t\t\t\tif (!img){\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (img.decode != null) {\n\t\t\t\t\treturn img.decode().then(() => Promise.resolve(img))\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\timg.onload = () => resolve(img);\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\tpublic static loadImage(id: string): Promise<HTMLImageElement> {\n\t\treturn this.loadImageFromStore(id);\n\t}\n\n\tpublic static loadBlob(id: string): Promise<Blob> {\n\t\treturn <Promise<Blob>>this.adapter.getItem(id)\n\t}\n\n\tprivate static imageFromBlob(id: string, blob: Blob) {\n\t\tlet img = new Image();\n\t\timg.id = id;\n\t\timg.src = URL.createObjectURL(blob);\n\t\treturn img;\n\t}\n\n\tpublic static async saveImage(id: string, blob: Blob){\n\t\ttry{\n\t\t\tawait this.adapter.setItem(id, blob);\n\t\t}\n\t\tcatch (e) {\n\t\t}\n\t\tconst event = new CustomEvent<string>(\"imagesaved\", {detail: id})\n\t\tUtils.DispatchEventToAllElements(event);\n\t}\n\t\n\tpublic static deleteImage(id: string){\n\t\treturn this.adapter.removeItem(id)\n\t\t\t.then(() => {\n\t\t\t\tconst event = new CustomEvent<string>(\"imagedeleted\", {detail: id})\n\t\t\t\tUtils.DispatchEventToAllElements(event);\n\t\t\t})\t\t\n\t}\n\n\tpublic static keys() {\n\t\treturn this.adapter.keys();\n\t}\n\n\n}\n","import localforage from 'localforage';\nimport StorageAdapter from \"./StorageAdapter\";\n\nexport default class LocalForageAdapter extends StorageAdapter{\n\n    private _imageStore = localforage.createInstance({name: \"ImageStore\"});\n\n    getItem(id: string): Promise<unknown> {\n        return this._imageStore.getItem(id);\n    }\n\n    setItem(id: string, blob: Blob): Promise<unknown> {\n        return this._imageStore.setItem(id, blob);\n    }\n    \n    removeItem(id: string): Promise<unknown> {\n        return this._imageStore.removeItem(id);\n    }\n\n    keys(): Promise<unknown> {\n        return this._imageStore.keys()\n    }\n\n    iterate(param: (blob: Blob, id: string, iteration: number) => void): Promise<unknown> {\n        return this._imageStore.iterate(param)\n    }\n}","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","export default abstract class StorageAdapter {\n    abstract getItem(id: string): Promise<unknown>;\n    abstract setItem(id: string, blob: Blob): Promise<unknown>;\n    abstract removeItem(id: string): Promise<unknown>;\n    abstract keys(): Promise<unknown>;\n}","import {View} from \"./View\";\nimport Tool from \"../tools/Tool\";\nimport ColorPalette from \"../palettes/ColorPalette\";\nimport ToolPalette from \"../palettes/ToolPalette\";\nimport SizePalette from \"../palettes/SizePalette\";\nimport Utils from \"../utils/Utils\";\nimport PenTool from \"../tools/PenTool\";\nimport PaintBucketTool from \"../tools/PaintBucketTool\";\nimport Point from \"../utils/Point\";\nimport {Palette} from \"../palettes/Palette\";\nimport ImageStorage from \"../storage/ImageStorage\";\nimport {config} from \"../config\";\nimport RectangleTool from \"../tools/RectangleTool\";\nimport LineTool from \"../tools/LineTool\";\nimport StampTool from \"../tools/StampTool\";\nimport ShapePalette from \"../palettes/ShapePalette\";\nimport Layer from \"../Layer\";\nimport ILayer from \"../ILayer\";\nimport CanvasLayer from \"../CanvasLayer\";\nimport ImageLayer from \"../ImageLayer \";\nimport SelectionTool from \"../tools/SelectionTool\";\nimport {Toolbar} from \"../Toolbar\";\n\n// var Pressure = require('pressure');\n\nexport default class PaintView extends View {\n    public readonly scaleFactor = 1;\n    public readonly width: number;\n    public readonly height: number;\n\n    public brushTool: Tool;\n    public markerTool: Tool;\n    public eraserTool: Tool;\n    public selectionTool: SelectionTool;\n    public paintBucketTool: Tool;\n\n    private _currentTool: Tool;\n    private _imageId: string;\n    private _color: string;\n    private _opacity: number;\n    private _lineWidth: number;\n    private _autoMaskCtx: CanvasRenderingContext2D;\n    private _mainToolbar: Toolbar;\n    private _contextToolbar: Toolbar;\n    private _colorPalette: ColorPalette;\n    private _sizePalette: SizePalette;\n    private _shapePalette: ShapePalette;\n    private _tools: Tool[];\n    private _currentTouchId: number = 0;\n    private _undoBuffer: ImageData;\n    private _undoButton: HTMLDivElement;\n    private _timeStamp: number;\n    private _tickTimeStamp: number;\n    private _autoMaskCaptured: boolean;\n    private _stamp: string;\n    private _layers: { [id : string] : ILayer } = {};\n    private _sheet: HTMLElement;\n    private _importImageButton: HTMLDivElement;\n\n    get color(): string { return this._color; }\n    get stamp(): string { return this._stamp; }\n    get opacity(): number { return this._opacity; }\n    get lineWidth(): number { return this._lineWidth; }\n    get autoMaskCtx(): CanvasRenderingContext2D { return this._autoMaskCtx; }\n    //get layers(): Layer[] { return this._layers; }\n    get baseLayer(): CanvasLayer { return <CanvasLayer>this._layers[\"base-layer\"]; }\n    get overlayLayer(): ImageLayer { return <ImageLayer>this._layers[\"overlay-layer\"]; }\n\n    constructor(id: string, onBackClicked: Function) {\n        super(id);\n        \n        this._sheet = document.getElementById(\"sheet\");\n\n        this.width = config.width;\n        this.height = config.height;\n        Utils.log(`Setting PaintView size to ${this.width} x ${this.height}`);\n\n        this.addCanvasLayer(\"base-layer\", 0, 0, this.width, this.height,false);\n        this.addEventListeners();\n        this.createButtons(onBackClicked);\n        this.createToolbar();\n        this.createPalettes();\n        this.createTools();\n\n        let autoMaskCanvas = document.createElement(\"canvas\");\n        autoMaskCanvas.id = \"auto-mask\";\n        autoMaskCanvas.width = this.width;\n        autoMaskCanvas.height = this.height;\n        this._autoMaskCtx = <CanvasRenderingContext2D>autoMaskCanvas.getContext(\"2d\", {alpha: true});\n    }\n    \n    getLayer(id: string){\n        return this._layers[id];\n    }\n\n    private createButtons(onBackClicked: Function) {\n        let backButton = <HTMLDivElement>document.getElementById(\"back-button\");\n        Utils.addFastClick(backButton, () => onBackClicked());\n\n        this._undoButton = <HTMLDivElement>document.getElementById(\"undo-button\");\n        Utils.addFastClick(this._undoButton, () => this.undo());\n\n        let importImageField = <HTMLInputElement>document.getElementById(\"import-image-field\");\n        importImageField.addEventListener(\"change\", files => {\n            if (importImageField.files.length == 0){\n                return;\n            }\n            let file = importImageField.files[0];\n            let image = new Image();\n            image.src = URL.createObjectURL(file);\n            image.onload = () => {\n                this.setTool(this.selectionTool);\n                this.selectionTool.setImage(image);\n            }\n        })\n        this._importImageButton = <HTMLDivElement>document.getElementById(\"import-image-button\");\n        Utils.addFastClick(this._importImageButton, () => importImageField.click());\n    }\n\n    private addLayer(layer: ILayer): ILayer {\n        layer.index = Object.keys(this._layers).length;\n        this._layers[layer.id] = layer;\n        return layer;\n    }\n    \n    public addImageLayer(id: string, x: number, y: number, width: number, height: number, floating: boolean): ImageLayer{\n        const layer = new ImageLayer(this._sheet, id, x, y, width, height);\n        layer.floating = floating;\n        this.addLayer(layer);\n        return layer;\n    }\n    \n    public addCanvasLayer(id: string, x: number, y: number, width: number, height: number, floating: boolean): CanvasLayer{\n        const layer = new CanvasLayer(this._sheet, id, x, y, width, height);\n        layer.floating = floating;\n        this.addLayer(layer);\n        return layer;\n    }\n    \n    public removeLayer(layer: ILayer) {\n        if (!layer){\n            return;\n        }\n        layer.remove();\n        delete this._layers[layer.id]\n    }\n    \n    public createOverlay(){\n        if (this.overlayLayer){\n            return;\n        }\n        this.addLayer(new ImageLayer(this._sheet, \"overlay-layer\", 0, 0, this.width, this.height));\n    }\n    \n    public removeOverlay(){\n        this.removeLayer(this.overlayLayer);\n    }\n    \n    public setOverlay(url: string){\n        if (!url){\n            this.removeOverlay();\n            return;\n        }\n        this.createOverlay();\n        this.overlayLayer.image.src = url;\n                //this.processOverlay(this.overlay.ctx);\n\n                // show processed overlay:\n                // this._overlayCtx.canvas.toBlob(blob => {\n                //     this._overlay.src = URL.createObjectURL(blob);\n                // })\n    }\n    \n    private createTools() {\n        let penButton = document.getElementById(\"tool-pen\");\n        Utils.addFastClick(penButton, () => this.setTool(this.markerTool));\n        let eraserButton = document.getElementById(\"tool-eraser\");\n        Utils.addLongClick(eraserButton, () => this.clear(true, true));\n        Utils.addFastClick(eraserButton, () => this.setTool(this.eraserTool));\n        let selectionButton = document.getElementById(\"tool-selection\");\n        Utils.addFastClick(selectionButton, () => this.setTool(this.selectionTool));\n        \n        this._tools = [];\n        // this.brushTool = this.addTool(new PenTool(this, \"tool-\", \"source-over\"));\n        this.markerTool = this.addTool(new PenTool(this, \"tool-pen\", \"darken\"));\n        this.eraserTool = this.addTool(new PenTool(this, \"tool-eraser\", \"destination-out\"));\n        this.selectionTool = <SelectionTool>this.addTool(new SelectionTool(this, \"tool-selection\"));\n        // this.paintBucketTool = this.addTool(new PaintBucketTool(this));\n        // this._currentTool = this.brushTool;\n        this.setTool(this.markerTool);\n    }\n    \n    private addTool(tool: Tool){\n        this._tools.push(tool);\n        return tool;\n    }\n    \n    private createToolbar(){\n        this._mainToolbar = new Toolbar(\"main-toolbar\");\n\n        this._contextToolbar = new Toolbar(\"context-toolbar\");\n    }\n\n    private createPalettes() {\n        this._sizePalette = new SizePalette(\"size-palette\");\n        this._sizePalette.onSelectionChanged = (lineWidth: number) => {\n            this._lineWidth = lineWidth;\n        };\n        this._lineWidth = this._sizePalette.size;\n\n        this._colorPalette = new ColorPalette(\"color-palette\");\n        this._colorPalette.onSelectionChanged = (color: string) => this._color = color;\n        this._color = this._colorPalette.color;\n\n        this._shapePalette = new ShapePalette(\"stamp-palette\");\n        this._shapePalette.onSelectionChanged = (stamp: string) => {\n            this._stamp = stamp;\n            this.setTool(this.selectionTool);\n            this.selectionTool.setImageUrl(this.stamp);\n        }\n        this._stamp = this._shapePalette.stamp;\n\n        this._opacity = 1;\n    }\n\n    private setTool(tool: Tool) {\n        if (this._currentTool){\n            this._currentTool.disable();\n        }\n        this._currentTool = tool;\n        if (this._currentTool){\n            this._currentTool.enable();\n        }\n\n        this._colorPalette.setVisible(this._currentTool == this.markerTool);\n        this._sizePalette.setVisible(this._currentTool == this.markerTool || this._currentTool == this.eraserTool);\n        // this._shapePalette.setVisible(this._currentTool == this.selectionTool);\n        // this._importImageButton.classList.toggle(\"hidden\", this._currentTool != this.selectionTool);\n    }\n\n    private addEventListeners() {\n        let canvas = this.baseLayer.canvas;\n        canvas.style.pointerEvents = \"auto\";\n        //canvas.addEventListener('keydown', event => this.keyDown(event));\n        document.addEventListener('keydown', event => this.keyDown(event));\n        canvas.addEventListener('click', event => event.preventDefault());\n\n        if (window.PointerEvent != null){\n            // Required to prevent pointerDown events from being choked when tapping repeatedly: \n            canvas.addEventListener('touchstart', event => event.preventDefault());\n            \n            canvas.addEventListener('pointerdown', event => this.pointerDown(event));\n            canvas.addEventListener('pointermove', event => this.pointerMove(event));\n            canvas.addEventListener('pointerup', event => this.pointerUp(event));\n            canvas.addEventListener('pointercancel', event => event.preventDefault());\n        }\n        else{\n            canvas.addEventListener('touchstart', event => this.touchStart(event));\n            canvas.addEventListener('touchmove', event => this.touchMove(event));\n            canvas.addEventListener('touchend', event => this.touchEnd(event));\n            canvas.addEventListener('touchcancel', event => event.preventDefault());\n        }\n        //canvas.addEventListener('touchforcechanged', event => this.pressureChanged(<TouchEvent>event))\n        // Pressure.set(canvas, {\n        //     change: (force: number, event: Event) => this.pressureChanged(force)\n        // })\n    }\n\n    private getPointerEventPosition(event: PointerEvent) {\n        let target = <HTMLElement>event.target;\n        let rect = target.getBoundingClientRect();\n        const isPortraitOrientation = rect.height > rect.width;\n\n        let nx = (event.clientX - rect.left) / rect.width;\n        let ny = (event.clientY - rect.top) / rect.height;\n        \n        let x = (isPortraitOrientation ? 1 - ny : nx) * this.width;\n        let y = (isPortraitOrientation ? nx : ny) * this.height; \n\n        if (config.pixelPerfect){\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return new Point(x, y);\n    }\n\n    private getTouchEventPosition(touch: Touch) {\n        let rect = this.baseLayer.canvas.getBoundingClientRect();\n        const isPortraitOrientation = rect.height > rect.width;\n\n        let nx = (touch.clientX - rect.left) / rect.width;\n        let ny = (touch.clientY - rect.top) / rect.height;\n\n        let x = (isPortraitOrientation ? 1 - ny : nx) * this.width;\n        let y = (isPortraitOrientation ? nx : ny) * this.height;\n\n        if (config.pixelPerfect){\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return new Point(x, y);\n    }\n    \n    private keyDown(event: KeyboardEvent){\n        if (!this.isVisible()){\n            return;\n        }\n        \n        switch (event.code){\n            case 'KeyV':\n                if (event.metaKey){\n                    this.setTool(this.selectionTool);\n                    this.selectionTool.pasteFromClipboard();\n                }\n                break;\n        }\n        \n        if (!this._currentTool) {\n            return;\n        }\n        this._currentTool.keyDown(event);\n    }\n\n    pointerDown(event: PointerEvent) {\n        event.preventDefault();\n\n        if (event.pointerType == 'touch' && this._currentTouchId !== 0){\n            return;\n        }\n\n        if (event.pointerType != 'touch' && event.buttons !== 1){\n            return;\n        }\n\n        let target = <HTMLElement>event.target;\n        target.setPointerCapture(event.pointerId);\n\n        this._currentTouchId = event.pointerId;\n        let pressure = event.pointerType == \"pen\" ? Utils.clamp(0.3, 1, event.pressure * 2) : 1;\n        this.down(event.timeStamp, true, this.getPointerEventPosition(event), pressure);\n     }\n\n    pointerMove(event: PointerEvent) {\n        event.preventDefault();\n        if (event.pointerType == 'touch' && event.pointerId !== this._currentTouchId){\n            return;\n        }\n\n        if (event.pointerType != 'touch' && event.buttons !== 1){\n            return;\n        }\n\n        // normalize pressure:\n        let pressure = event.pointerType == \"pen\" ? Utils.clamp(0.5, 1, event.pressure * 2) : 1;\n        this.move(event.timeStamp, true, this.getPointerEventPosition(event), pressure);\n    }\n\n    pointerUp(event: PointerEvent) {\n        event.preventDefault();\n        if (event.pointerType == 'touch' && event.pointerId !== this._currentTouchId){\n            return;\n        }\n\n        // Return if this was not the left mouse button:\n        // if (event.pointerType != 'touch' && event.buttons !== 1){\n        //     return;\n        // }\n\n        let target = <HTMLElement>event.target;\n        target.releasePointerCapture(event.pointerId);\n\n        this.up(this.getPointerEventPaintingFlag(event), this.getPointerEventPosition(event));\n        this._currentTouchId = 0;\n    }\n\n    private getPointerEventPaintingFlag = (e: PointerEvent) => e.pointerType === \"touch\" ? true : e.buttons === 1;\n\n    pressureChanged(force: number){\n        let pressure = Utils.clamp(0.3, 1, force * 2);\n        this._currentTool.pressure = Math.max(pressure, this._currentTool.pressure);\n        this._currentTool.pressureChanged();\n    }\n\n    touchStart(event: TouchEvent) {\n        event.preventDefault();\n        if (this._currentTouchId !== 0){\n            return;\n        }\n        this._currentTouchId = event.targetTouches[0].identifier;\n        this.down(event.timeStamp,true, this.getTouchEventPosition(event.targetTouches[0]), 1);\n    }\n\n    touchMove(event: TouchEvent) {\n        event.preventDefault();\n        let touch = PaintView.findTouch(event.targetTouches, this._currentTouchId);\n        if (touch == null){\n            return;\n        }\n        this.move(event.timeStamp, true, this.getTouchEventPosition(touch), 1);\n    }\n\n    touchEnd(event: TouchEvent) {\n        event.preventDefault();\n        let touch = PaintView.findTouch(event.targetTouches, this._currentTouchId);\n        if (touch != null){\n            return;\n        }\n        this.up(true,event.touches.length > 0 ? this.getTouchEventPosition(touch) : this._currentTool.mouse);\n        this._currentTouchId = 0;\n    }\n\n    private static findTouch(touches: TouchList, id: number){\n        for (let i = 0; i < touches.length; i++) {\n            if (touches[i].identifier == id){\n                return touches[i];\n            }\n        }\n        return null;\n    }\n\n    private move(timeStamp: number, isPainting: boolean, mouse: Point, pressure: number) {\n        if (!this._currentTool) {\n            return;\n        }\n\n        // this._currentTool.painting = isPainting;\n        this._currentTool.pressure = pressure;\n\n        let newMouse = mouse;\n        let delta = Point.distance(this._currentTool.mouse, newMouse);\n\n        if (delta > 2) {\n            let timeDelta = timeStamp - this._timeStamp;\n            this._timeStamp = timeStamp;\n            let speed = delta / timeDelta;\n\n            this._currentTool.speed = Utils.lerp(this._currentTool.speed, speed, 0.2);\n            this._currentTool.mouse = newMouse;\n            this._currentTool.move();\n        }\n    }\n\n    private down(timeStamp: number, isPainting: boolean, mouse: Point, pressure: number) {\n        Palette.collapseAll();\n\n        if (!this._currentTool) {\n            return;\n        }\n        \n        this.recordUndo();\n        this._timeStamp = timeStamp;\n        this._currentTool.speed = 1;\n        this._currentTool.painting = isPainting;\n        this._currentTool.pressure = pressure;\n        this._currentTool.mouse = mouse;\n        this._currentTool.down();\n    }\n\n    private up(isPainting: boolean, mouse: Point) {\n        if (!this._currentTool) {\n            return;\n        }\n\n        this._currentTool.painting = isPainting;\n        this._currentTool.mouse = mouse;\n        this._currentTool.up();\n        this.saveImage();\n    }\n\n    clear(registerUndo: boolean = false, save: boolean = false) {\n        if (registerUndo){\n            this.recordUndo();\n        }\n        this.baseLayer.clear();\n        if (save){\n            this.saveImage();\n        }\n    }\n\n    recordUndo(){\n        this._undoBuffer = this.baseLayer.getData();\n        this.updateUndoButtonState();\n    }\n\n    clearUndoBuffer(){\n        this._undoBuffer = null;\n        this.updateUndoButtonState();\n    }\n\n    updateUndoButtonState(){\n        this._undoButton.classList.toggle(\"disabled\", this._undoBuffer == null);\n    }\n\n    undo(swapBuffers = true) {\n        if (!this._undoBuffer){\n            return;\n        }\n        let undoBuffer = this._undoBuffer;\n        if (swapBuffers){\n            this.recordUndo();\n        }\n        this.baseLayer.putData(undoBuffer);\n    }\n\n    loadImage(id: string) {\n        return ImageStorage.loadImage(id)\n            .then(image => {\n                this._imageId = id;\n                this.clear();\n                if (image){\n                    this.baseLayer.drawImage(image);\n                }\n                \n                this.setOverlay(Utils.getOverlayPath(id));\n            })\n    }\n\n    saveImage() {\n        Utils.log(\"Saving image\");\n        this.baseLayer.canvas.toBlob(blob => ImageStorage.saveImage(this._imageId, blob as Blob));\n    }\n\n    show(){\n        super.show();\n        this._currentTouchId = 0;\n        this.clearUndoBuffer();\n        this._autoMaskCaptured = false;\n        window.requestAnimationFrame(timeStamp => this.tick(timeStamp))\n        this._currentTool.enable();\n    }\n    \n    hide(){\n        if (this._layers){\n            this.saveImage();\n        }\n        if (this._currentTool){\n            this._currentTool.disable();\n        }\n        super.hide();\n    }\n\n    private tick(timeStamp: number) {\n        if (!this.isVisible()){\n            return;\n        }\n\n        window.requestAnimationFrame(timeStamp => this.tick(timeStamp))\n        \n        if (config.debug){\n            Utils.updateFPSCounter();\n        }\n\n        if (!this._currentTool) {\n            return;\n        }\n        \n        let delta = timeStamp - this._tickTimeStamp;\n        this._tickTimeStamp = timeStamp;\n        this._currentTool.tick(delta);\n    }\n\n    captureAutoMask(position: Point) {\n        this._autoMaskCaptured = true;\n        if (!this.overlayLayer){\n            return;\n        }\n        \n        // let imageData = this._autoMaskCtx.getImageData(0, 0, this.width, this.height);\n        //\n        // // avoid expensive floodfill:\n        // const index = (position.x + position.y * this.width) * 4 + 3;\n        // if (this._autoMaskCaptured && imageData.data[index] > 0){\n        //     return;\n        // }\n        //\n        // Utils.log(\"capturing auto mask\");\n        // Utils.floodFill(this.overlayLayer.ctx, imageData.data, position);\n        // Utils.dilateMask(imageData.data, this.width, this.height);\n        // this._autoMaskCtx.putImageData(imageData, 0, 0);\n    }\n\n    private processOverlay(ctx: CanvasRenderingContext2D) {\n        const imageData = ctx.getImageData(0, 0, this.width, this.height);\n        const pixels = imageData.data;\n        for (let i = pixels.length - 1; i >= 0; i--) {\n            pixels[i] = pixels[i] > 64 ? 255 : 0;\n        }\n        ctx.putImageData(imageData, 0, 0);\n    }\n}","import {Palette} from \"./Palette\";\n\nexport default class ColorPalette extends Palette {\n\n    get color() { return this.selectedOption }\n    set color(value: string) { this.selectedOption = value }\n\n    constructor(id: string){\n        // 16 color Mac palette\n        // https://en.wikipedia.org/wiki/List_of_software_palettes#Apple_Macintosh_default_16-color_palette\n        // let colors: string[] = [\n        //     \"#FFFFFF\", \"#f5f60d\", \"#f5650a\", \"#d50406\",\n        //     \"#f50695\", \"#330496\", \"#0306c5\", \"#0692f0\",\n        //     \"#06a606\", \"#026405\", \"#643403\", \"#946434\",\n        //     \"#b5b5b5\", \"#848484\", \"#444444\", \"#030303\",\n        // ];\n\n        // 32 color palette\n        // https://github.com/geoffb/dawnbringer-palettes\n        let colors: string[] = [\n            \"#000000\", \"#222034\", \"#45283c\", \"#663931\",\n            \"#8f563b\", \"#df7126\", \"#d9a066\", \"#eec39a\",\n            \"#fbf236\", \"#99e550\", \"#6abe30\", \"#37946e\",\n            \"#4b692f\", \"#524b24\", \"#323c39\", \"#3f3f74\",\n            \"#306082\", \"#5b6ee1\", \"#639bff\", \"#5fcde4\",\n            \"#cbdbfc\", \"#ffffff\", \"#9badb7\", \"#847e87\",\n            \"#696a6a\", \"#595652\", \"#76428a\", \"#ac3232\",\n            \"#d95763\", \"#d77bba\", \"#8f974a\", \"#8a6f30\",\n        ];\n\n        super(id, colors);\n        this.selectedIndex = 15;\n    }\n    \n    updateOptionElement(element: HTMLDivElement, option: string) {\n        element.style.background = option;\n    }\n}","import {View} from \"../views/View\";\nimport Utils from \"../utils/Utils\";\n\n// base class for palettes\nexport class Palette extends View {\n    public onSelectionChanged: Function | undefined;\n    private _selectedElement: HTMLDivElement;\n    private _optionsElement: HTMLDivElement;\n    private _optionElements: HTMLDivElement[];\n    private _selectedIndex: number;\n    protected _options: any[];\n    \n    private static _expandedPalette: Palette;\n\n    get selectedIndex(){ return this._selectedIndex }\n    set selectedIndex(value){\n        this._selectedIndex = Math.max(0, Math.min(this._options.length - 1, value));\n        this.updateSelectedOptionElement(this._selectedElement, this.selectedOption);\n    }\n    \n    get selectedOption(){ return this._options[this._selectedIndex] }\n    set selectedOption(value){\n        let index = this._options.indexOf(value);\n        if (index === -1){\n            return;\n        }\n        this.selectedIndex = index;\n    }\n    \n    get isCollapsed(){ return this._element.classList.contains(\"collapsed\") }\n\n    constructor(id: string, options: any[], rightAlign: boolean = false) {\n        super(id);\n        this._options = options;\n        this._optionElements = [];\n        this._selectedIndex = 0;\n        this.createOptions();\n        this.show();\n        this.collapse();\n    }\n    \n    static collapseAll() {\n        if (Palette._expandedPalette){\n            Palette._expandedPalette.collapse();\n        }\n    }\n    \n    private createOptions(){\n        this.addSelectedOption();\n        this.addOptionElements();\n    }\n    \n    recreateOptions(){\n        this.clear();\n        this.createOptions();\n    }\n\n    collapse() {\n        this._element.classList.add(\"collapsed\");\n        if (Palette._expandedPalette == this){\n            Palette._expandedPalette = null;\n        }\n    }\n\n    expand() {\n        Palette.collapseAll();\n        this._element.classList.remove(\"collapsed\");\n        Palette._expandedPalette = this;\n    }\n\n    toggle() {\n        if (this.isCollapsed){\n            this.expand();\n        }\n        else {\n            this.collapse();\n        }\n    }\n    \n    addOption(value: any){\n        this._options.push(value);\n        this.addOptionElement(this._options.length - 1, value);\n        this.updateOptionsWidth();\n    }\n\n    removeOption(index: number){\n        this._options.splice(index, 1);\n        this._optionElements[index].remove();\n        this._optionElements.splice(index, 1);\n        \n        // update the index assigned to each element:\n        this.recreateOptions();\n    }\n\n    private addSelectedOption() {\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        element.classList.add(\"option\");\n        this._selectedElement = element;\n        Utils.addFastClick(element, () => this.toggle());\n        this.updateSelectedOptionElement(element, this.selectedOption);\n        this._element.appendChild(element);\n    }\n    \n    private addOptionElements(){\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        element.classList.add(\"options\");\n        this._optionsElement = element;\n        this.addArrowElement();\n\n        let i: number = 0;\n        for (let option of this._options){\n            this.addOptionElement(i, option);\n            i ++;\n        }\n        this.updateOptionsWidth();\n        this._element.appendChild(element);\n    }\n\n    private updateOptionsWidth() {\n        this._optionsElement.style.width = Math.min(8, this._options.length) * 1.25 + \"em\";\n    }\n\n    private addArrowElement(){\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        element.classList.add(\"arrow\");\n        this._optionsElement.appendChild(element);\n    }\n\n    private addOptionElement(index: number, option: any) {\n        let element = <HTMLDivElement>document.createElement(\"div\");\n        element.classList.add(\"option\");\n        element.dataset.index = `${index}`;\n        Utils.addLongClick(element, event => this.optionLongClicked(event, option, index));\n        Utils.addFastClick(element, event => this.optionClicked(event, option, index));\n        this.updateOptionElement(element, option);\n        this._optionsElement.appendChild(element);\n        this._optionElements[index] = element;\n    }\n    \n    protected optionClicked(event: Event, option: any, index: number){\n        this.selectedIndex = index;\n        this.collapse();\n        if (this.onSelectionChanged) {\n            this.onSelectionChanged(option, index);\n        }        \n    }\n\n    protected optionLongClicked(event: Event, option: any, index: number){\n    }\n\n    protected updateOptionElement(element: HTMLDivElement, option: any){\n    }\n\n    protected updateSelectedOptionElement(element: HTMLDivElement, option: any) {\n        this.updateOptionElement(element, option);\n    }\n}","import {Palette} from \"./Palette\";\n\nexport default class SizePalette extends Palette {\n\n    get size() { return this.selectedOption }\n    set size(value: number) { this.selectedOption = value }\n\n    constructor(id: string){\n        let sizes: number[] = [2, 8, 24, 40];\n        super(id, sizes, true);\n        this.selectedIndex = 1;\n    }\n\n    updateOptionElement(element: HTMLDivElement, option: any) {\n        const width = option / 40;\n        element.innerHTML = '<div class=\"line-width\" style=\"width:' + width + 'em\"></div>';\n    }\n}","import Tool from \"./Tool\";\nimport Point from \"../utils/Point\";\nimport PaintView from \"../views/PaintView\";\nimport Utils from \"../utils/Utils\";\n\n// @ts-ignore\nimport brushPath from \"url:../../img/brush.png\";\n\n// Paints lines with varying stroke width\nexport default class PenTool extends Tool {\n\n    private _lastPoint: Point = new Point(0, 0);\n    private _points: Point[];\n    private _widths: number[];\n    private _drawPathRequested: boolean;\n    \n    private readonly _operation: string;\n\n    constructor(painter: PaintView, buttonId: string, operation: string = \"darken\") {\n        super(painter, buttonId);\n        this._operation = operation;\n    }\n\n    down(): void {\n        this.painter.captureAutoMask(this.mouse.copy().round());\n        \n        this._lastPoint = this.mouse.copy()\n        this._points = [this._lastPoint];\n        this._widths = [this.getWidth()];\n\n        let ctx = this.getBufferCtx();\n        ctx.strokeStyle = this.color;\n        ctx.lineCap = \"round\";\n        ctx.lineJoin = \"round\";\n        this.painter.baseLayer.ctx.globalCompositeOperation = this._operation;\n\n        this.requestDrawPath();\n    }\n    \n    tick(delta: number) {\n        if (this._drawPathRequested){\n            this.drawPath();\n            this._drawPathRequested = false;\n        }\n    }\n\n    requestDrawPath(){\n        this._drawPathRequested = true;\n    }\n\n    drawPath(){\n        let ctx = this.getBufferCtx();\n        if (this._points.length > 0){\n            this.painter.undo(false);\n            ctx.clearRect(0, 0, this.painter.width, this.painter.height);\n\n            let point = this._points[0];\n            let oldPoint = point;\n\n            for (let i = 0; i < this._points.length; i++){\n                let lastPoint = this._points[Math.max(0, i - 1)];\n                point = this._points[i].copy();\n                // point.x += (this.random(i) - 0.5) * this._widths[i] * 0.3;\n                // point.y += (this.random(i) - 0.5) * this._widths[i] * 0.3;\n\n                let midPoint = new Point(\n                    (point.x + lastPoint.x) * 0.5,\n                    (point.y + lastPoint.y) * 0.5,\n                    );\n\n                ctx.lineWidth = this._widths[i];\n                ctx.beginPath();\n                ctx.moveTo(oldPoint.x, oldPoint.y);\n                ctx.quadraticCurveTo(lastPoint.x, lastPoint.y, midPoint.x, midPoint.y);\n                ctx.stroke();\n                oldPoint = midPoint;\n            }\n            ctx.moveTo(oldPoint.x, oldPoint.y);\n            ctx.quadraticCurveTo(point.x, point.y, this._lastPoint.x, this._lastPoint.y);\n            ctx.stroke();\n\n            let radius = this.getWidth() * 0.5;\n            ctx.beginPath();\n            ctx.arc(this._lastPoint.x, this._lastPoint.y, radius, 0, 2 * Math.PI);\n            ctx.fillStyle = ctx.strokeStyle;\n            ctx.fill();\n            \n            //this.applyAutoMask();\n            \n            this.painter.baseLayer.ctx.globalAlpha = this.opacity;\n            this.painter.baseLayer.drawImage(ctx.canvas);\n            this.painter.baseLayer.ctx.globalAlpha = 1;\n        }\n    }\n\n    move(): void {\n        if (!this.painting) {\n            return;\n        }\n\n        this._lastPoint = this.mouse.copy();\n        let width = this.getWidth();\n        this._points.push(this._lastPoint);\n        const lastWidth = this._widths[this._widths.length - 1];\n        this._widths.push(Utils.clamp(lastWidth - 1, lastWidth + 1, width));\n\n        this.requestDrawPath();\n    }\n\n    pressureChanged(){\n        this.requestDrawPath();\n    }\n\n    getWidth(){\n        let pressure = Utils.clamp(0.5, 2, this.pressure * 2);\n        let speed = Utils.clamp(1, 5, this.speed);\n        return this.lineWidth * pressure / speed;\n    }\n\n    private applyAutoMask() {\n        if (!this.painter.overlayLayer || !this.painter.autoMaskCtx){\n            return;\n        }\n        \n        let ctx = this.getBufferCtx();\n        ctx.globalCompositeOperation = \"destination-in\";\n        ctx.drawImage(this.painter.autoMaskCtx.canvas, 0, 0);\n        ctx.globalCompositeOperation = \"source-over\";\n    }\n}","import Point from \"../utils/Point\";\nimport PaintView from \"../views/PaintView\";\n\n// Base class for all tools\nexport default abstract class Tool {\n    mouse: Point;\n    painting: boolean = false;\n    pressure: number = 1;\n    painter: PaintView;\n    speed: number;\n    \n    get color() { return this.painter.color };\n    get opacity() { return this.painter.opacity }\n    get lineWidth() { return this.painter.lineWidth };\n    \n    private static _bufferCtx: CanvasRenderingContext2D;\n    protected _buttonElement: HTMLElement; \n\n    constructor(painter: PaintView, buttonId: string) {\n        this.painter = painter;\n        this.mouse = new Point(0,0);\n        this._buttonElement = document.getElementById(buttonId);\n    }\n\n    // creates a context to draw the current stroke to so we can draw the complete stroke with a different\n    // operation. The buffer can be shared by different tools.\n    private createBufferCtx() {\n        let brushCanvas = document.createElement(\"canvas\");\n        brushCanvas.id = \"buffer\";\n        brushCanvas.width = this.painter.width;\n        brushCanvas.height = this.painter.height;\n        Tool._bufferCtx = <CanvasRenderingContext2D>brushCanvas.getContext(\"2d\", {alpha: true});\n        Tool._bufferCtx.imageSmoothingQuality = \"high\";\n        Tool._bufferCtx.imageSmoothingEnabled = true;\n    }\n\n    protected getBufferCtx(){\n        if (Tool._bufferCtx == null){\n            this.createBufferCtx();\n        }\n        return Tool._bufferCtx;\n    }\n\n    enable(): void {\n        this._buttonElement.classList.add(\"selected\");\n    }\n    disable(): void {\n        this._buttonElement.classList.remove(\"selected\");\n    }\n    down(): void {}\n    move(): void {}\n    up(): void {}\n    pressureChanged(): void {}\n    tick(delta: number): void {}\n    keyDown(event: KeyboardEvent): void {}\n}","import {Palette} from \"./Palette\";\nimport ImageStorage from \"../storage/ImageStorage\";\n\nexport default class ShapePalette extends Palette {\n\n    private _shapeIds: { [id : string] : string };\n    \n    get stamp() { return this.selectedOption }\n    \n    constructor(id: string) {\n        let shapeUrls: string[] = [\n            \"img/stamps/star.png\",\n            \"img/stamps/unicorn.png\",\n            \"img/stamps/snowman.png\",\n            \"img/stamps/dolphin.png\",\n            \"img/stamps/snail.png\"\n        ];\n\n        super(id, shapeUrls, true);\n        this._shapeIds = {};\n        this.selectedIndex = 0;\n\n        ImageStorage.keys()\n            .then((keys: string[]) => {\n                const shapesIds = keys.filter(x => x.startsWith(\"Shape\"));\n                for (let shapeId of shapesIds) {\n                    this.addShapeFromImageId(shapeId);\n                }\n            });\n\n        this._element.addEventListener(\"imagesaved\", (event: CustomEvent) => {\n            const id = <string>event.detail;\n            if (id.startsWith(\"Shape\")) {\n                this.addShapeFromImageId(id);\n            }\n        });\n    }\n\n    private addShapeFromImageId(stampId: string) {\n        ImageStorage.loadBlob(stampId)\n            .then(blob => {\n                const url = URL.createObjectURL(blob);\n                this._shapeIds[url] = stampId;\n                this.addOption(url);\n            })\n    }\n\n    protected optionLongClicked(event: TouchEvent, option: any, index: number) {\n        this.deleteShape(index);\n    }\n\n    updateOptionElement(element: HTMLDivElement, option: string) {\n        element.style.backgroundImage = `url(\"${option}\")`;\n    }\n\n    updateSelectedOptionElement(element: HTMLDivElement, option: any) {\n        element.innerHTML = '<i class=\"fas fa-shapes\"></i>';\n    }\n\n    private deleteShape(index: number) {\n        let option = this._options[index];\n        let stampId = this._shapeIds[option];\n        if (!stampId){\n            return;\n        }\n        ImageStorage.deleteImage(stampId)\n            .then(() => {\n                delete this._shapeIds[option];\n                this.removeOption(index);\n                if (this.selectedIndex == index){\n                    // select the following item that now has the same index\n                    this.selectedIndex = index;\n                }\n            })\n    }\n}","import {config} from \"./config\";\nimport Layer from \"./Layer\";\nimport Rect from \"./utils/Rect\";\n\nexport default class CanvasLayer extends Layer<HTMLCanvasElement> {\n\n    protected _ctx: CanvasRenderingContext2D;\n    \n    get canvas() { return this._element; }\n    get ctx() { return this._ctx; }\n\n    constructor(parent: HTMLElement, id: string, x: number, y: number, width: number, height: number) {\n        super(parent, \"canvas\", id, x, y, width, height);\n        this._ctx = <CanvasRenderingContext2D>this.canvas.getContext(\"2d\", {alpha: true});\n        this._ctx.imageSmoothingQuality = \"high\";\n        this._ctx.imageSmoothingEnabled = config.imageSmoothing;\n    }\n    \n    getData(): ImageData {\n        return this._ctx.getImageData(0, 0, this.width, this.height);\n    }\n\n    putData(data: ImageData) {\n        this._ctx.putImageData(data, 0, 0);\n    }\n    \n    drawImage(image: HTMLImageElement | HTMLCanvasElement, rect?: Rect){\n        const {x, y, width, height} = rect || {x:0, y:0, width:this.width, height:this.height};\n        this._ctx.drawImage(image, x, y, width, height);\n    }\n    \n    clear(rect?: Rect){\n        const {x, y, width, height} = rect || {x:0, y:0, width:this.width, height:this.height};\n        this._ctx.clearRect(x, y, width, height);\n    }\n}","import {config} from \"./config\";\nimport Utils from \"./utils/Utils\";\nimport Point from \"./utils/Point\";\nimport ILayer from \"./ILayer\";\n\ninterface IPointer {\n    clientX: number,\n    clientY: number\n}\n\ninterface IPointerList {\n    readonly length: number;\n    [index: number]: IPointer;\n}\n\nexport default abstract class Layer<T extends HTMLImageElement | HTMLCanvasElement> implements ILayer {\n\n    public onDoubleTap: Function | undefined;\n    \n    protected _element: T;\n    private _index: number;\n    private _pinchCenter: Point;\n    private _localDragPosition: Point;\n    private _pinchStartDist: number;\n    private _pinchStartRotation: number;\n    private _startScale: number = 1;\n    private _startRotation: number = 0;\n    private _position: Point = new Point(0, 0);\n    private _scale: number = 1;\n    private _rotation: number = 0;\n    private _lastTouchStartTime: number = 0;\n    private _pointers: PointerEvent[] = [];\n    \n    get id(): string { return this._element.id; }\n    get index(): number { return this._index; }\n    set index(v: number) {\n        this._index = v;\n        this.transform(this.position, this.scale, this.rotation);\n    }\n    get width(): number { return this._element.width; };\n    get height(): number { return this._element.height; };\n    get position() { return this._position; }\n    get rotation() { return this._rotation; }\n    get scale() { return this._scale; }\n    get floating(): boolean { return this._element.classList.contains(\"floating\"); }\n    \n    set floating(value: boolean) { \n        this._element.classList.toggle(\"floating\", value);\n        this._element.style.pointerEvents = value ? \"auto\" : \"none\";\n        if (value){\n            this.addEventListeners();\n        }\n        else {\n            this.removeEventListeners();\n        }\n    }\n\n    constructor(parent: HTMLElement, tag: string, id: string, x: number, y: number, width: number, height: number) {\n        this._element = <T>document.createElement(tag);\n        this._element.id = id;\n        this._element.classList.add(\"layer\");\n        this._index = 0;\n        this._element.width = width;\n        this._element.height = height;\n        this._element.style.width = `${width}em`;\n        this._element.style.height = `${height}em`;\n        this._element.style.pointerEvents = \"none\";\n            \n        parent.appendChild(this._element);\n        this.transform(new Point(x, y), 1, 0);\n        this.bindEventListeners();\n    }\n    \n    remove() {\n        this._element.remove();\n    }\n\n    resize(width: number, height: number) {\n        const x = this.position.x + 0.5 * (this.width - width);\n        const y = this.position.y + 0.5 * (this.height - height);\n\n        this.setPositionAndSize(x, y, width, height);\n    }\n\n    setPositionAndSize(x: number, y: number, width: number, height: number) {\n        this._element.width = width;\n        this._element.height = height;\n        this._element.style.width = `${width}em`;\n        this._element.style.height = `${height}em`;\n        this.transform(new Point(x, y), this.scale, this.rotation);\n    }\n\n    drawToCanvas(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n        let x = this._position.x + 0.5 * this.width;\n        let y = this._position.y + 0.5 * this.height;\n        ctx.setTransform(this._scale, 0, 0, this._scale, x, y);\n        ctx.rotate(this._rotation);\n        ctx.translate(-0.5 * this.width, -0.5 * this.height);\n        ctx.drawImage(this._element, 0, 0);\n        ctx.restore();\n    }\n\n    private addEventListeners() {\n        // pinch gesture handling inspired by https://codepen.io/hanseklund/pen/izloq\n        \n        this._element.addEventListener('click', this.preventDefault);\n\n        if (Utils.pointerEventsSupported()){\n            this._element.addEventListener('touchstart', this.preventDefault);\n            this._element.addEventListener('pointerdown', this.pointerDown);\n        }\n        else{\n            this._element.addEventListener('touchstart', this.touchStart);\n        }\n    }\n    \n    private removeEventListeners() {\n        this._element.removeEventListener('click', this.preventDefault);\n\n        if (Utils.pointerEventsSupported()){\n            this._element.removeEventListener('touchstart', this.preventDefault);\n            this._element.removeEventListener('pointerdown', this.pointerDown);\n        }\n        else{\n            this._element.removeEventListener('touchstart', this.touchStart);\n        }\n    }\n    \n    private preventDefault(event: Event) {\n        event.preventDefault();\n    }\n    \n    private doubleTap(event: TouchEvent | PointerEvent) {\n        if (this.onDoubleTap){\n            this.onDoubleTap(event);\n        }\n    }\n    \n    private pointerDown(event: PointerEvent){\n        event.preventDefault();\n        this._element.setPointerCapture(event.pointerId);\n        this.addPointerEvent(event);\n\n        if (this._pointers.length === 1){\n            if (event.timeStamp < this._lastTouchStartTime + config.doubleTapDelay){\n                this.doubleTap(event);\n            }\n            this._lastTouchStartTime = event.timeStamp;\n\n            this._element.addEventListener(\"pointermove\", this.pointerMove);\n            this._element.addEventListener(\"pointerup\", this.pointerUp);\n\n            this._pinchCenter = new Point(\n                this._position.x + 0.5 * this.width,\n                this._position.y + 0.5 * this.height);\n\n            if (event.altKey){\n                let p1 = this.clientToPixel(this._pointers[0]);\n                let p2 = Point.mirror(p1, this._pinchCenter);\n                this.pinchStart(p1, p2);\n            }\n            else{\n                this.dragStart(this.clientToPixel(this._pointers[0]));\n            }\n        }\n        \n        if (this._pointers.length === 2 ){\n            this.pinchStart(this.clientToPixel(this._pointers[0]), this.clientToPixel(this._pointers[1]));\n        }  \n    }\n\n    private addPointerEvent(event: PointerEvent) {\n        const index = this._pointers.findIndex(x => x.pointerId == event.pointerId);\n        if (index < 0) {\n            this._pointers.push(event);\n        } else {\n            this._pointers[index] = event;\n        }\n    }\n\n    private removePointerEvent(event: PointerEvent) {\n        const index = this._pointers.findIndex(x => x.pointerId == event.pointerId);\n        if (index >= 0) {\n            this._pointers.splice(index, 1);\n        }\n    }\n\n    private pointerMove(event: PointerEvent) {\n        event.preventDefault();\n        this.addPointerEvent(event);\n        this.move(this._pointers, event.altKey);\n    }\n\n    private pointerUp(event: PointerEvent) {\n        event.preventDefault();\n        this._element.releasePointerCapture(event.pointerId);\n        this.removePointerEvent(event);\n\n        if (this._pointers.length == 1) {\n            this.dragStart(this.clientToPixel(this._pointers[0]));\n        }\n\n        if (this._pointers.length == 0){\n            this._element.removeEventListener(\"pointermove\", this.pointerMove);\n            this._element.removeEventListener(\"pointerup\", this.pointerUp);\n        }\n    }\n\n    private touchStart(event: TouchEvent) {\n        event.preventDefault();\n\n        if (event.touches.length === 1){\n            if (event.timeStamp < this._lastTouchStartTime + config.doubleTapDelay){\n                this.doubleTap(event);\n            }\n            this._lastTouchStartTime = event.timeStamp;\n            \n            this._element.addEventListener('touchmove', this.touchMove);\n            this._element.addEventListener('touchend', this.touchEnd);\n\n            this._pinchCenter = new Point(\n                this._position.x + 0.5 * this.width,\n                this._position.y + 0.5 * this.height);\n\n            if (event.altKey){\n                let p1 = this.clientToPixel(event.touches[0]);\n                let p2 = Point.mirror(p1, this._pinchCenter);\n                this.pinchStart(p1, p2);\n            }\n            else{\n                this.dragStart(this.clientToPixel(event.touches[0]));\n            }\n        }\n        \n        if (event.touches.length === 2){\n            this.pinchStart(this.clientToPixel(event.touches[0]), this.clientToPixel(event.touches[1]));\n        }\n    }\n\n    private touchMove(event: TouchEvent) {\n        event.preventDefault();\n        this.move(event.touches, event.altKey);\n    }\n\n    private move(pointers: IPointerList, altKey: boolean) {\n        if (pointers.length === 1) {\n            if (altKey) {\n                let p1 = this.clientToPixel(pointers[0]);\n                let p2 = Point.mirror(p1, this._pinchCenter);\n                this.pinchMove(p1, p2);\n            } else {\n                this.dragMove(this.clientToPixel(pointers[0]));\n            }\n        }\n        if (pointers.length === 2) {\n            this.pinchMove(this.clientToPixel(pointers[0]), this.clientToPixel(pointers[1]));\n        }\n    }\n\n    private touchEnd (event: TouchEvent) {\n        event.preventDefault();\n        this._element.removeEventListener('touchmove', this.touchMove);\n        this._element.addEventListener('touchend', this.touchEnd);\n    }\n\n    transform(position: Point, scale: number, rotation: number) {\n        this._position = position;\n        this._rotation = rotation;\n        this._scale = scale;\n        const index = this._index;\n        this._element.style.transform = `translate(${position.x}em, ${position.y}em) rotate(${rotation}rad) scale(${scale}) translateZ(${index}px)`;\n        this._element.style.outlineWidth = `${2 / scale}em`;\n    }\n\n    private bindEventListeners() {\n        \n        // TODO: Find a better way. This is ugly:\n        this.touchStart = this.touchStart.bind(this);\n        this.touchMove = this.touchMove.bind(this);\n        this.touchEnd = this.touchEnd.bind(this);\n\n        this.pointerDown = this.pointerDown.bind(this);\n        this.pointerMove = this.pointerMove.bind(this);\n        this.pointerUp = this.pointerUp.bind(this);\n    }\n\n    private dragStart(position: Point) {\n        this._localDragPosition = Point.subtract(position, this.position);\n    }\n\n    private dragMove(position: Point) {\n        position.subtract(this._localDragPosition);\n        this.transform(position, this._scale, this._rotation);\n    }\n\n    private pinchStart(p1: Point, p2: Point) {\n        let center = Point.center(p1, p2);\n        this._pinchStartDist = Point.distance(p1, p2);\n        this._pinchStartRotation = Math.atan2(p1.y - center.y, p1.x - center.x);\n        this._startRotation = this._rotation;\n        this._startScale = this._scale;       \n    }\n\n    private pinchMove(p1: Point, p2: Point) {\n        let center = Point.center(p1, p2);\n        let distance = Point.distance(p1, p2);\n        let angle = Math.atan2(p1.y - center.y, p1.x - center.x);\n        let angleChange = angle - this._pinchStartRotation;\n\n        let scale = this._startScale * (distance / this._pinchStartDist);\n        scale = Utils.clamp(0.1, 10, scale);\n        let position = Point.center(p1, p2);\n        position.x -= 0.5 * this.width;\n        position.y -= 0.5 * this.height;\n\n        let rotation = this._startRotation + angleChange;\n        this.transform(position, scale, rotation);\n    }\n\n    private clientToPixel(position1: IPointer){\n        let parent = this._element.parentElement;\n        let rect = parent.getBoundingClientRect();\n\n        const isPortraitOrientation = rect.height > rect.width;\n\n        let nx = (position1.clientX - rect.left) / rect.width;\n        let ny = (position1.clientY - rect.top) / rect.height;\n\n        let x = (isPortraitOrientation ? 1 - ny : nx) * config.width;\n        let y = (isPortraitOrientation ? nx : ny) * config.height;\n\n        return new Point(x, y);\n    }\n}",null,"import Tool from \"./Tool\";\nimport Point from \"../utils/Point\";\nimport CanvasLayer from \"../CanvasLayer\";\nimport Rect from \"../utils/Rect\";\nimport ImageStorage from \"../storage/ImageStorage\";\nimport Utils from \"../utils/Utils\";\nimport PaintView from \"../views/PaintView\";\nimport {config} from \"../config\";\n\n// Provides a floating selection the user can manipulate \nexport default class SelectionTool extends Tool {\n    readonly selectionLayerId = \"selection-layer\";\n\n    get selectionLayer(): CanvasLayer { return <CanvasLayer>this.painter.getLayer(this.selectionLayerId) }\n    get selection(): Rect { return this._selection; }\n    get hasFloatingSelection(): boolean { return this._hasFloatingSelection; }\n    set hasFloatingSelection(value: boolean) { \n        this._hasFloatingSelection = value;\n        this.toggleFloatingSelectionButtons(value);\n    }\n    get isInShapesPalette(): boolean { return this._isInShapesPalette; }\n    set isInShapesPalette(value: boolean) { \n        this._isInShapesPalette = value;\n        this._saveButton.classList.toggle(\"disabled\", value);\n    }\n    \n    protected _startPosition: Point;\n    protected _selection: Rect = Rect.Empty();\n    private _hasFloatingSelection: boolean;\n    private _drawSelectionOutlineRequested: boolean;\n    private _isInShapesPalette: boolean;\n    private _deleteButton: HTMLDivElement;\n    private _stampButton: HTMLDivElement;\n    private _saveButton: HTMLDivElement;\n    private _fullscreenButton: HTMLDivElement;\n\n    constructor(painter: PaintView, buttonId: string) {\n        super(painter, buttonId);\n        this._deleteButton = <HTMLDivElement>document.getElementById(\"selection-delete-button\");\n        Utils.addFastClick(this._deleteButton, () => this.clearSelection());\n        this._stampButton = <HTMLDivElement>document.getElementById(\"selection-stamp-button\");\n        Utils.addFastClick(this._stampButton, () => this.paintSelectionToCanvas());\n        this._saveButton = <HTMLDivElement>document.getElementById(\"selection-save-button\");\n        Utils.addFastClick(this._saveButton, () => this.saveSelectionAsNewStamp());\n        this._fullscreenButton = <HTMLDivElement>document.getElementById(\"selection-fullscreen-button\");\n        Utils.addFastClick(this._fullscreenButton, () => this.showSelectionInFullscreen());\n        this.hasFloatingSelection = false;\n    }\n    \n    toggleFloatingSelectionButtons(visible: boolean){\n        this._deleteButton.classList.toggle(\"hidden\", !visible);\n        this._stampButton.classList.toggle(\"hidden\", !visible);\n        this._fullscreenButton.classList.toggle(\"hidden\", !visible);\n        this._saveButton.classList.toggle(\"hidden\", !visible);\n    }\n\n    enable() {\n        super.enable();\n        this.createSelectionLayer();\n        this.hasFloatingSelection = false;\n        this.isInShapesPalette = false;\n    }\n\n    disable() {\n        super.disable();\n        this.paintSelectionToCanvas();\n        this.destroySelectionLayer();\n        this.hasFloatingSelection = false;\n    }\n    \n    down() {\n        this.startNewSelection();\n    }\n\n    private startNewSelection() {\n        this.paintSelectionToCanvas();\n        this.selectionLayer.setPositionAndSize(0, 0, this.painter.width, this.painter.height);\n        this.selectionLayer.transform(new Point(0, 0), 1, 0);\n        this.selectionLayer.floating = false;\n\n        this.hasFloatingSelection = false;\n        this.isInShapesPalette = false;\n        this._startPosition = this.getMousePosition();\n        \n        let ctx = this.selectionLayer.ctx;\n        ctx.resetTransform();\n        ctx.strokeStyle = \"black\";\n        ctx.lineCap = \"round\";\n        ctx.lineJoin = \"round\";\n        ctx.lineWidth = 2;\n        ctx.setLineDash([5, 5]);\n        this.requestDrawSelectionOutline();\n    }\n\n    private getMousePosition() {\n        return this.mouse.copy().round().clamp(0, 0, this.painter.width - 1, this.painter.height - 1);\n    }\n\n    move(): void {\n        if (!this.painting) {\n            return;\n        }\n        this.mouse.round();\n\n        this.requestDrawSelectionOutline();\n    }\n    \n    up(): void {\n        this.cutSelection();\n    }\n\n    tick(delta: number) {\n        if (this._drawSelectionOutlineRequested) {\n            this.updateSelectionAndDrawOutline();\n            this._drawSelectionOutlineRequested = false;\n        }\n    }\n    \n    keyDown(event: KeyboardEvent) {\n        switch (event.code){\n            case 'Backspace':\n                this.clearSelection();\n                break;\n            case 'KeyC':\n                if (event.metaKey){\n                    this.copyToClipboard();\n                }\n                break;\n        }\n    }\n\n    private clearSelection() {\n        this.selectionLayer.clear();\n        this.startNewSelection();\n    }\n\n    setImage(image: HTMLImageElement){\n        this.hasFloatingSelection = true;\n        this.selectionLayer.resize(image.width, image.height);\n        this.selectionLayer.floating = true;\n        this.selectionLayer.drawImage(image);\n        this.isInShapesPalette = true;\n    }\n\n    setImageUrl(url: string){\n        const img = new Image();\n        img.src = url;\n        img.onload = () => {\n            this.setImage(img);\n        }\n    }\n\n    private requestDrawSelectionOutline() {\n        this._drawSelectionOutlineRequested = true;\n    }\n\n    private updateSelectionAndDrawOutline() {\n        if (this.hasFloatingSelection){\n            return;\n        }\n        this.selectionLayer.clear();\n        let ctx = this.selectionLayer.ctx;\n\n        const position = this.getMousePosition();\n\n        const x = Math.min(this._startPosition.x, position.x);\n        const y = Math.min(this._startPosition.y, position.y);\n        const width = Math.abs(this._startPosition.x - position.x);\n        const height = Math.abs(this._startPosition.y - position.y);\n        this._selection = new Rect(x, y, width, height);\n\n        ctx.strokeRect(x, y, width, height);\n    }\n    \n    private destroySelectionLayer() {\n        this.painter.removeLayer(this.selectionLayer);\n    }\n\n    private createSelectionLayer() {\n        if (this.selectionLayer){\n            return;\n        }\n\n        this.painter.addCanvasLayer(this.selectionLayerId, 0, 0, this.painter.width, this.painter.height, false);\n        this.selectionLayer.onDoubleTap = (event: TouchEvent) => {\n            if (event.altKey){\n                this.saveSelectionAsNewStamp();\n                return;\n            }\n            this.paintSelectionToCanvas();\n        }\n    }\n    \n    private cutSelection() {\n        this.selectionLayer.clear();\n        this._selection = Utils.getVisiblePixelFrame(this.painter.baseLayer.ctx, this.selection);\n        \n        if (this.selection.isEmpty()){\n            return;\n        }\n\n        this.hasFloatingSelection = true;\n        const {x, y, width, height} = this.selection;\n        \n        this.selectionLayer.setPositionAndSize(x, y, width, height);\n        this.selectionLayer.floating = true;\n        this.selectionLayer.ctx.drawImage(this.painter.baseLayer.canvas, x, y, width, height, 0, 0, width, height);\n        this.painter.baseLayer.clear(this.selection);\n    }\n\n    private paintSelectionToCanvas() {\n        if (!this.hasFloatingSelection){\n            return;\n        }\n        this.painter.recordUndo();\n        this.painter.baseLayer.ctx.globalCompositeOperation = \"source-over\";\n        this.selectionLayer.drawToCanvas(this.painter.baseLayer.ctx);\n    }\n\n    private saveSelectionAsNewStamp() {\n        ImageStorage.keys()\n            .then((keys: string[]) => {\n                const shapesIds = keys.filter(x => x.startsWith(\"Shape\"));\n                if (shapesIds.length >= config.maxShapeCount){\n                    console.log(\"Cannot save selection as shape because there are already too many in storage.\");\n                    return;\n                }\n                \n                const id = \"Shape\" + Date.now();\n                console.log(`Saving selection as: ${id}`);\n                this.selectionLayer.canvas.toBlob(blob => ImageStorage.saveImage(id, blob as Blob));\n                this.isInShapesPalette = true;\n            });\n    }\n\n\n    copyToClipboard(){\n        this.selectionLayer.canvas.toBlob(blob => navigator.clipboard.write([new ClipboardItem({'image/png': blob})]));\n        console.log(\"copied selection to clipboard\");\n    }\n\n    pasteFromClipboard() {\n        navigator.permissions.query({name: \"clipboard-read\"})\n            .then(result => {\n                if (!(result.state == \"granted\" || result.state == \"prompt\")) {\n                    return;\n                }\n                navigator.clipboard.read()\n                    .then(data => {\n                        for (let i = 0; i < data.length; i++) {\n                            if (!data[i].types.includes(\"image/png\")){\n                                continue;\n                            }\n                            data[i].getType(\"image/png\")\n                                .then(blob => {\n                                    this.setImageUrl(URL.createObjectURL(blob));\n                                })\n                        }\n                    });\n            });\n    }\n\n    private showSelectionInFullscreen() {\n        let img = new Image();\n        this.selectionLayer.canvas.toBlob(blob => img.src = URL.createObjectURL(blob));\n        img.classList.add(\"fullscreen\");\n        Utils.addFastClick(img, () => {\n            img.remove();\n        })\n        document.body.appendChild(img);\n    }\n}\n","import {View} from \"./views/View\";\n\nexport class Toolbar extends View {\n    constructor(id: string) {\n        super(id);\n        this.show();\n    }\n    \n    flip(){\n        if (this._element.classList.contains(\"left\") || this._element.classList.contains(\"right\")){\n            this._element.classList.toggle(\"left\");\n            this._element.classList.toggle(\"right\");\n        }\n        if (this._element.classList.contains(\"top\") || this._element.classList.contains(\"bottom\")){\n            this._element.classList.toggle(\"top\");\n            this._element.classList.toggle(\"bottom\");\n        }\n    }\n}"],"names":["App","preventOverScroll","_sheet","document","getElementById","window","addEventListener","event","_this","OnResize","bookView","onImageSelected","id","paintView","loadImage","then","openView","portrait","innerWidth","innerHeight","isLargeScreen","windowWidth","Math","max","windowHeight","min","horizontalPixelSize","width","verticalPixelSize","height","virtualPixelSize","fullScreenCanvas","style","fontSize","left","view","activeView","hide","show","ontouchmove","preventDefault","app","BookView","createImages","_thumbnails","sheets","sheet","thumbnail","_element","push","View","console","error","hasChildNodes","removeChild","firstChild","classList","remove","add","visible","toggle","contains","config","debug","doubleTapDelay","maxShapeCount","pixelPerfect","imageSmoothing","overlay","Thumbnail","parent","element","createElement","addFastClick","detail","_image","Image","draggable","appendChild","overlayPath","getOverlayPath","_overlay","src","loadBlob","blob","_this2","URL","createObjectURL","display","Utils","_times","_fps","_fpsDisplay","_fpsCounterEnabled","PointerEvent","page","find","e","message","optionalParams","log","now","performance","length","shift","lerp","innerText","toFixed","callback","delay","timer","caller","called","setTimeout","call","stopImmediatePropagation","clearTimeout","elements","getElementsByTagName","i","dispatchEvent","Date","toString","a","b","alpha","lower","upper","n","color1","color2","aa","ba","ga","ra","ab","bb","gb","rb","r","floor","g","ctxA","ctxB","ctxMask","canvas","dataA","getImageData","dataB","dataMask","a32","Uint8ClampedArray","data","buffer","b32","m32","putImageData","h","parseInt","sourceCtx","mask","startPosition","threshold","sourceData","sourcePixels","copy","round","startIndex","x","y","startR","startG","startB","startA","stack","pos","pop","isBorderPixel","minX","scanLeft","maxX","scanRight","addToStack","setValue","index","indexA","ctx","rect","Empty","pixels","minY","maxY","cy","cx","_x","_i","_x2","_y","_i2","_y2","_i3","Point","p","clamp","dx","dy","sqrt","center","p1","p2","Rect","ImageStorage","Promise","reject","adapter","getItem","resolve","img","imageFromBlob","decode","onload","loadImageFromStore","setItem","CustomEvent","DispatchEventToAllElements","removeItem","keys","_adapter","LocalForageAdapter","createInstance","name","_imageStore","param","iterate","f","exports","module","define","amd","global","self","localforage","t","o","u","require","Error","code","l","s","_dereq_","Mutation","MutationObserver","WebKitMutationObserver","scheduleDrain","observer","nextTick","createTextNode","observe","characterData","setImmediate","MessageChannel","channel","port1","onmessage","port2","postMessage","scriptEl","onreadystatechange","parentNode","documentElement","draining","queue","oldQueue","len","immediate","task","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","state","outcome","INTERNAL","safelyResolveThenable","prototype","onRejected","onFulfilled","promise","constructor","unwrap","QueueItem","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","value","func","returnValue","result","tryCatch","getThen","status","thenable","obj","apply","arguments","onSuccess","onError","tryToUnwrap","out","reason","all","iterable","Object","values","Array","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","Symbol","iterator","instance","Constructor","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","getIDB","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","parts","properties","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","errorCallback","key","warn","String","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","txn","transaction","createBlob","objectStore","put","onabort","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","_checkBlobSupportWithoutCaching","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","err","upgradeNeeded","createDbContext","db","_deferReadiness","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_advanceReadiness","_getConnection","defaultVersion","isNewStore","objectStoreNames","isDowngrade","isUpgrade","incVersion","reader","FileReader","onloadend","base64","btoa","target","__local_forage_encoded_blob","readAsBinaryString","encodedBlob","arrayBuff","_binStringToArrayBuffer","atob","_initReady","_dbInfo","executeTwoCallbacks","forages","forage","_getOriginalConnection","_isUpgradeNeeded","_getUpgradedConnection","_rejectReadiness","mode","retries","undefined","tx","_tryReconnect","createTransaction","options","ready","_fullyReady","initPromises","j","ignoreErrors","slice","_defaultConfig","k","normalizeKey","store","req","get","_isEncodedBlob","_decodeBlob","executeCallback","openCursor","iterationNumber","cursor","_checkBlobSupport","blobSupport","_encodeBlob","clear","count","advanced","openKeyCursor","advance","getCallback","currentConfig","isCurrentDb","dbPromise","dropDBPromise","deleteDatabase","onblocked","_forage","dropObjectPromise","deleteObjectStore","_forage2","asyncStorage","_driver","_initStorage","_support","isIndexedDBValid","dropInstance","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","serializedString","bufferLength","encoded1","encoded2","encoded3","encoded4","bytes","base64String","substring","valueType","marker","bufferToString","fileReader","str","readAsArrayBuffer","JSON","stringify","parse","blobType","matcher","stringToBuffer","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","serialize","deserialize","executeSql","dbInfoPromise","description","size","createDbTable","serializer","sqlStatement","args","SYNTAX_ERR","results","rows","tryExecuteSql","item","retriesLeft","originalValue","sqlError","QUOTA_ERR","_setItem","c","storeNames","getAllStoreNames","operationInfo","operations","dropTable","webSQLStorage","_initStorage$1","isWebSQLValid","iterate$1","getItem$1","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","dropInstance$1","localStorage","defaultConfig","keyPrefix","localStorageTestKey","checkIfLocalStorageThrows","_getKeyPrefix","_isLocalStorageUsable","keyPrefixLength","itemKey","localStorageWrapper","_initStorage$2","isLocalStorageValid","iterate$2","getItem$2","setItem$2","removeItem$2","clear$2","length$2","key$2","keys$2","dropInstance$2","sameValue","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","localForageInstance","libraryMethod","_args","_key","hasOwnProperty","LocalForage","_classCallCheck","driverTypeKey","driverName","defineDriver","extend","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","_extend","setDriverToConfig","currentDriverIndex","extendSelfWithDriver","driverPromiseLoop","oldDriverSetDone","initDriver","supports","libraryMethodsAndProperties","callWhenReady","localforage_js","StorageAdapter","PaintView","_color","_stamp","_opacity","_lineWidth","_autoMaskCtx","_layers","onBackClicked","pointerType","buttons","addCanvasLayer","addEventListeners","createButtons","createToolbar","createPalettes","createTools","autoMaskCanvas","getContext","backButton","_undoButton","undo","importImageField","files","file","image","setTool","selectionTool","setImage","_importImageButton","click","layer","floating","addLayer","overlayLayer","removeLayer","url","removeOverlay","createOverlay","penButton","_this3","markerTool","eraserButton","addLongClick","eraserTool","selectionButton","_tools","addTool","tool","_mainToolbar","_contextToolbar","_sizePalette","onSelectionChanged","lineWidth","_this4","_colorPalette","color","_shapePalette","stamp","setImageUrl","_currentTool","disable","enable","setVisible","baseLayer","pointerEvents","_this5","keyDown","pointerDown","pointerMove","pointerUp","touchStart","touchMove","touchEnd","getBoundingClientRect","isPortraitOrientation","nx","clientX","ny","clientY","top","touch","isVisible","metaKey","pasteFromClipboard","_currentTouchId","setPointerCapture","pointerId","pressure","down","timeStamp","getPointerEventPosition","move","releasePointerCapture","up","getPointerEventPaintingFlag","force","pressureChanged","targetTouches","identifier","getTouchEventPosition","findTouch","touches","mouse","isPainting","newMouse","delta","distance","timeDelta","_timeStamp","speed","collapseAll","recordUndo","painting","saveImage","registerUndo","save","_undoBuffer","getData","updateUndoButtonState","swapBuffers","undoBuffer","putData","_this6","_imageId","drawImage","setOverlay","toBlob","_this7","clearUndoBuffer","_autoMaskCaptured","requestAnimationFrame","_this8","tick","_this9","updateFPSCounter","_tickTimeStamp","position","imageData","ColorPalette","selectedOption","colors","selectedIndex","option","background","Palette","_selectedIndex","_options","updateSelectedOptionElement","_selectedElement","rightAlign","_optionElements","createOptions","collapse","addSelectedOption","addOptionElements","_expandedPalette","isCollapsed","expand","addOptionElement","updateOptionsWidth","splice","recreateOptions","_optionsElement","addArrowElement","dataset","optionLongClicked","optionClicked","updateOptionElement","SizePalette","sizes","innerHTML","PenTool","painter","buttonId","operation","_operation","captureAutoMask","_lastPoint","_points","_widths","getWidth","getBufferCtx","strokeStyle","lineCap","lineJoin","globalCompositeOperation","requestDrawPath","_drawPathRequested","drawPath","clearRect","point","oldPoint","lastPoint","midPoint","beginPath","moveTo","quadraticCurveTo","stroke","radius","arc","PI","fillStyle","fill","globalAlpha","opacity","lastWidth","autoMaskCtx","Tool","_buttonElement","brushCanvas","_bufferCtx","imageSmoothingQuality","imageSmoothingEnabled","createBufferCtx","ShapePalette","shapeUrls","_shapeIds","shapesIds","filter","startsWith","shapeId","addShapeFromImageId","stampId","addOption","deleteShape","backgroundImage","deleteImage","removeOption","CanvasLayer","_ctx","Layer","_index","v","transform","scale","rotation","_position","_rotation","_scale","removeEventListeners","tag","bindEventListeners","setPositionAndSize","setTransform","rotate","translate","restore","pointerEventsSupported","removeEventListener","onDoubleTap","addPointerEvent","_pointers","_lastTouchStartTime","doubleTap","_pinchCenter","altKey","clientToPixel","mirror","pinchStart","dragStart","findIndex","removePointerEvent","pointers","pinchMove","dragMove","outlineWidth","bind","_localDragPosition","subtract","_pinchStartDist","_pinchStartRotation","atan2","_startRotation","_startScale","angle","angleChange","position1","parentElement","ImageLayer","resize","naturalWidth","naturalHeight","SelectionTool","getLayer","selectionLayerId","_selection","_hasFloatingSelection","toggleFloatingSelectionButtons","_isInShapesPalette","_saveButton","_deleteButton","clearSelection","_stampButton","paintSelectionToCanvas","saveSelectionAsNewStamp","_fullscreenButton","showSelectionInFullscreen","hasFloatingSelection","createSelectionLayer","isInShapesPalette","destroySelectionLayer","startNewSelection","selectionLayer","_startPosition","getMousePosition","resetTransform","setLineDash","requestDrawSelectionOutline","cutSelection","_drawSelectionOutlineRequested","updateSelectionAndDrawOutline","copyToClipboard","abs","strokeRect","getVisiblePixelFrame","selection","isEmpty","drawToCanvas","clipboard","write","ClipboardItem","permissions","query","read","types","getType","body","Toolbar"],"version":3,"file":"index.20f82bec.js.map"}